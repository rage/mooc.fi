/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

declare module "@apollo/client" {

  export function gql(source: "\n  mutation updateUserName($first_name: String, $last_name: String) {\n    updateUserName(first_name: $first_name, last_name: $last_name) {\n      id\n      first_name\n      last_name\n    }\n  }\n"): typeof import('./graphql').updateUserNameDocument;
  export function gql(source: "\n  query AllCoursesDetails {\n    courses {\n      id\n      slug\n      name\n      teacher_in_charge_name\n      teacher_in_charge_email\n      start_date\n      completion_email {\n        name\n        id\n      }\n      course_stats_email {\n        id\n      }\n    }\n  }\n"): typeof import('./graphql').AllCoursesDetailsDocument;
  export function gql(source: "\n  query AllCompletions(\n    $course: String!\n    $cursor: String\n    $completionLanguage: String\n    $search: String\n  ) {\n    completionsPaginated(\n      course: $course\n      completion_language: $completionLanguage\n      search: $search\n      first: 50\n      after: $cursor\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          email\n          completion_language\n          created_at\n          user {\n            id\n            first_name\n            last_name\n            student_number\n          }\n          course {\n            id\n            name\n          }\n          completions_registered {\n            id\n            organization {\n              id\n              slug\n            }\n          }\n        }\n      }\n    }\n  }\n"): typeof import('./graphql').AllCompletionsDocument;
  export function gql(source: "\n  query AllCompletionsPrevious(\n    $course: String!\n    $cursor: String\n    $completionLanguage: String\n    $search: String\n  ) {\n    completionsPaginated(\n      course: $course\n      completion_language: $completionLanguage\n      search: $search\n      last: 50\n      before: $cursor\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          email\n          completion_language\n          created_at\n          user {\n            id\n            first_name\n            last_name\n            student_number\n          }\n          course {\n            id\n            name\n          }\n          completions_registered {\n            id\n            organization {\n              id\n              slug\n            }\n          }\n        }\n      }\n    }\n  }\n"): typeof import('./graphql').AllCompletionsPreviousDocument;
  export function gql(source: "\n  query UserCourseSettings(\n    $course_id: ID!\n    $skip: Int\n    $after: String\n    $search: String\n  ) {\n    userCourseSettings(\n      course_id: $course_id\n      first: 15\n      after: $after\n      skip: $skip\n      search: $search\n    ) {\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      edges {\n        node {\n          id\n          user {\n            id\n            first_name\n            last_name\n            email\n            student_number\n            real_student_number\n            progress(course_id: $course_id) {\n              course {\n                name\n                id\n              }\n              ...ProgressUserCourseProgress\n              ...ProgressUserCourseServiceProgress\n            }\n          }\n        }\n      }\n      totalCount\n    }\n  }\n  \n  \n"): typeof import('./graphql').UserCourseSettingsDocument;
  export function gql(source: "\n  query ExportUserCourseProgesses(\n    $course_slug: String!\n    $skip: Int\n    $take: Int\n  ) {\n    userCourseProgresses(course_slug: $course_slug, skip: $skip, take: $take) {\n      id\n      user {\n        id\n        email\n        student_number\n        real_student_number\n        upstream_id\n        first_name\n        last_name\n      }\n      progress\n      user_course_settings {\n        course_variant\n        country\n        language\n      }\n    }\n  }\n"): typeof import('./graphql').ExportUserCourseProgessesDocument;
  export function gql(source: "\n  mutation updateUpdateAccountResearchConsent($value: Boolean!) {\n    updateResearchConsent(value: $value) {\n      id\n    }\n  }\n"): typeof import('./graphql').updateUpdateAccountResearchConsentDocument;
  export function gql(source: "\n  query UserPoints {\n    currentUser {\n      ...UserPointsFragment\n    }\n  }\n  \n"): typeof import('./graphql').UserPointsDocument;
  export function gql(source: "\n  fragment CompletionCourse on Completion {\n    course {\n      id\n      slug\n      name\n      photo {\n        id\n        uncompressed\n      }\n      has_certificate\n    }\n  }\n"): typeof import('./graphql').CompletionCourseFragmentDoc;
  export function gql(source: "\n  fragment UserCompletions on User {\n    completions {\n      id\n      completion_language\n      student_number\n      created_at\n      tier\n      eligible_for_ects\n      completion_date\n      ...CompletionCourse\n      completions_registered {\n        id\n        created_at\n        organization {\n          slug\n        }\n      }\n    }\n  }\n  \n"): typeof import('./graphql').UserCompletionsFragmentDoc;
  export function gql(source: "\n  fragment CompletionsRegistered on Completion {\n    completions_registered {\n      id\n      created_at\n      organization {\n        slug\n      }\n    }\n  }\n"): typeof import('./graphql').CompletionsRegisteredFragmentDoc;
  export function gql(source: "\n  fragment CoursePhoto on Course {\n    photo {\n      id\n      compressed\n      uncompressed\n    }\n  }\n"): typeof import('./graphql').CoursePhotoFragmentDoc;
  export function gql(source: "\n  fragment UserPointsFragment on User {\n    id\n    first_name\n    last_name\n    email\n    student_number\n    progresses {\n      course {\n        name\n        id\n      }\n      ...ProgressUserCourseProgress\n      ...ProgressUserCourseServiceProgress\n    }\n  }\n  \n  \n"): typeof import('./graphql').UserPointsFragmentFragmentDoc;
  export function gql(source: "\n  fragment UserCourseProgress on UserCourseProgress {\n    id\n    course_id\n    max_points\n    n_points\n    progress\n    extra\n    exercise_progress {\n      total\n      exercises\n    }\n  }\n"): typeof import('./graphql').UserCourseProgressFragmentDoc;
  export function gql(source: "\n  fragment ProgressUserCourseProgress on Progress {\n    user_course_progress {\n      ...UserCourseProgress\n    }\n  }\n  \n"): typeof import('./graphql').ProgressUserCourseProgressFragmentDoc;
  export function gql(source: "\n  fragment UserCourseSummaryUserCourseProgress on UserCourseSummary {\n    user_course_progress {\n      ...UserCourseProgress\n    }\n  }\n  \n"): typeof import('./graphql').UserCourseSummaryUserCourseProgressFragmentDoc;
  export function gql(source: "\n  fragment UserCourseServiceProgress on UserCourseServiceProgress {\n    progress\n    service {\n      name\n      id\n    }\n  }\n"): typeof import('./graphql').UserCourseServiceProgressFragmentDoc;
  export function gql(source: "\n  fragment ProgressUserCourseServiceProgress on Progress {\n    user_course_service_progresses {\n      ...UserCourseServiceProgress\n    }\n  }\n  \n"): typeof import('./graphql').ProgressUserCourseServiceProgressFragmentDoc;
  export function gql(source: "\n  fragment UserCourseSummaryUserCourseServiceProgress on UserCourseSummary {\n    user_course_service_progresses {\n      ...UserCourseServiceProgress\n    }\n  }\n  \n"): typeof import('./graphql').UserCourseSummaryUserCourseServiceProgressFragmentDoc;
  export function gql(source: "\n  fragment UserOrganizationData on UserOrganization {\n    id\n    # confirmed\n    # consented\n    organization {\n      id\n      slug\n      hidden\n      # required_confirmation\n      # required_organization_email\n      organization_translations {\n        language\n        name\n        information\n      }\n    }\n  }\n"): typeof import('./graphql').UserOrganizationDataFragmentDoc;
  export function gql(source: "\n  mutation CreateRegistrationAttemptDate(\n    $id: ID!\n    $completion_registration_attempt_date: DateTime!\n  ) {\n    createRegistrationAttemptDate(\n      id: $id\n      completion_registration_attempt_date: $completion_registration_attempt_date\n    ) {\n      id\n      completion_registration_attempt_date\n    }\n  }\n"): typeof import('./graphql').CreateRegistrationAttemptDateDocument;
  export function gql(source: "\n  mutation addCourse($course: CourseCreateArg!) {\n    addCourse(course: $course) {\n      id\n      slug\n      ects\n      name\n      order\n      study_module_order\n      photo {\n        id\n        name\n        original\n        original_mimetype\n        compressed\n        compressed_mimetype\n        uncompressed\n        uncompressed_mimetype\n      }\n      course_translations {\n        id\n        language\n        name\n        description\n        link\n      }\n      open_university_registration_links {\n        id\n        course_code\n        language\n        link\n      }\n      study_modules {\n        id\n      }\n      course_variants {\n        id\n        slug\n        description\n      }\n      course_aliases {\n        id\n        course_code\n      }\n      user_course_settings_visibilities {\n        id\n        language\n      }\n    }\n  }\n"): typeof import('./graphql').addCourseDocument;
  export function gql(source: "\n  mutation updateCourse($course: CourseUpsertArg!) {\n    updateCourse(course: $course) {\n      id\n      slug\n      ects\n      name\n      order\n      study_module_order\n      photo {\n        id\n        name\n        original\n        original_mimetype\n        compressed\n        compressed_mimetype\n        uncompressed\n        uncompressed_mimetype\n      }\n      course_translations {\n        id\n        language\n        name\n        description\n        link\n      }\n      open_university_registration_links {\n        id\n        course_code\n        language\n        link\n      }\n      study_modules {\n        id\n      }\n      course_variants {\n        id\n        slug\n        description\n      }\n      course_aliases {\n        id\n        course_code\n      }\n      completion_email {\n        id\n        name\n        title\n        txt_body\n        html_body\n      }\n      user_course_settings_visibilities {\n        id\n        language\n      }\n      course_stats_email {\n        id\n        name\n        title\n        txt_body\n        html_body\n      }\n    }\n  }\n"): typeof import('./graphql').updateCourseDocument;
  export function gql(source: "\n  mutation deleteCourse($id: ID!) {\n    deleteCourse(id: $id) {\n      id\n      slug\n    }\n  }\n"): typeof import('./graphql').deleteCourseDocument;
  export function gql(source: "\n  mutation UpdateEmailTemplate(\n    $id: ID!\n    $name: String\n    $html_body: String\n    $txt_body: String\n    $title: String\n    $template_type: String\n    $triggered_automatically_by_course_id: String\n    $exercise_completions_threshold: Int\n    $points_threshold: Int\n  ) {\n    updateEmailTemplate(\n      id: $id\n      name: $name\n      html_body: $html_body\n      txt_body: $txt_body\n      title: $title\n      template_type: $template_type\n      triggered_automatically_by_course_id: $triggered_automatically_by_course_id\n      exercise_completions_threshold: $exercise_completions_threshold\n      points_threshold: $points_threshold\n    ) {\n      id\n      name\n      html_body\n      txt_body\n      title\n      template_type\n      triggered_automatically_by_course_id\n      exercise_completions_threshold\n      points_threshold\n    }\n  }\n"): typeof import('./graphql').UpdateEmailTemplateDocument;
  export function gql(source: "\n  mutation AddEmailTemplate(\n    $name: String!\n    $html_body: String\n    $txt_body: String\n    $title: String\n    $template_type: String\n    $triggered_automatically_by_course_id: String\n    $exercise_completions_threshold: Int\n    $points_threshold: Int\n  ) {\n    addEmailTemplate(\n      name: $name\n      html_body: $html_body\n      txt_body: $txt_body\n      title: $title\n      template_type: $template_type\n      triggered_automatically_by_course_id: $triggered_automatically_by_course_id\n      exercise_completions_threshold: $exercise_completions_threshold\n      points_threshold: $points_threshold\n    ) {\n      id\n      name\n      html_body\n      txt_body\n      title\n      template_type\n      triggered_automatically_by_course_id\n      exercise_completions_threshold\n      points_threshold\n    }\n  }\n"): typeof import('./graphql').AddEmailTemplateDocument;
  export function gql(source: "\n  mutation DeleteEmailTemplate($id: ID!) {\n    deleteEmailTemplate(id: $id) {\n      id\n      name\n      html_body\n      txt_body\n      title\n    }\n  }\n"): typeof import('./graphql').DeleteEmailTemplateDocument;
  export function gql(source: "\n  mutation addStudyModule($study_module: StudyModuleCreateArg!) {\n    addStudyModule(study_module: $study_module) {\n      id\n      slug\n      name\n      image\n      order\n      study_module_translations {\n        id\n        language\n        name\n        description\n      }\n    }\n  }\n"): typeof import('./graphql').addStudyModuleDocument;
  export function gql(source: "\n  mutation updateStudyModule($study_module: StudyModuleUpsertArg!) {\n    updateStudyModule(study_module: $study_module) {\n      id\n      slug\n      name\n      image\n      order\n      study_module_translations {\n        id\n        language\n        name\n        description\n      }\n    }\n  }\n"): typeof import('./graphql').updateStudyModuleDocument;
  export function gql(source: "\n  mutation deleteStudyModule($id: ID!) {\n    deleteStudyModule(id: $id) {\n      id\n      slug\n    }\n  }\n"): typeof import('./graphql').deleteStudyModuleDocument;
  export function gql(source: "\n  query AllCourses($language: String) {\n    courses(orderBy: { order: asc }, language: $language) {\n      id\n      slug\n      name\n      order\n      study_module_order\n      ...CoursePhoto\n      promote\n      status\n      start_point\n      study_module_start_point\n      hidden\n      description\n      link\n      upcoming_active_link\n      study_modules {\n        id\n        slug\n      }\n      course_translations {\n        id\n        language\n        name\n      }\n      user_course_settings_visibilities {\n        id\n        language\n      }\n    }\n  }\n  \n"): typeof import('./graphql').AllCoursesDocument;
  export function gql(source: "\n  query AllEditorCourses(\n    $search: String\n    $hidden: Boolean\n    $handledBy: String\n    $status: [CourseStatus!]\n  ) {\n    courses(\n      orderBy: { name: asc }\n      search: $search\n      hidden: $hidden\n      handledBy: $handledBy\n      status: $status\n    ) {\n      id\n      name\n      slug\n      order\n      status\n      hidden\n      tier\n      instructions\n      completions_handled_by {\n        id\n      }\n      start_date\n      end_date\n      support_email\n      teacher_in_charge_email\n      teacher_in_charge_name\n      ...CoursePhoto\n      course_translations {\n        id\n        language\n        name\n      }\n      course_variants {\n        id\n        slug\n        description\n      }\n      course_aliases {\n        id\n        course_code\n      }\n      user_course_settings_visibilities {\n        id\n        language\n      }\n      upcoming_active_link\n    }\n    currentUser {\n      id\n      administrator\n    }\n  }\n  \n"): typeof import('./graphql').AllEditorCoursesDocument;
  export function gql(source: "\n  query CheckSlug($slug: String!) {\n    course(slug: $slug) {\n      id\n      slug\n      name\n      description\n      instructions\n    }\n  }\n"): typeof import('./graphql').CheckSlugDocument;
  export function gql(source: "\n  query CourseEditorStudyModules {\n    study_modules {\n      id\n      name\n      slug\n    }\n  }\n"): typeof import('./graphql').CourseEditorStudyModulesDocument;
  export function gql(source: "\n  query CourseEditorCourses {\n    courses {\n      id\n      slug\n      name\n      course_translations {\n        id\n        name\n        language\n      }\n      photo {\n        id\n        name\n        original\n        original_mimetype\n        compressed\n        compressed_mimetype\n        uncompressed\n        uncompressed_mimetype\n      }\n    }\n  }\n"): typeof import('./graphql').CourseEditorCoursesDocument;
  export function gql(source: "\n  query HandlerCourses {\n    handlerCourses {\n      id\n      slug\n      name\n    }\n  }\n"): typeof import('./graphql').HandlerCoursesDocument;
  export function gql(source: "\n  query CourseDetails($slug: String) {\n    course(slug: $slug) {\n      id\n      name\n      slug\n      ects\n      order\n      study_module_order\n      teacher_in_charge_name\n      teacher_in_charge_email\n      support_email\n      start_date\n      end_date\n      tier\n      photo {\n        id\n        compressed\n        compressed_mimetype\n        uncompressed\n        uncompressed_mimetype\n      }\n      promote\n      start_point\n      hidden\n      study_module_start_point\n      status\n      course_translations {\n        id\n        name\n        language\n        description\n        instructions\n        link\n      }\n      open_university_registration_links {\n        id\n        course_code\n        language\n        link\n      }\n      study_modules {\n        id\n      }\n      course_variants {\n        id\n        slug\n        description\n      }\n      course_aliases {\n        id\n        course_code\n      }\n      inherit_settings_from {\n        id\n      }\n      completions_handled_by {\n        id\n      }\n      has_certificate\n      user_course_settings_visibilities {\n        id\n        language\n      }\n      upcoming_active_link\n      automatic_completions\n      automatic_completions_eligible_for_ects\n      exercise_completions_needed\n      points_needed\n    }\n  }\n"): typeof import('./graphql').CourseDetailsDocument;
  export function gql(source: "\n  query AllEmailTemplates {\n    email_templates {\n      id\n      name\n      txt_body\n      html_body\n      title\n      template_type\n      triggered_automatically_by_course_id\n      exercise_completions_threshold\n      points_threshold\n    }\n  }\n"): typeof import('./graphql').AllEmailTemplatesDocument;
  export function gql(source: "\n  query EmailTemplate($id: ID!) {\n    email_template(id: $id) {\n      id\n      created_at\n      updated_at\n      name\n      txt_body\n      html_body\n      title\n      template_type\n      triggered_automatically_by_course_id\n      exercise_completions_threshold\n      points_threshold\n    }\n  }\n"): typeof import('./graphql').EmailTemplateDocument;
  export function gql(source: "\n  query Organizations {\n    organizations {\n      id\n      slug\n      hidden\n      # required_confirmation\n      # required_organization_email\n      organization_translations {\n        language\n        name\n        information\n      }\n    }\n  }\n"): typeof import('./graphql').OrganizationsDocument;
  export function gql(source: "\n  query CurrentUserOrganizations {\n    currentUser {\n      user_organizations {\n        ...UserOrganizationData\n        # user_organization_join_confirmations {\n        #   ...UserOrganizationJoinConfirmationData\n        # }\n      }\n    }\n  }\n  \n"): typeof import('./graphql').CurrentUserOrganizationsDocument;
  export function gql(source: "\n  query OrganizationById($id: ID!) {\n    organization(id: $id) {\n      hidden\n      organization_translations {\n        name\n      }\n    }\n  }\n"): typeof import('./graphql').OrganizationByIdDocument;
  export function gql(source: "\n  query AllModules($language: String) {\n    study_modules(orderBy: { id: asc }, language: $language) {\n      id\n      slug\n      name\n      description\n      image\n      order\n    }\n  }\n"): typeof import('./graphql').AllModulesDocument;
  export function gql(source: "\n  query AllEditorModulesWithTranslations {\n    study_modules(orderBy: { id: asc }) {\n      id\n      slug\n      name\n      image\n      order\n      study_module_translations {\n        id\n        language\n        name\n        description\n      }\n    }\n  }\n"): typeof import('./graphql').AllEditorModulesWithTranslationsDocument;
  export function gql(source: "\n  query checkModuleSlug($slug: String!) {\n    study_module_exists(slug: $slug)\n  }\n"): typeof import('./graphql').checkModuleSlugDocument;
  export function gql(source: "\n  query UserSummary($upstream_id: Int) {\n    user(upstream_id: $upstream_id) {\n      id\n      username\n      user_course_summary {\n        course {\n          id\n          name\n          slug\n          has_certificate\n          photo {\n            id\n            uncompressed\n          }\n          exercises {\n            id\n            name\n            custom_id\n            course_id\n            part\n            section\n            max_points\n            deleted\n          }\n        }\n        exercise_completions {\n          id\n          exercise_id\n          created_at\n          updated_at\n          attempted\n          completed\n          timestamp\n          n_points\n          exercise_completion_required_actions {\n            id\n            value\n          }\n        }\n        ...UserCourseSummaryUserCourseProgress\n        ...UserCourseSummaryUserCourseServiceProgress\n        completion {\n          id\n          course_id\n          created_at\n          updated_at\n          tier\n          grade\n          project_completion\n          completion_language\n          completion_date\n          registered\n          eligible_for_ects\n          student_number\n          email\n          ...CompletionsRegistered\n        }\n      }\n    }\n  }\n  \n  \n  \n"): typeof import('./graphql').UserSummaryDocument;
  export function gql(source: "\n  query CurrentUserUserOverView {\n    currentUser {\n      id\n      upstream_id\n      first_name\n      last_name\n      email\n      completions {\n        id\n        completion_language\n        student_number\n        created_at\n        tier\n        eligible_for_ects\n        completion_date\n        registered\n        ...CompletionCourse\n        ...CompletionsRegistered\n      }\n      research_consent\n    }\n  }\n  \n  \n"): typeof import('./graphql').CurrentUserUserOverViewDocument;
  export function gql(source: "\n  query UserOverView {\n    currentUser {\n      id\n      first_name\n      last_name\n      email\n    }\n  }\n"): typeof import('./graphql').UserOverViewDocument;
  export function gql(source: "\n  query ConnectedUser {\n    currentUser {\n      id\n      upstream_id\n      verified_users {\n        id\n        created_at\n        updated_at\n        display_name\n        organization {\n          id\n          organization_translations {\n            language\n            name\n          }\n        }\n      }\n    }\n  }\n"): typeof import('./graphql').ConnectedUserDocument;
  export function gql(source: "\n  query ConnectionTest {\n    currentUser {\n      id\n      upstream_id\n      first_name\n      last_name\n      student_number\n      email\n      verified_users {\n        id\n        organization {\n          slug\n          organization_translations {\n            language\n            name\n          }\n        }\n        created_at\n        personal_unique_code\n        display_name\n      }\n    }\n  }\n"): typeof import('./graphql').ConnectionTestDocument;
  export function gql(source: "\n  query CompletionCourseDetails($slug: String) {\n    course(slug: $slug) {\n      id\n      name\n    }\n  }\n"): typeof import('./graphql').CompletionCourseDetailsDocument;
  export function gql(source: "\n  query CourseDetailsFromSlugQuery($slug: String) {\n    course(slug: $slug) {\n      id\n      slug\n      name\n      teacher_in_charge_name\n      teacher_in_charge_email\n      start_date\n      completion_email {\n        name\n        id\n      }\n      course_stats_email {\n        id\n        name\n      }\n    }\n  }\n"): typeof import('./graphql').CourseDetailsFromSlugQueryDocument;
  export function gql(source: "\n  query UserCourseStatsSubscriptions {\n    currentUser {\n      id\n      course_stats_subscriptions {\n        id\n        email_template {\n          id\n        }\n      }\n    }\n  }\n"): typeof import('./graphql').UserCourseStatsSubscriptionsDocument;
  export function gql(source: "\n  mutation UserCourseStatsSubscribe($id: ID!) {\n    createCourseStatsSubscription(id: $id) {\n      id\n    }\n  }\n"): typeof import('./graphql').UserCourseStatsSubscribeDocument;
  export function gql(source: "\n  mutation UserCourseStatsUnsubscribe($id: ID!) {\n    deleteCourseStatsSubscription(id: $id) {\n      id\n    }\n  }\n"): typeof import('./graphql').UserCourseStatsUnsubscribeDocument;
  export function gql(source: "\n  mutation RecheckCompletionMutation($slug: String) {\n    recheckCompletions(slug: $slug)\n  }\n"): typeof import('./graphql').RecheckCompletionMutationDocument;
  export function gql(source: "\n  mutation AddManualCompletion(\n    $course_id: String!\n    $completions: [ManualCompletionArg!]\n  ) {\n    addManualCompletion(course_id: $course_id, completions: $completions) {\n      id\n      created_at\n      updated_at\n      completion_language\n      grade\n      user {\n        upstream_id\n        username\n        email\n      }\n    }\n  }\n"): typeof import('./graphql').AddManualCompletionDocument;
  export function gql(source: "\n  query CourseIdBySluq($slug: String) {\n    course(slug: $slug) {\n      id\n    }\n  }\n"): typeof import('./graphql').CourseIdBySluqDocument;
  export function gql(source: "\n  query CourseDetailsFromSlug($slug: String) {\n    course(slug: $slug) {\n      id\n      name\n    }\n  }\n"): typeof import('./graphql').CourseDetailsFromSlugDocument;
  export function gql(source: "\n  query RegisterCompletionUserOverView {\n    currentUser {\n      id\n      upstream_id\n      first_name\n      last_name\n      completions {\n        id\n        email\n        completion_language\n        completion_link\n        student_number\n        created_at\n        course {\n          id\n          slug\n          name\n          ects\n        }\n        completions_registered {\n          id\n          completion_id\n          organization {\n            slug\n          }\n        }\n        eligible_for_ects\n      }\n    }\n  }\n"): typeof import('./graphql').RegisterCompletionUserOverViewDocument;
  export function gql(source: "\n  query UserOrganizations($user_id: ID) {\n    userOrganizations(user_id: $user_id) {\n      id\n      organization {\n        id\n      }\n    }\n  }\n"): typeof import('./graphql').UserOrganizationsDocument;
  export function gql(source: "\n  mutation addUserOrganization($user_id: ID!, $organization_id: ID!) {\n    addUserOrganization(user_id: $user_id, organization_id: $organization_id) {\n      id\n    }\n  }\n"): typeof import('./graphql').addUserOrganizationDocument;
  export function gql(source: "\n  mutation updateUserOrganization($id: ID!, $role: OrganizationRole) {\n    updateUserOrganization(id: $id, role: $role) {\n      id\n    }\n  }\n"): typeof import('./graphql').updateUserOrganizationDocument;
  export function gql(source: "\n  mutation deleteUserOrganization($id: ID!) {\n    deleteUserOrganization(id: $id) {\n      id\n    }\n  }\n"): typeof import('./graphql').deleteUserOrganizationDocument;
  export function gql(source: "\n  query consentQuery {\n    currentUser {\n      id\n      research_consent\n    }\n  }\n"): typeof import('./graphql').consentQueryDocument;
  export function gql(source: "\n  mutation updateCreateAccountResearchConsent($value: Boolean!) {\n    updateResearchConsent(value: $value) {\n      id\n    }\n  }\n"): typeof import('./graphql').updateCreateAccountResearchConsentDocument;
  export function gql(source: "\n  query StudyModuleDetails($slug: String!) {\n    study_module(slug: $slug) {\n      id\n      slug\n      name\n      image\n      order\n      courses {\n        id\n        name\n        slug\n      }\n      study_module_translations {\n        id\n        name\n        language\n        description\n      }\n    }\n  }\n"): typeof import('./graphql').StudyModuleDetailsDocument;
  export function gql(source: "\n  query UserCourseSettingsForUserPage($upstream_id: Int) {\n    userCourseSettings(user_upstream_id: $upstream_id, first: 50) {\n      edges {\n        node {\n          id\n          course {\n            name\n          }\n          language\n          country\n          research\n          marketing\n          course_variant\n          other\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n"): typeof import('./graphql').UserCourseSettingsForUserPageDocument;
  export function gql(source: "\n  query ShowUserUserOverView($upstream_id: Int) {\n    user(upstream_id: $upstream_id) {\n      id\n      upstream_id\n      first_name\n      last_name\n      email\n      ...UserCompletions\n    }\n  }\n  \n"): typeof import('./graphql').ShowUserUserOverViewDocument;
  export function gql(source: "\n  query UserDetailsContains(\n    $search: String!\n    $first: Int\n    $last: Int\n    $before: String\n    $after: String\n    $skip: Int\n  ) {\n    userDetailsContains(\n      search: $search\n      first: $first\n      last: $last\n      before: $before\n      after: $after\n      skip: $skip\n    ) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          email\n          student_number\n          real_student_number\n          upstream_id\n          first_name\n          last_name\n        }\n      }\n      count(search: $search)\n    }\n  }\n"): typeof import('./graphql').UserDetailsContainsDocument;
  export function gql(source: string): unknown;

    export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<    infer TType,    any  >    ? TType    : never;  
}