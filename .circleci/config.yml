version: 2.1
orbs:
  helm: circleci/helm@1.1.2
  docker: circleci/docker@1.7.0
  jq: circleci/jq@2.2.0
jobs:
  code_style:
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-root-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-root-{{ .Branch }}
      - run:
          name: "Install dependencies"
          command: "npm ci"
      - save_cache:
          key: node-root-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: "Check code style"
          command: "bin/check-code-style.sh"
      - run:
          name: "ESLint"
          command: "bin/eslint.sh"
      - helm/install-helm-client:
          version: v3.4.2
      - run:
          name: "Helm"
          command: "bin/helm.sh"

  build_frontend:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Build frontend image"
          command: "bin/build-docker-frontend.sh"
      - run:
          name: "Push image if on master/staging"
          command: "bin/push-docker-frontend-image.sh"

  build_backend:
    docker:
      - image: eu.gcr.io/moocfi-public/cloud-sdk-node:latest
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - jq/install
      - docker/install-docker-tools:
          docker-compose-version: 1.29.2
      - run:
          name: "Build backend image"
          command: "bin/build-docker-backend.sh"
      - run:
          name: "Preparing DB for tests"
          command: "bin/prepare-db-for-tests.sh"
      - run:
          name: "Tests"
          command: "bin/run-backend-tests.sh"
      - store_test_results:
          path: ~/project/backend/coverage/junit/
      - store_artifacts:
          path: ~/project/backend/coverage/jest
          destination: backend-tests
      - run:
          name: "Upload coverage"
          command: "cd ~/project/backend && bash <(curl -s https://codecov.io/bash)"
      - run:
          name: "Push image if on master/staging"
          command: "bin/push-docker-backend-image.sh"

  build_auth:
    docker:
      - image: eu.gcr.io/moocfi-public/cloud-sdk-node:latest
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - jq/install
      - docker/install-docker-tools:
          docker-compose-version: 1.29.2
      - run:
          name: "Install deps for tests"
          command: |
            cd auth
            npm ci
            cd ..
      - run:
          name: "Tests"
          command: "bin/run-auth-tests.sh"
      - run:
          name: "Build image"
          command: "bin/build-docker-auth.sh"
      - store_test_results:
          path: ~/project/auth/coverage/junit/
      - store_artifacts:
          path: ~/project/auth/coverage/jest
          destination: auth-tests
      - run:
          name: "Upload coverage"
          command: "cd ~/project/auth && bash <(curl -s https://codecov.io/bash)"
      - run:
          name: "Push image if on master"
          command: "bin/push-docker-auth-image.sh"  
    
  deploy_to_production:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker      
      - helm/install-helm-client:
          version: v3.4.2
      - run:
          name: install envsubst
          command: apt-get install -qq -y gettext
      - run:
          name: "Deploy"
          command: "bin/ci-update-deployments.sh"

workflows:
  version: 2
  build-deploy:
    jobs:
      - build_frontend
      - build_backend
      - build_auth
      - code_style
      - deploy_to_production:
          requires:
            - build_frontend
            - build_backend
            - build_auth
            - code_style
          filters:
            branches:
              only:
                - master
                - staging
