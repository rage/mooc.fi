{{- $deploymentname := "kafka-consumer-exercises" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $deploymentname }}
  labels:
    {{- include "helm.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ $deploymentname }}
      {{- include "helm.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.kafkaConsumer.topic.exercises.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ $deploymentname }}
        {{- include "helm.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ $deploymentname }}
          image: "{{ .Values.image.repository }}/moocfi-backend:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["sh", "-c", "npm run kafka-consumer-exercises"]
          imagePullPolicy: Always
          ports:
            - name: backend-http
              containerPort: 4000
          resources:
            limits:
              memory: 500Mi
              cpu: 25m
            requests:
              memory: 150Mi
              cpu: 5m
          envFrom:
          - secretRef:
              name: backend-secret
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: new-redis
                  key: redis-password
            - name: CONNECTION_LIMIT
              value: "{{ default .Values.kafkaConsumer.connectionLimit .Values.kafkaConsumer.topic.exercises.connectionLimit }}"
            - name: APPLICATION_NAME
              value: "{{ $deploymentname }}"
          volumeMounts:
            - name: google-cloud-storage-serviceaccount
              mountPath: "/etc/gcs"
              readOnly: true
      volumes:
        - name: google-cloud-storage-serviceaccount
          secret:
            secretName: google-cloud-storage-serviceaccount
            items:
              - key: account.json
                path: account.json
