---
# Service account the client will use to reset the deployment,
# by default the pods running inside the cluster can do no such things.
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kafka-consumer-restarter
---
# allow getting status and patching only the one deployment you want
# to restart
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kafka-consumer-restarter
rules:
  - apiGroups: ["apps", "extensions"]
    resources: ["deployments"]
    resourceNames: ["kafka-consumer-exercises", "kafka-consumer-user-course-progress-batch", "kafka-consumer-user-course-progress-realtime", "kafka-consumer-user-points-batch", "kafka-consumer-user-points-realtime"]
    verbs: ["get", "patch"]
---
# bind the role to the service account
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kafka-consumer-restarter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kafka-consumer-restarter
subjects:
  - kind: ServiceAccount
    name: kafka-consumer-restarter
