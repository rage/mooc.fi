
> backend@1.0.0 test /home/pyykkomi/duuni/mooc.fi/backend
> jest

2020-11-10T11:44:32.855Z babel:config:loading:files:plugins Loaded preset '/home/pyykkomi/duuni/mooc.fi/backend/node_modules/babel-preset-jest/index.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:32.859Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:32.886Z babel:config:loading:files:plugins Loaded preset '/home/pyykkomi/duuni/mooc.fi/backend/node_modules/babel-preset-jest/index.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:32.889Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:32.894Z babel:config:loading:files:plugins Loaded preset '/home/pyykkomi/duuni/mooc.fi/backend/node_modules/babel-preset-jest/index.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:32.897Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.116Z babel:config:loading:files:plugins Loaded preset '@babel/preset-env' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.119Z babel:config:loading:files:plugins Loaded preset '@babel/preset-typescript' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.126Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.130Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.134Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.136Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.158Z babel:config:loading:files:plugins Loaded preset '@babel/preset-env' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.160Z babel:config:loading:files:plugins Loaded preset '@babel/preset-env' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.161Z babel:config:loading:files:plugins Loaded preset '@babel/preset-typescript' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.163Z babel:config:loading:files:plugins Loaded preset '@babel/preset-typescript' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.204Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.204Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.235Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.236Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.308Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.310Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.325Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.328Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.352Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.531Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.537Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.576Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.585Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
  console.error
    2020-11-10T11:44:33.473Z prisma-client {
      engineConfig: {
        cwd: '/home/pyykkomi/duuni/mooc.fi/backend/prisma',
        enableDebugLogs: false,
        enableEngineDebugMode: undefined,
        datamodelPath: '/home/pyykkomi/duuni/mooc.fi/backend/node_modules/.prisma/client/schema.prisma',
        prismaPath: undefined,
        engineEndpoint: undefined,
        generator: {
          name: 'client',
          provider: 'prisma-client-js',
          output: '/home/pyykkomi/duuni/mooc.fi/backend/node_modules/@prisma/client',
          binaryTargets: [],
          previewFeatures: [],
          config: {}
        },
        showColors: false,
        logLevel: undefined,
        logQueries: undefined,
        flags: [],
        clientVersion: '2.10.0',
        enableExperimental: [],
        useUds: undefined
      }
    }

       5 | const prismaClient = () => {
       6 |   if (!_prisma) {
    >  7 |     _prisma = new PrismaClient()
         |               ^
       8 |   }
       9 | 
      10 |   return _prisma

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at new NewPrismaClient (node_modules/@prisma/client/runtime/index.js:15063:9)
      at prismaClient (bin/lib/prisma.ts:7:15)
      at Object.<anonymous> (bin/lib/prisma.ts:13:16)

2020-11-10T11:44:33.618Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.735Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.748Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.759Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.785Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.788Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.792Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
  console.log
    winston:create-logger: Define prototype method for "error"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "warn"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "info"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "http"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "verbose"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "debug"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "silly"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "error"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "warn"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "info"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "http"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "verbose"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "debug"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "silly"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "error"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "warn"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "info"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "http"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "verbose"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "debug"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "silly"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "error"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "warn"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "info"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "http"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "verbose"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "debug"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "silly"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "error"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "warn"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "info"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "http"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "verbose"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "debug"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "silly"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

2020-11-10T11:44:33.840Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.840Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.844Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.846Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.849Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.851Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:33.905Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
  console.log
    winston:create-logger: Define prototype method for "error"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "warn"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "info"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "http"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "verbose"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "debug"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "silly"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

PASS bin/kafkaConsumer/common/userCourseProgress/__test__/BAIUserCourseProgress.test.ts
  calculates tier progress correctly
    ✓ skips exercises not found (5 ms)
    ✓ gets highest tier and picks highest score
    ✓ does not care about max_points === 0 (2 ms)
  gets the rules right
    ✓ not enough points (1 ms)
    ✓ not enough exercise completions (7 ms)
    ✓ hunky dory (3 ms)
  gets tier info
    ✓ no basic rule (4 ms)
    ✓ has beginner tier (2 ms)
  gets progress
    ✓ successfully (1 ms)

2020-11-10T11:44:33.968Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.143Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.145Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.147Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.149Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.186Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.188Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.190Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.192Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.320Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.323Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.331Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.332Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.334Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.337Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.340Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.344Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.347Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.349Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.351Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.357Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.360Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.368Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.370Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.372Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.373Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.374Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.376Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.377Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.378Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.380Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.382Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.384Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.409Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.411Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
  console.log
    winston:create-logger: Define prototype method for "error"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "warn"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "info"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "http"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "verbose"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "debug"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "silly"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "error"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "warn"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "info"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "http"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "verbose"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "debug"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

  console.log
    winston:create-logger: Define prototype method for "silly"

      at Function.Object.<anonymous>.module.exports (node_modules/@dabh/diagnostics/logger/console.js:17:34)
          at Array.forEach (<anonymous>)

2020-11-10T11:44:34.607Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.610Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.612Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.615Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.617Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.619Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.621Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.623Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.624Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.626Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.628Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.629Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.631Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.633Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.635Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.636Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.638Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.640Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.641Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.643Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.644Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.646Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.647Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.649Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.651Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.653Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.654Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.655Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.656Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.657Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.658Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.659Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.660Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.661Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.663Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.663Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.664Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.664Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.666Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.666Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.668Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.669Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.670Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.670Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.672Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.672Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.673Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.674Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.675Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.676Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.676Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.678Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.679Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.680Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.682Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.682Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.685Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.685Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.687Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.689Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.691Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.694Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.694Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.696Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.697Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.698Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.700Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.702Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.704Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.706Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.707Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.709Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.711Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.712Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.715Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.717Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.718Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.720Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.726Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.728Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.729Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.731Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.792Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.797Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.821Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.823Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:34.965Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.000Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.047Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.050Z knex:query CREATE SCHEMA IF NOT EXISTS "test_y6sDYwhImGMFNT-c8ZnZe"; undefined
2020-11-10T11:44:35.050Z knex:bindings [] undefined
2020-11-10T11:44:35.053Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.054Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.055Z knex:query SET SEARCH_PATH TO "test_y6sDYwhImGMFNT-c8ZnZe"; undefined
2020-11-10T11:44:35.055Z knex:bindings [] undefined
2020-11-10T11:44:35.055Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.056Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.057Z knex:query CREATE EXTENSION IF NOT EXISTS "uuid-ossp" SCHEMA "test_y6sDYwhImGMFNT-c8ZnZe"; undefined
2020-11-10T11:44:35.058Z knex:bindings [] undefined
2020-11-10T11:44:35.062Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.067Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.070Z knex:query select * from information_schema.tables where table_name = ? and table_schema = ? undefined
2020-11-10T11:44:35.070Z knex:bindings [ 'knex_migrations', 'test_y6sDYwhImGMFNT-c8ZnZe' ] undefined
2020-11-10T11:44:35.077Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.077Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.077Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.080Z knex:query create table "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("id" serial primary key, "name" varchar(255), "batch" integer, "migration_time" timestamptz) undefined
2020-11-10T11:44:35.080Z knex:bindings [] undefined
2020-11-10T11:44:35.080Z knex:query CREATE SCHEMA IF NOT EXISTS "test_F_Cotnn4h_diKPMk3l-OU"; undefined
2020-11-10T11:44:35.080Z knex:bindings [] undefined
2020-11-10T11:44:35.082Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.083Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.084Z knex:query SET SEARCH_PATH TO "test_F_Cotnn4h_diKPMk3l-OU"; undefined
2020-11-10T11:44:35.084Z knex:bindings [] undefined
2020-11-10T11:44:35.084Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.084Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.086Z knex:query CREATE EXTENSION IF NOT EXISTS "uuid-ossp" SCHEMA "test_F_Cotnn4h_diKPMk3l-OU"; undefined
2020-11-10T11:44:35.086Z knex:bindings [] undefined
2020-11-10T11:44:35.086Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.086Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.087Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.088Z knex:query select * from information_schema.tables where table_name = ? and table_schema = ? undefined
2020-11-10T11:44:35.088Z knex:bindings [ 'knex_migrations_lock', 'test_y6sDYwhImGMFNT-c8ZnZe' ] undefined
2020-11-10T11:44:35.091Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.091Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.092Z knex:client acquired connection from pool: __knexUid1
  console.log
    creating knex postgres://postgres:postgres@localhost:5432/testing?schema=test_y6sDYwhImGMFNT-c8ZnZe

      at Object.before (tests/__helpers.ts:134:15)

  console.log
    running migrations test_y6sDYwhImGMFNT-c8ZnZe

      at Object.before (tests/__helpers.ts:141:15)

  console.log
    creating knex postgres://postgres:postgres@localhost:5432/testing?schema=test_F_Cotnn4h_diKPMk3l-OU

      at Object.before (tests/__helpers.ts:134:15)

  console.log
    running migrations test_F_Cotnn4h_diKPMk3l-OU

      at Object.before (tests/__helpers.ts:141:15)

  console.log
    {
      method: 'raw',
      sql: 'CREATE SCHEMA IF NOT EXISTS "test_y6sDYwhImGMFNT-c8ZnZe";',
      bindings: [],
      options: {},
      __knexQueryUid: 'oRlxHQKuR8RqQc5uMevHo'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'SET SEARCH_PATH TO "test_y6sDYwhImGMFNT-c8ZnZe";',
      bindings: [],
      options: {},
      __knexQueryUid: 'zrSLSIoH5XGXtUF_Wo4gT'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp" SCHEMA "test_y6sDYwhImGMFNT-c8ZnZe";',
      bindings: [],
      options: {},
      __knexQueryUid: '6xrxt2Xq80izNTO6Y7WCJ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.tables where table_name = ? and table_schema = ?',
        bindings: [ 'knex_migrations', 'test_y6sDYwhImGMFNT-c8ZnZe' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    [
      {
        sql: 'create table "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("id" serial primary key, "name" varchar(255), "batch" integer, "migration_time" timestamptz)',
        bindings: []
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    {
      method: 'raw',
      sql: 'CREATE SCHEMA IF NOT EXISTS "test_F_Cotnn4h_diKPMk3l-OU";',
      bindings: [],
      options: {},
      __knexQueryUid: '_r-AzHmhTW9qU1rXI-4Bw'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'SET SEARCH_PATH TO "test_F_Cotnn4h_diKPMk3l-OU";',
      bindings: [],
      options: {},
      __knexQueryUid: 'K8li288hJkt245LK4zYHj'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp" SCHEMA "test_F_Cotnn4h_diKPMk3l-OU";',
      bindings: [],
      options: {},
      __knexQueryUid: 'yQabpLttS64zribEKkKcM'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.tables where table_name = ? and table_schema = ?',
        bindings: [ 'knex_migrations_lock', 'test_y6sDYwhImGMFNT-c8ZnZe' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

2020-11-10T11:44:35.093Z knex:query create table "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations_lock" ("index" serial primary key, "is_locked" integer) undefined
2020-11-10T11:44:35.094Z knex:bindings [] undefined
2020-11-10T11:44:35.096Z knex:query select * from information_schema.tables where table_name = ? and table_schema = ? undefined
2020-11-10T11:44:35.096Z knex:bindings [ 'knex_migrations', 'test_F_Cotnn4h_diKPMk3l-OU' ] undefined
2020-11-10T11:44:35.098Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.099Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.102Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.102Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.102Z knex:query select * from "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations_lock" undefined
2020-11-10T11:44:35.102Z knex:bindings [] undefined
2020-11-10T11:44:35.104Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.104Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.105Z knex:query create table "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("id" serial primary key, "name" varchar(255), "batch" integer, "migration_time" timestamptz) undefined
2020-11-10T11:44:35.105Z knex:bindings [] undefined
2020-11-10T11:44:35.106Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations_lock" ("is_locked") values (?) undefined
2020-11-10T11:44:35.106Z knex:bindings [ 0 ] undefined
2020-11-10T11:44:35.108Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.108Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.111Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.111Z knex:query select "name" from "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" order by "id" asc undefined
2020-11-10T11:44:35.111Z knex:bindings [] undefined
2020-11-10T11:44:35.111Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.112Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.112Z knex:query select * from information_schema.tables where table_name = ? and table_schema = ? undefined
2020-11-10T11:44:35.113Z knex:bindings [ 'knex_migrations_lock', 'test_F_Cotnn4h_diKPMk3l-OU' ] undefined
2020-11-10T11:44:35.114Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.115Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.116Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.116Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.117Z knex:query create table "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations_lock" ("index" serial primary key, "is_locked" integer) undefined
2020-11-10T11:44:35.118Z knex:bindings [] undefined
2020-11-10T11:44:35.118Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.120Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.121Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.122Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.123Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.124Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.126Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.126Z knex:query select * from "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations_lock" undefined
2020-11-10T11:44:35.126Z knex:bindings [] undefined
2020-11-10T11:44:35.127Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.127Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.128Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.128Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.129Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.130Z knex:query insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations_lock" ("is_locked") values (?) undefined
2020-11-10T11:44:35.130Z knex:bindings [ 0 ] undefined
2020-11-10T11:44:35.131Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.131Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.132Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.132Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.133Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.133Z knex:query select "name" from "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" order by "id" asc undefined
2020-11-10T11:44:35.134Z knex:bindings [] undefined
2020-11-10T11:44:35.135Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.135Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.137Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.138Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.138Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.139Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.140Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.141Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.142Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.142Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.143Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.144Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.143Z knex:tx trx2: Starting top level transaction
2020-11-10T11:44:35.143Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.143Z knex:query BEGIN; trx2
2020-11-10T11:44:35.144Z knex:bindings undefined trx2
2020-11-10T11:44:35.145Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.146Z knex:query update "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations_lock" set "is_locked" = ? where "is_locked" = ? trx2
2020-11-10T11:44:35.146Z knex:bindings [ 1, 0 ] trx2
2020-11-10T11:44:35.147Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.148Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.148Z knex:query select * from information_schema.tables where table_name = ? and table_schema = ? trx2
2020-11-10T11:44:35.148Z knex:bindings [ 'knex_migrations', 'test_y6sDYwhImGMFNT-c8ZnZe' ] trx2
2020-11-10T11:44:35.149Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.150Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.152Z knex:query select * from information_schema.tables where table_name = ? and table_schema = ? trx2
2020-11-10T11:44:35.152Z knex:bindings [ 'knex_migrations_lock', 'test_y6sDYwhImGMFNT-c8ZnZe' ] trx2
2020-11-10T11:44:35.152Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.154Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.155Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.156Z knex:query select * from "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations_lock" trx2
2020-11-10T11:44:35.156Z knex:bindings [] trx2
2020-11-10T11:44:35.157Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.159Z knex:query select "name" from "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" order by "id" asc trx2
2020-11-10T11:44:35.159Z knex:bindings [] trx2
2020-11-10T11:44:35.160Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.161Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.163Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.164Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.165Z babel:config:loading:files:configuration Found configuration '/home/pyykkomi/duuni/mooc.fi/backend/babel.config.js' from '/home/pyykkomi/duuni/mooc.fi/backend'.
2020-11-10T11:44:35.165Z knex:query select max("batch") as "max_batch" from "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" trx2
2020-11-10T11:44:35.165Z knex:bindings [] trx2
2020-11-10T11:44:35.166Z knex:tx trx2: Starting top level transaction
2020-11-10T11:44:35.167Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.167Z knex:query BEGIN; trx2
2020-11-10T11:44:35.167Z knex:bindings undefined trx2
2020-11-10T11:44:35.170Z knex:query update "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations_lock" set "is_locked" = ? where "is_locked" = ? trx2
2020-11-10T11:44:35.170Z knex:bindings [ 1, 0 ] trx2
2020-11-10T11:44:35.172Z knex:query select * from information_schema.tables where table_name = ? and table_schema = ? trx2
2020-11-10T11:44:35.172Z knex:bindings [ 'knex_migrations', 'test_F_Cotnn4h_diKPMk3l-OU' ] trx2
2020-11-10T11:44:35.175Z knex:query CREATE TYPE course_status AS ENUM (
    'Active',
    'Ended',
    'Upcoming'
  ); trx2
2020-11-10T11:44:35.175Z knex:bindings [] trx2
2020-11-10T11:44:35.176Z knex:query select * from information_schema.tables where table_name = ? and table_schema = ? trx2
2020-11-10T11:44:35.176Z knex:bindings [ 'knex_migrations_lock', 'test_F_Cotnn4h_diKPMk3l-OU' ] trx2
2020-11-10T11:44:35.177Z knex:query CREATE TYPE organization_role AS ENUM (
    'Teacher',
    'Student',
    'OrganizationAdmin'
  ); trx2
2020-11-10T11:44:35.177Z knex:bindings [] trx2
2020-11-10T11:44:35.179Z knex:query CREATE TABLE IF NOT EXISTS "UserAppDatumConfig" (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    name text,
    "timestamp" timestamp(3) without time zone
  ); trx2
2020-11-10T11:44:35.179Z knex:bindings [] trx2
2020-11-10T11:44:35.179Z knex:query select * from "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations_lock" trx2
2020-11-10T11:44:35.179Z knex:bindings [] trx2
2020-11-10T11:44:35.182Z knex:query select "name" from "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" order by "id" asc trx2
2020-11-10T11:44:35.182Z knex:bindings [] trx2
2020-11-10T11:44:35.183Z knex:query CREATE TABLE IF NOT EXISTS "UserCourseSettings" (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    language text,
    country text,
    research boolean,
    marketing boolean,
    course_variant text,
    other text,
    "user" uuid,
    course uuid
  ); trx2
2020-11-10T11:44:35.183Z knex:bindings [] trx2
2020-11-10T11:44:35.188Z knex:query CREATE TABLE IF NOT EXISTS "_CourseToService" (
    "A" uuid NOT NULL,
    "B" uuid NOT NULL
  ); trx2
2020-11-10T11:44:35.188Z knex:bindings [] trx2
2020-11-10T11:44:35.188Z knex:query select max("batch") as "max_batch" from "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" trx2
2020-11-10T11:44:35.188Z knex:bindings [] trx2
2020-11-10T11:44:35.192Z knex:query CREATE TABLE IF NOT EXISTS "_StudyModuleToCourse" (
    "A" uuid NOT NULL,
    "B" uuid NOT NULL
  ); trx2
2020-11-10T11:44:35.192Z knex:bindings [] trx2
  console.log
    [
      {
        sql: 'create table "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations_lock" ("index" serial primary key, "is_locked" integer)',
        bindings: []
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    [
      {
        sql: 'select * from information_schema.tables where table_name = ? and table_schema = ?',
        bindings: [ 'knex_migrations', 'test_F_Cotnn4h_diKPMk3l-OU' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    {
      method: 'select',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [],
      __knexQueryUid: 'Abi-EhdLApc9Y3idIqasL',
      sql: 'select * from "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations_lock"'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    [
      {
        sql: 'create table "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("id" serial primary key, "name" varchar(255), "batch" integer, "migration_time" timestamptz)',
        bindings: []
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [ 0 ],
      __knexQueryUid: '5CHZWVYvzF9-Su4KwBb6u',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations_lock" ("is_locked") values (?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    {
      method: 'select',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [],
      __knexQueryUid: 'GhJ-giobGqRb2WW8u7JgW',
      sql: 'select "name" from "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" order by "id" asc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    [
      {
        sql: 'select * from information_schema.tables where table_name = ? and table_schema = ?',
        bindings: [ 'knex_migrations_lock', 'test_F_Cotnn4h_diKPMk3l-OU' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    [
      {
        sql: 'create table "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations_lock" ("index" serial primary key, "is_locked" integer)',
        bindings: []
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    {
      method: 'select',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [],
      __knexQueryUid: '1va7fvDo_V7l27cNrNw55',
      sql: 'select * from "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations_lock"'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [ 0 ],
      __knexQueryUid: '58yNfWPrEBPpfajaPPHVZ',
      sql: 'insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations_lock" ("is_locked") values (?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    {
      method: 'select',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [],
      __knexQueryUid: 'NW7n265wdhmAnCDadQ5VG',
      sql: 'select "name" from "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" order by "id" asc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    {
      method: 'update',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [ 1, 0 ],
      __knexQueryUid: 'mieIW1xL8KVrQGdHVt7WB',
      sql: 'update "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations_lock" set "is_locked" = ? where "is_locked" = ?',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.tables where table_name = ? and table_schema = ?',
        bindings: [ 'knex_migrations', 'test_y6sDYwhImGMFNT-c8ZnZe' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.tables where table_name = ? and table_schema = ?',
        bindings: [ 'knex_migrations_lock', 'test_y6sDYwhImGMFNT-c8ZnZe' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'select',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [],
      __knexQueryUid: 'hikUIJeQnDJKLaZ_Bz8po',
      sql: 'select * from "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations_lock"'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'select',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [],
      __knexQueryUid: 'g7O-2ezIfLPQwVBaIg-vn',
      sql: 'select "name" from "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" order by "id" asc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'select',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [],
      __knexQueryUid: 'PU1maxShfOpq5vqXrHnJz',
      sql: 'select max("batch") as "max_batch" from "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations"'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'update',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [ 1, 0 ],
      __knexQueryUid: 'JBFE-kECfeaKycpRI2WLp',
      sql: 'update "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations_lock" set "is_locked" = ? where "is_locked" = ?',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.tables where table_name = ? and table_schema = ?',
        bindings: [ 'knex_migrations', 'test_F_Cotnn4h_diKPMk3l-OU' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TYPE course_status AS ENUM (\n' +
        "    'Active',\n" +
        "    'Ended',\n" +
        "    'Upcoming'\n" +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'W8uGPCIclYCSQ2ff0tEWP'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.tables where table_name = ? and table_schema = ?',
        bindings: [ 'knex_migrations_lock', 'test_F_Cotnn4h_diKPMk3l-OU' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TYPE organization_role AS ENUM (\n' +
        "    'Teacher',\n" +
        "    'Student',\n" +
        "    'OrganizationAdmin'\n" +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'h8qUCAjUDRoNgx56N-Ecx'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS "UserAppDatumConfig" (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    name text,\n' +
        '    "timestamp" timestamp(3) without time zone\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '7hkvstS8Ktcdy2HWBoSYf'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'select',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [],
      __knexQueryUid: 'GWPGCueImpqfw-kvEZhBD',
      sql: 'select * from "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations_lock"'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'select',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [],
      __knexQueryUid: 'UEFB3uwZ5qIlG2mQgaxyv',
      sql: 'select "name" from "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" order by "id" asc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS "UserCourseSettings" (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    language text,\n' +
        '    country text,\n' +
        '    research boolean,\n' +
        '    marketing boolean,\n' +
        '    course_variant text,\n' +
        '    other text,\n' +
        '    "user" uuid,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'LeD_XU2G4wVbkp-t5OQs2'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS "_CourseToService" (\n' +
        '    "A" uuid NOT NULL,\n' +
        '    "B" uuid NOT NULL\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'PxzxW4JMdICxxU1JovYv0'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'select',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [],
      __knexQueryUid: '-TJmQKrhMD_CFtOvJjlVa',
      sql: 'select max("batch") as "max_batch" from "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations"'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS "_StudyModuleToCourse" (\n' +
        '    "A" uuid NOT NULL,\n' +
        '    "B" uuid NOT NULL\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '35Id0E40SfWd49bEnpvEY'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:35.196Z knex:query CREATE TABLE IF NOT EXISTS completion (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    user_upstream_id integer,
    email text NOT NULL,
    student_number text,
    completion_language text,
    grade text,
    certificate_id text,
    course uuid,
    "user" uuid,
    eligible_for_ects boolean DEFAULT true
  ); trx2
2020-11-10T11:44:35.196Z knex:bindings [] trx2
2020-11-10T11:44:35.200Z knex:query CREATE TYPE course_status AS ENUM (
    'Active',
    'Ended',
    'Upcoming'
  ); trx2
2020-11-10T11:44:35.200Z knex:bindings [] trx2
2020-11-10T11:44:35.202Z knex:query CREATE TABLE IF NOT EXISTS completion_registered (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    real_student_number text NOT NULL,
    "user" uuid,
    completion uuid,
    course uuid,
    organization uuid
  ); trx2
2020-11-10T11:44:35.202Z knex:bindings [] trx2
2020-11-10T11:44:35.202Z knex:query CREATE TYPE organization_role AS ENUM (
    'Teacher',
    'Student',
    'OrganizationAdmin'
  ); trx2
2020-11-10T11:44:35.202Z knex:bindings [] trx2
2020-11-10T11:44:35.204Z knex:query CREATE TABLE IF NOT EXISTS "UserAppDatumConfig" (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    name text,
    "timestamp" timestamp(3) without time zone
  ); trx2
2020-11-10T11:44:35.204Z knex:bindings [] trx2
2020-11-10T11:44:35.208Z knex:query CREATE TABLE IF NOT EXISTS course (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    teacher_in_charge_name text NOT NULL,
    teacher_in_charge_email text NOT NULL,
    support_email text,
    start_date text NOT NULL,
    end_date text,
    name text NOT NULL,
    slug text NOT NULL,
    ects text,
    promote boolean,
    status course_status DEFAULT 'Upcoming'::course_status,
    start_point boolean,
    hidden boolean,
    study_module_start_point boolean,
    "order" integer,
    study_module_order integer,
    automatic_completions boolean DEFAULT false,
    points_needed integer,
    exercise_completions_needed integer,
    has_certificate boolean DEFAULT false,
    owner_organization uuid,
    completion_email uuid,
    inherit_settings_from uuid,
    completions_handled_by uuid,
    photo uuid,
    automatic_completions_eligible_for_ects boolean DEFAULT true
  ); trx2
2020-11-10T11:44:35.208Z knex:bindings [] trx2
2020-11-10T11:44:35.210Z knex:query CREATE TABLE IF NOT EXISTS "UserCourseSettings" (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    language text,
    country text,
    research boolean,
    marketing boolean,
    course_variant text,
    other text,
    "user" uuid,
    course uuid
  ); trx2
2020-11-10T11:44:35.210Z knex:bindings [] trx2
2020-11-10T11:44:35.214Z knex:query CREATE TABLE IF NOT EXISTS course_alias (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    course_code text NOT NULL,
    course uuid
  ); trx2
2020-11-10T11:44:35.214Z knex:bindings [] trx2
2020-11-10T11:44:35.215Z knex:query CREATE TABLE IF NOT EXISTS "_CourseToService" (
    "A" uuid NOT NULL,
    "B" uuid NOT NULL
  ); trx2
2020-11-10T11:44:35.215Z knex:bindings [] trx2
2020-11-10T11:44:35.219Z knex:query CREATE TABLE IF NOT EXISTS "_StudyModuleToCourse" (
    "A" uuid NOT NULL,
    "B" uuid NOT NULL
  ); trx2
2020-11-10T11:44:35.219Z knex:bindings [] trx2
2020-11-10T11:44:35.219Z knex:query CREATE TABLE IF NOT EXISTS course_organization (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    creator boolean,
    course uuid,
    organization uuid
  ); trx2
2020-11-10T11:44:35.219Z knex:bindings [] trx2
2020-11-10T11:44:35.221Z knex:query CREATE TABLE IF NOT EXISTS completion (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    user_upstream_id integer,
    email text NOT NULL,
    student_number text,
    completion_language text,
    grade text,
    certificate_id text,
    course uuid,
    "user" uuid,
    eligible_for_ects boolean DEFAULT true
  ); trx2
2020-11-10T11:44:35.222Z knex:bindings [] trx2
2020-11-10T11:44:35.224Z knex:query CREATE TABLE IF NOT EXISTS course_translation (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    name text NOT NULL,
    language text NOT NULL,
    description text NOT NULL,
    link text,
    course uuid
  ); trx2
2020-11-10T11:44:35.224Z knex:bindings [] trx2
2020-11-10T11:44:35.227Z knex:query CREATE TABLE IF NOT EXISTS completion_registered (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    real_student_number text NOT NULL,
    "user" uuid,
    completion uuid,
    course uuid,
    organization uuid
  ); trx2
2020-11-10T11:44:35.227Z knex:bindings [] trx2
2020-11-10T11:44:35.229Z knex:query CREATE TABLE IF NOT EXISTS course_variant (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    slug text NOT NULL,
    description text,
    course uuid
  ); trx2
2020-11-10T11:44:35.229Z knex:bindings [] trx2
2020-11-10T11:44:35.232Z knex:query CREATE TABLE IF NOT EXISTS course (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    teacher_in_charge_name text NOT NULL,
    teacher_in_charge_email text NOT NULL,
    support_email text,
    start_date text NOT NULL,
    end_date text,
    name text NOT NULL,
    slug text NOT NULL,
    ects text,
    promote boolean,
    status course_status DEFAULT 'Upcoming'::course_status,
    start_point boolean,
    hidden boolean,
    study_module_start_point boolean,
    "order" integer,
    study_module_order integer,
    automatic_completions boolean DEFAULT false,
    points_needed integer,
    exercise_completions_needed integer,
    has_certificate boolean DEFAULT false,
    owner_organization uuid,
    completion_email uuid,
    inherit_settings_from uuid,
    completions_handled_by uuid,
    photo uuid,
    automatic_completions_eligible_for_ects boolean DEFAULT true
  ); trx2
2020-11-10T11:44:35.233Z knex:bindings [] trx2
2020-11-10T11:44:35.234Z knex:query CREATE TABLE IF NOT EXISTS email_delivery (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    sent boolean DEFAULT false NOT NULL,
    error boolean DEFAULT false NOT NULL,
    error_message text,
    "user" uuid,
    email_template uuid
  ); trx2
2020-11-10T11:44:35.234Z knex:bindings [] trx2
2020-11-10T11:44:35.239Z knex:query CREATE TABLE IF NOT EXISTS course_alias (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    course_code text NOT NULL,
    course uuid
  ); trx2
2020-11-10T11:44:35.239Z knex:bindings [] trx2
2020-11-10T11:44:35.240Z knex:query CREATE TABLE IF NOT EXISTS email_template (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    name text,
    txt_body text,
    html_body text,
    title text
  ); trx2
2020-11-10T11:44:35.240Z knex:bindings [] trx2
2020-11-10T11:44:35.244Z knex:query CREATE TABLE IF NOT EXISTS course_organization (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    creator boolean,
    course uuid,
    organization uuid
  ); trx2
2020-11-10T11:44:35.245Z knex:query CREATE TABLE IF NOT EXISTS exercise (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    custom_id text NOT NULL,
    name text,
    part integer,
    section integer,
    max_points integer,
    "timestamp" timestamp(3) without time zone,
    deleted boolean DEFAULT false,
    service uuid,
    course uuid
  ); trx2
2020-11-10T11:44:35.245Z knex:bindings [] trx2
2020-11-10T11:44:35.244Z knex:bindings [] trx2
2020-11-10T11:44:35.252Z knex:query CREATE TABLE IF NOT EXISTS exercise_completion (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    n_points numeric(65,30),
    "timestamp" timestamp(3) without time zone NOT NULL,
    completed boolean DEFAULT false,
    "user" uuid,
    exercise uuid
  ); trx2
2020-11-10T11:44:35.252Z knex:bindings [] trx2
2020-11-10T11:44:35.254Z knex:query CREATE TABLE IF NOT EXISTS course_translation (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    name text NOT NULL,
    language text NOT NULL,
    description text NOT NULL,
    link text,
    course uuid
  ); trx2
2020-11-10T11:44:35.254Z knex:bindings [] trx2
2020-11-10T11:44:35.256Z knex:query CREATE TABLE IF NOT EXISTS exercise_completion_required_actions (
    id uuid NOT NULL,
    value text NOT NULL,
    exercise_completion uuid
  ); trx2
2020-11-10T11:44:35.256Z knex:bindings [] trx2
2020-11-10T11:44:35.259Z knex:query CREATE TABLE IF NOT EXISTS course_variant (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    slug text NOT NULL,
    description text,
    course uuid
  ); trx2
2020-11-10T11:44:35.259Z knex:bindings [] trx2
2020-11-10T11:44:35.260Z knex:query CREATE TABLE IF NOT EXISTS image (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    name text,
    original text NOT NULL,
    original_mimetype text NOT NULL,
    uncompressed text NOT NULL,
    uncompressed_mimetype text NOT NULL,
    compressed text,
    compressed_mimetype text,
    encoding text,
    "default" boolean
  ); trx2
2020-11-10T11:44:35.260Z knex:bindings [] trx2
2020-11-10T11:44:35.265Z knex:query CREATE TABLE IF NOT EXISTS email_delivery (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    sent boolean DEFAULT false NOT NULL,
    error boolean DEFAULT false NOT NULL,
    error_message text,
    "user" uuid,
    email_template uuid
  ); trx2
2020-11-10T11:44:35.265Z knex:bindings [] trx2
2020-11-10T11:44:35.266Z knex:query CREATE TABLE IF NOT EXISTS open_university_registration_link (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    course_code text NOT NULL,
    language text NOT NULL,
    link text,
    start_date timestamp(3) without time zone,
    stop_date timestamp(3) without time zone,
    course uuid
  ); trx2
2020-11-10T11:44:35.267Z knex:bindings [] trx2
2020-11-10T11:44:35.270Z knex:query CREATE TABLE IF NOT EXISTS email_template (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    name text,
    txt_body text,
    html_body text,
    title text
  ); trx2
2020-11-10T11:44:35.270Z knex:bindings [] trx2
2020-11-10T11:44:35.272Z knex:query CREATE TABLE IF NOT EXISTS organization (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    slug text NOT NULL,
    verified_at timestamp(3) without time zone,
    verified boolean,
    disabled boolean,
    hidden boolean,
    tmc_created_at timestamp(3) without time zone,
    tmc_updated_at timestamp(3) without time zone,
    logo_file_name text,
    logo_content_type text,
    logo_file_size integer,
    logo_updated_at timestamp(3) without time zone,
    phone text,
    contact_information text,
    email text,
    website text,
    pinned boolean,
    secret_key text NOT NULL,
    creator uuid
  ); trx2
2020-11-10T11:44:35.272Z knex:bindings [] trx2
2020-11-10T11:44:35.275Z knex:query CREATE TABLE IF NOT EXISTS exercise (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    custom_id text NOT NULL,
    name text,
    part integer,
    section integer,
    max_points integer,
    "timestamp" timestamp(3) without time zone,
    deleted boolean DEFAULT false,
    service uuid,
    course uuid
  ); trx2
2020-11-10T11:44:35.275Z knex:bindings [] trx2
2020-11-10T11:44:35.279Z knex:query CREATE TABLE IF NOT EXISTS organization_translation (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    language text NOT NULL,
    name text NOT NULL,
    disabled_reason text,
    information text,
    organization uuid
  ); trx2
2020-11-10T11:44:35.279Z knex:bindings [] trx2
2020-11-10T11:44:35.281Z knex:query CREATE TABLE IF NOT EXISTS exercise_completion (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    n_points numeric(65,30),
    "timestamp" timestamp(3) without time zone NOT NULL,
    completed boolean DEFAULT false,
    "user" uuid,
    exercise uuid
  ); trx2
2020-11-10T11:44:35.281Z knex:bindings [] trx2
2020-11-10T11:44:35.284Z knex:query CREATE TABLE IF NOT EXISTS service (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    url text NOT NULL,
    name text NOT NULL
  ); trx2
2020-11-10T11:44:35.284Z knex:bindings [] trx2
2020-11-10T11:44:35.284Z knex:query CREATE TABLE IF NOT EXISTS exercise_completion_required_actions (
    id uuid NOT NULL,
    value text NOT NULL,
    exercise_completion uuid
  ); trx2
2020-11-10T11:44:35.284Z knex:bindings [] trx2
2020-11-10T11:44:35.289Z knex:query CREATE TABLE IF NOT EXISTS study_module (
    id uuid NOT NULL,
    slug text NOT NULL,
    name text NOT NULL,
    image text,
    "order" integer,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone
  ); trx2
2020-11-10T11:44:35.289Z knex:bindings [] trx2
2020-11-10T11:44:35.290Z knex:query CREATE TABLE IF NOT EXISTS image (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    name text,
    original text NOT NULL,
    original_mimetype text NOT NULL,
    uncompressed text NOT NULL,
    uncompressed_mimetype text NOT NULL,
    compressed text,
    compressed_mimetype text,
    encoding text,
    "default" boolean
  ); trx2
2020-11-10T11:44:35.290Z knex:bindings [] trx2
  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS completion (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    user_upstream_id integer,\n' +
        '    email text NOT NULL,\n' +
        '    student_number text,\n' +
        '    completion_language text,\n' +
        '    grade text,\n' +
        '    certificate_id text,\n' +
        '    course uuid,\n' +
        '    "user" uuid,\n' +
        '    eligible_for_ects boolean DEFAULT true\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '2RVK87DSmRPV3WdUXk7UK'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TYPE course_status AS ENUM (\n' +
        "    'Active',\n" +
        "    'Ended',\n" +
        "    'Upcoming'\n" +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'nMNvbCIl0rArjMHVl8f7v'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS completion_registered (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    real_student_number text NOT NULL,\n' +
        '    "user" uuid,\n' +
        '    completion uuid,\n' +
        '    course uuid,\n' +
        '    organization uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'FQHUtCpOZdhUZ8hH8MydC'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TYPE organization_role AS ENUM (\n' +
        "    'Teacher',\n" +
        "    'Student',\n" +
        "    'OrganizationAdmin'\n" +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'aVCpKjL6ihi9Nu5oE5NXz'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS "UserAppDatumConfig" (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    name text,\n' +
        '    "timestamp" timestamp(3) without time zone\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '7nnRFi23BVZ4tYi33r8hM'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS course (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    teacher_in_charge_name text NOT NULL,\n' +
        '    teacher_in_charge_email text NOT NULL,\n' +
        '    support_email text,\n' +
        '    start_date text NOT NULL,\n' +
        '    end_date text,\n' +
        '    name text NOT NULL,\n' +
        '    slug text NOT NULL,\n' +
        '    ects text,\n' +
        '    promote boolean,\n' +
        "    status course_status DEFAULT 'Upcoming'::course_status,\n" +
        '    start_point boolean,\n' +
        '    hidden boolean,\n' +
        '    study_module_start_point boolean,\n' +
        '    "order" integer,\n' +
        '    study_module_order integer,\n' +
        '    automatic_completions boolean DEFAULT false,\n' +
        '    points_needed integer,\n' +
        '    exercise_completions_needed integer,\n' +
        '    has_certificate boolean DEFAULT false,\n' +
        '    owner_organization uuid,\n' +
        '    completion_email uuid,\n' +
        '    inherit_settings_from uuid,\n' +
        '    completions_handled_by uuid,\n' +
        '    photo uuid,\n' +
        '    automatic_completions_eligible_for_ects boolean DEFAULT true\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'aieiXRe80I4_oXlLJTrQw'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS "UserCourseSettings" (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    language text,\n' +
        '    country text,\n' +
        '    research boolean,\n' +
        '    marketing boolean,\n' +
        '    course_variant text,\n' +
        '    other text,\n' +
        '    "user" uuid,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'SB-k7_K6RyuR4aYtX4IyT'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS course_alias (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    course_code text NOT NULL,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'RuhleHrE9hSiMSqTlKzhv'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS "_CourseToService" (\n' +
        '    "A" uuid NOT NULL,\n' +
        '    "B" uuid NOT NULL\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'pL7I4LA1FEPY11UFD74qf'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS "_StudyModuleToCourse" (\n' +
        '    "A" uuid NOT NULL,\n' +
        '    "B" uuid NOT NULL\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '87zHs2c3HKTZSwsCE4oRw'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS course_organization (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    creator boolean,\n' +
        '    course uuid,\n' +
        '    organization uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'x3zOB1Ps5BaoDmMsoNhal'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS completion (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    user_upstream_id integer,\n' +
        '    email text NOT NULL,\n' +
        '    student_number text,\n' +
        '    completion_language text,\n' +
        '    grade text,\n' +
        '    certificate_id text,\n' +
        '    course uuid,\n' +
        '    "user" uuid,\n' +
        '    eligible_for_ects boolean DEFAULT true\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'P4z4jb4q6F0IRSWzijVDF'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS course_translation (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    name text NOT NULL,\n' +
        '    language text NOT NULL,\n' +
        '    description text NOT NULL,\n' +
        '    link text,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '67h58YFZoCYlE7K0S60qK'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS completion_registered (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    real_student_number text NOT NULL,\n' +
        '    "user" uuid,\n' +
        '    completion uuid,\n' +
        '    course uuid,\n' +
        '    organization uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'pcZeFbecbvXtGmE19qbzm'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS course_variant (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    slug text NOT NULL,\n' +
        '    description text,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '4SRLi3HBXa_wWK6OlQmsC'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS course (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    teacher_in_charge_name text NOT NULL,\n' +
        '    teacher_in_charge_email text NOT NULL,\n' +
        '    support_email text,\n' +
        '    start_date text NOT NULL,\n' +
        '    end_date text,\n' +
        '    name text NOT NULL,\n' +
        '    slug text NOT NULL,\n' +
        '    ects text,\n' +
        '    promote boolean,\n' +
        "    status course_status DEFAULT 'Upcoming'::course_status,\n" +
        '    start_point boolean,\n' +
        '    hidden boolean,\n' +
        '    study_module_start_point boolean,\n' +
        '    "order" integer,\n' +
        '    study_module_order integer,\n' +
        '    automatic_completions boolean DEFAULT false,\n' +
        '    points_needed integer,\n' +
        '    exercise_completions_needed integer,\n' +
        '    has_certificate boolean DEFAULT false,\n' +
        '    owner_organization uuid,\n' +
        '    completion_email uuid,\n' +
        '    inherit_settings_from uuid,\n' +
        '    completions_handled_by uuid,\n' +
        '    photo uuid,\n' +
        '    automatic_completions_eligible_for_ects boolean DEFAULT true\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'XBf-sa81TdtawltztGyhu'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS email_delivery (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    sent boolean DEFAULT false NOT NULL,\n' +
        '    error boolean DEFAULT false NOT NULL,\n' +
        '    error_message text,\n' +
        '    "user" uuid,\n' +
        '    email_template uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '12rBdAEjh65hqjJL8qK-c'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS course_alias (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    course_code text NOT NULL,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'sy3Bu2D-V7hsUbXThbFm9'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS email_template (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    name text,\n' +
        '    txt_body text,\n' +
        '    html_body text,\n' +
        '    title text\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '0Ff9VpHeflkGc6bqJK8P1'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS course_organization (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    creator boolean,\n' +
        '    course uuid,\n' +
        '    organization uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'CO44FUKbojYEzKGNRI9fL'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS exercise (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    custom_id text NOT NULL,\n' +
        '    name text,\n' +
        '    part integer,\n' +
        '    section integer,\n' +
        '    max_points integer,\n' +
        '    "timestamp" timestamp(3) without time zone,\n' +
        '    deleted boolean DEFAULT false,\n' +
        '    service uuid,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'SbajFze1eLmdZop0q2JLT'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS exercise_completion (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    n_points numeric(65,30),\n' +
        '    "timestamp" timestamp(3) without time zone NOT NULL,\n' +
        '    completed boolean DEFAULT false,\n' +
        '    "user" uuid,\n' +
        '    exercise uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '51U28jvcRSNk17gDRfJm2'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS course_translation (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    name text NOT NULL,\n' +
        '    language text NOT NULL,\n' +
        '    description text NOT NULL,\n' +
        '    link text,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'jxHW3a5GKU-8DL1d1VvzM'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS exercise_completion_required_actions (\n' +
        '    id uuid NOT NULL,\n' +
        '    value text NOT NULL,\n' +
        '    exercise_completion uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'Vr_ZWFnW6-b6UOMcfQmdn'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS course_variant (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    slug text NOT NULL,\n' +
        '    description text,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'gksTw0zx4a8xD0s1iFevg'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS image (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    name text,\n' +
        '    original text NOT NULL,\n' +
        '    original_mimetype text NOT NULL,\n' +
        '    uncompressed text NOT NULL,\n' +
        '    uncompressed_mimetype text NOT NULL,\n' +
        '    compressed text,\n' +
        '    compressed_mimetype text,\n' +
        '    encoding text,\n' +
        '    "default" boolean\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '89IdEkdcG0aZ9PoUIzmQW'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS email_delivery (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    sent boolean DEFAULT false NOT NULL,\n' +
        '    error boolean DEFAULT false NOT NULL,\n' +
        '    error_message text,\n' +
        '    "user" uuid,\n' +
        '    email_template uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'n7HSD11BXA9THQb9hf_vK'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS open_university_registration_link (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    course_code text NOT NULL,\n' +
        '    language text NOT NULL,\n' +
        '    link text,\n' +
        '    start_date timestamp(3) without time zone,\n' +
        '    stop_date timestamp(3) without time zone,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'CeztNXuwCDKmcK8QQoO6s'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS email_template (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    name text,\n' +
        '    txt_body text,\n' +
        '    html_body text,\n' +
        '    title text\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'kyI1EfvBERkB0Ae3ORl3A'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS organization (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    slug text NOT NULL,\n' +
        '    verified_at timestamp(3) without time zone,\n' +
        '    verified boolean,\n' +
        '    disabled boolean,\n' +
        '    hidden boolean,\n' +
        '    tmc_created_at timestamp(3) without time zone,\n' +
        '    tmc_updated_at timestamp(3) without time zone,\n' +
        '    logo_file_name text,\n' +
        '    logo_content_type text,\n' +
        '    logo_file_size integer,\n' +
        '    logo_updated_at timestamp(3) without time zone,\n' +
        '    phone text,\n' +
        '    contact_information text,\n' +
        '    email text,\n' +
        '    website text,\n' +
        '    pinned boolean,\n' +
        '    secret_key text NOT NULL,\n' +
        '    creator uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '-lTCNYCT2uDVlEXBQFm6E'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS exercise (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    custom_id text NOT NULL,\n' +
        '    name text,\n' +
        '    part integer,\n' +
        '    section integer,\n' +
        '    max_points integer,\n' +
        '    "timestamp" timestamp(3) without time zone,\n' +
        '    deleted boolean DEFAULT false,\n' +
        '    service uuid,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'XyCIrD2PUuqPFTmJHPFd7'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS organization_translation (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    language text NOT NULL,\n' +
        '    name text NOT NULL,\n' +
        '    disabled_reason text,\n' +
        '    information text,\n' +
        '    organization uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '0IX4x_bXJZgPS1qSoWDDT'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS exercise_completion (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    n_points numeric(65,30),\n' +
        '    "timestamp" timestamp(3) without time zone NOT NULL,\n' +
        '    completed boolean DEFAULT false,\n' +
        '    "user" uuid,\n' +
        '    exercise uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'LO7XQlPvUR2BdzcLDdoVY'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS service (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    url text NOT NULL,\n' +
        '    name text NOT NULL\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '-rMpMoCEstoe6gEerOBUA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS exercise_completion_required_actions (\n' +
        '    id uuid NOT NULL,\n' +
        '    value text NOT NULL,\n' +
        '    exercise_completion uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'wb7QFmfw2qX_GaoeN00fe'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS study_module (\n' +
        '    id uuid NOT NULL,\n' +
        '    slug text NOT NULL,\n' +
        '    name text NOT NULL,\n' +
        '    image text,\n' +
        '    "order" integer,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '4Qtill2CT3W05wkdhnPvF'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS image (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    name text,\n' +
        '    original text NOT NULL,\n' +
        '    original_mimetype text NOT NULL,\n' +
        '    uncompressed text NOT NULL,\n' +
        '    uncompressed_mimetype text NOT NULL,\n' +
        '    compressed text,\n' +
        '    compressed_mimetype text,\n' +
        '    encoding text,\n' +
        '    "default" boolean\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'uzVZDjIOglgayG5wHag7q'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS open_university_registration_link (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    course_code text NOT NULL,\n' +
        '    language text NOT NULL,\n' +
        '    link text,\n' +
        '    start_date timestamp(3) without time zone,\n' +
        '    stop_date timestamp(3) without time zone,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'KxvqBaVI2fawtZP1kMDpL'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:35.295Z knex:query CREATE TABLE IF NOT EXISTS open_university_registration_link (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    course_code text NOT NULL,
    language text NOT NULL,
    link text,
    start_date timestamp(3) without time zone,
    stop_date timestamp(3) without time zone,
    course uuid
  ); trx2
2020-11-10T11:44:35.295Z knex:bindings [] trx2
2020-11-10T11:44:35.296Z knex:query CREATE TABLE IF NOT EXISTS study_module_translation (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    name text NOT NULL,
    language text NOT NULL,
    description text NOT NULL,
    study_module uuid
  ); trx2
2020-11-10T11:44:35.296Z knex:bindings [] trx2
2020-11-10T11:44:35.301Z knex:query CREATE TABLE IF NOT EXISTS organization (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    slug text NOT NULL,
    verified_at timestamp(3) without time zone,
    verified boolean,
    disabled boolean,
    hidden boolean,
    tmc_created_at timestamp(3) without time zone,
    tmc_updated_at timestamp(3) without time zone,
    logo_file_name text,
    logo_content_type text,
    logo_file_size integer,
    logo_updated_at timestamp(3) without time zone,
    phone text,
    contact_information text,
    email text,
    website text,
    pinned boolean,
    secret_key text NOT NULL,
    creator uuid
  ); trx2
2020-11-10T11:44:35.301Z knex:bindings [] trx2
2020-11-10T11:44:35.301Z knex:query CREATE TABLE IF NOT EXISTS "user" (
    id uuid NOT NULL,
    upstream_id integer NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    first_name text,
    last_name text,
    username text NOT NULL,
    email text NOT NULL,
    administrator boolean NOT NULL,
    student_number text,
    real_student_number text,
    research_consent boolean
  ); trx2
2020-11-10T11:44:35.301Z knex:bindings [] trx2
2020-11-10T11:44:35.308Z knex:query CREATE TABLE IF NOT EXISTS organization_translation (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    language text NOT NULL,
    name text NOT NULL,
    disabled_reason text,
    information text,
    organization uuid
  ); trx2
2020-11-10T11:44:35.308Z knex:bindings [] trx2
2020-11-10T11:44:35.308Z knex:query CREATE TABLE IF NOT EXISTS user_course_progress (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    progress json NOT NULL,
    max_points numeric(65,30),
    n_points numeric(65,30),
    "user" uuid,
    course uuid
  ); trx2
2020-11-10T11:44:35.308Z knex:bindings [] trx2
2020-11-10T11:44:35.314Z knex:query CREATE TABLE IF NOT EXISTS service (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    url text NOT NULL,
    name text NOT NULL
  ); trx2
2020-11-10T11:44:35.314Z knex:bindings [] trx2
2020-11-10T11:44:35.314Z knex:query CREATE TABLE IF NOT EXISTS user_course_service_progress (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    progress json NOT NULL,
    "timestamp" timestamp(3) without time zone,
    service uuid,
    "user" uuid,
    course uuid,
    user_course_progress uuid
  ); trx2
2020-11-10T11:44:35.314Z knex:bindings [] trx2
2020-11-10T11:44:35.319Z knex:query CREATE TABLE IF NOT EXISTS user_course_settings_visibility (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    language text NOT NULL,
    course uuid
  ); trx2
2020-11-10T11:44:35.319Z knex:bindings [] trx2
2020-11-10T11:44:35.320Z knex:query CREATE TABLE IF NOT EXISTS study_module (
    id uuid NOT NULL,
    slug text NOT NULL,
    name text NOT NULL,
    image text,
    "order" integer,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone
  ); trx2
2020-11-10T11:44:35.320Z knex:bindings [] trx2
2020-11-10T11:44:35.325Z knex:query CREATE TABLE IF NOT EXISTS user_organization (
    id uuid NOT NULL,
    role organization_role DEFAULT 'Student'::organization_role,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    organization uuid,
    "user" uuid
  ); trx2
2020-11-10T11:44:35.325Z knex:bindings [] trx2
2020-11-10T11:44:35.327Z knex:query CREATE TABLE IF NOT EXISTS study_module_translation (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    name text NOT NULL,
    language text NOT NULL,
    description text NOT NULL,
    study_module uuid
  ); trx2
2020-11-10T11:44:35.327Z knex:bindings [] trx2
2020-11-10T11:44:35.328Z knex:query CREATE TABLE IF NOT EXISTS verified_user (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    display_name text,
    personal_unique_code text NOT NULL,
    organization uuid,
    "user" uuid
  ); trx2
2020-11-10T11:44:35.328Z knex:bindings [] trx2
2020-11-10T11:44:35.332Z knex:tx trx3: Starting nested transaction
2020-11-10T11:44:35.332Z knex:query SAVEPOINT trx3; trx3
2020-11-10T11:44:35.332Z knex:bindings undefined trx3
2020-11-10T11:44:35.332Z knex:query CREATE TABLE IF NOT EXISTS "user" (
    id uuid NOT NULL,
    upstream_id integer NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    first_name text,
    last_name text,
    username text NOT NULL,
    email text NOT NULL,
    administrator boolean NOT NULL,
    student_number text,
    real_student_number text,
    research_consent boolean
  ); trx2
2020-11-10T11:44:35.332Z knex:bindings [] trx2
2020-11-10T11:44:35.335Z knex:query ALTER TABLE ONLY "UserAppDatumConfig" 
        ADD CONSTRAINT "UserAppDatumConfig_pkey" PRIMARY KEY (id); trx3
2020-11-10T11:44:35.335Z knex:bindings [] trx3
2020-11-10T11:44:35.339Z knex:query CREATE TABLE IF NOT EXISTS user_course_progress (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    progress json NOT NULL,
    max_points numeric(65,30),
    n_points numeric(65,30),
    "user" uuid,
    course uuid
  ); trx2
2020-11-10T11:44:35.339Z knex:bindings [] trx2
2020-11-10T11:44:35.339Z knex:query ALTER TABLE ONLY "UserCourseSettings"
        ADD CONSTRAINT "UserCourseSettings_pkey" PRIMARY KEY (id); trx3
2020-11-10T11:44:35.339Z knex:bindings [] trx3
2020-11-10T11:44:35.343Z knex:query ALTER TABLE ONLY completion
        ADD CONSTRAINT completion_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.343Z knex:bindings [] trx3
2020-11-10T11:44:35.344Z knex:query CREATE TABLE IF NOT EXISTS user_course_service_progress (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    progress json NOT NULL,
    "timestamp" timestamp(3) without time zone,
    service uuid,
    "user" uuid,
    course uuid,
    user_course_progress uuid
  ); trx2
2020-11-10T11:44:35.344Z knex:bindings [] trx2
2020-11-10T11:44:35.348Z knex:query ALTER TABLE ONLY completion_registered
        ADD CONSTRAINT completion_registered_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.348Z knex:bindings [] trx3
2020-11-10T11:44:35.349Z knex:query CREATE TABLE IF NOT EXISTS user_course_settings_visibility (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    language text NOT NULL,
    course uuid
  ); trx2
2020-11-10T11:44:35.350Z knex:bindings [] trx2
2020-11-10T11:44:35.352Z knex:query ALTER TABLE ONLY course_alias
        ADD CONSTRAINT course_alias_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.352Z knex:bindings [] trx3
2020-11-10T11:44:35.355Z knex:query CREATE TABLE IF NOT EXISTS user_organization (
    id uuid NOT NULL,
    role organization_role DEFAULT 'Student'::organization_role,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    organization uuid,
    "user" uuid
  ); trx2
2020-11-10T11:44:35.355Z knex:bindings [] trx2
2020-11-10T11:44:35.356Z knex:query ALTER TABLE ONLY course_organization
        ADD CONSTRAINT course_organization_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.357Z knex:bindings [] trx3
2020-11-10T11:44:35.358Z knex:query CREATE TABLE IF NOT EXISTS verified_user (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    display_name text,
    personal_unique_code text NOT NULL,
    organization uuid,
    "user" uuid
  ); trx2
2020-11-10T11:44:35.358Z knex:bindings [] trx2
2020-11-10T11:44:35.361Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.361Z knex:bindings [] trx3
2020-11-10T11:44:35.362Z knex:tx trx3: Starting nested transaction
2020-11-10T11:44:35.362Z knex:query SAVEPOINT trx3; trx3
2020-11-10T11:44:35.362Z knex:bindings undefined trx3
2020-11-10T11:44:35.364Z knex:query ALTER TABLE ONLY "UserAppDatumConfig" 
        ADD CONSTRAINT "UserAppDatumConfig_pkey" PRIMARY KEY (id); trx3
2020-11-10T11:44:35.364Z knex:bindings [] trx3
2020-11-10T11:44:35.365Z knex:query ALTER TABLE ONLY course_translation
        ADD CONSTRAINT course_translation_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.365Z knex:bindings [] trx3
2020-11-10T11:44:35.369Z knex:query ALTER TABLE ONLY "UserCourseSettings"
        ADD CONSTRAINT "UserCourseSettings_pkey" PRIMARY KEY (id); trx3
2020-11-10T11:44:35.369Z knex:bindings [] trx3
2020-11-10T11:44:35.369Z knex:query ALTER TABLE ONLY course_variant
        ADD CONSTRAINT course_variant_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.369Z knex:bindings [] trx3
2020-11-10T11:44:35.373Z knex:query ALTER TABLE ONLY completion
        ADD CONSTRAINT completion_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.373Z knex:bindings [] trx3
2020-11-10T11:44:35.374Z knex:query ALTER TABLE ONLY email_template
        ADD CONSTRAINT email_template_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.374Z knex:bindings [] trx3
2020-11-10T11:44:35.377Z knex:query ALTER TABLE ONLY completion_registered
        ADD CONSTRAINT completion_registered_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.377Z knex:bindings [] trx3
2020-11-10T11:44:35.378Z knex:query ALTER TABLE ONLY exercise_completion
        ADD CONSTRAINT exercise_completion_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.378Z knex:bindings [] trx3
2020-11-10T11:44:35.382Z knex:query ALTER TABLE ONLY course_alias
        ADD CONSTRAINT course_alias_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.382Z knex:bindings [] trx3
2020-11-10T11:44:35.382Z knex:query ALTER TABLE ONLY exercise_completion_required_actions
        ADD CONSTRAINT exercise_completion_required_actions_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.382Z knex:bindings [] trx3
2020-11-10T11:44:35.386Z knex:query ALTER TABLE ONLY course_organization
        ADD CONSTRAINT course_organization_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.386Z knex:bindings [] trx3
2020-11-10T11:44:35.386Z knex:query ALTER TABLE ONLY exercise
        ADD CONSTRAINT exercise_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.386Z knex:bindings [] trx3
2020-11-10T11:44:35.390Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.390Z knex:bindings [] trx3
2020-11-10T11:44:35.390Z knex:query ALTER TABLE ONLY image
        ADD CONSTRAINT image_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.391Z knex:bindings [] trx3
2020-11-10T11:44:35.394Z knex:query ALTER TABLE ONLY course_translation
        ADD CONSTRAINT course_translation_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.394Z knex:bindings [] trx3
2020-11-10T11:44:35.395Z knex:query ALTER TABLE ONLY open_university_registration_link
        ADD CONSTRAINT open_university_registration_link_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.395Z knex:bindings [] trx3
  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS study_module_translation (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    name text NOT NULL,\n' +
        '    language text NOT NULL,\n' +
        '    description text NOT NULL,\n' +
        '    study_module uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '0UHTOMnAYGbX6rQfnfE2I'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS organization (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    slug text NOT NULL,\n' +
        '    verified_at timestamp(3) without time zone,\n' +
        '    verified boolean,\n' +
        '    disabled boolean,\n' +
        '    hidden boolean,\n' +
        '    tmc_created_at timestamp(3) without time zone,\n' +
        '    tmc_updated_at timestamp(3) without time zone,\n' +
        '    logo_file_name text,\n' +
        '    logo_content_type text,\n' +
        '    logo_file_size integer,\n' +
        '    logo_updated_at timestamp(3) without time zone,\n' +
        '    phone text,\n' +
        '    contact_information text,\n' +
        '    email text,\n' +
        '    website text,\n' +
        '    pinned boolean,\n' +
        '    secret_key text NOT NULL,\n' +
        '    creator uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'BlHrqJMNLTUR80bGkl35N'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS "user" (\n' +
        '    id uuid NOT NULL,\n' +
        '    upstream_id integer NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    first_name text,\n' +
        '    last_name text,\n' +
        '    username text NOT NULL,\n' +
        '    email text NOT NULL,\n' +
        '    administrator boolean NOT NULL,\n' +
        '    student_number text,\n' +
        '    real_student_number text,\n' +
        '    research_consent boolean\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'wd1hZFCB9luQ1FHsvix8l'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS organization_translation (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    language text NOT NULL,\n' +
        '    name text NOT NULL,\n' +
        '    disabled_reason text,\n' +
        '    information text,\n' +
        '    organization uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'v7QwUNsbav8hPzbzL0yBC'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS user_course_progress (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    progress json NOT NULL,\n' +
        '    max_points numeric(65,30),\n' +
        '    n_points numeric(65,30),\n' +
        '    "user" uuid,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'pJ-y6J8vqwkYhN3k9H_dO'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS service (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    url text NOT NULL,\n' +
        '    name text NOT NULL\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'heCwAwxBjbaz5H081uPAm'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS user_course_service_progress (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    progress json NOT NULL,\n' +
        '    "timestamp" timestamp(3) without time zone,\n' +
        '    service uuid,\n' +
        '    "user" uuid,\n' +
        '    course uuid,\n' +
        '    user_course_progress uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'fTb1YPFiwXeuGnzJg1baj'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS user_course_settings_visibility (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    language text NOT NULL,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'xb3U64UaQY4JoF88Ii4Gv'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS study_module (\n' +
        '    id uuid NOT NULL,\n' +
        '    slug text NOT NULL,\n' +
        '    name text NOT NULL,\n' +
        '    image text,\n' +
        '    "order" integer,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'PcP_1aet-u64EhTqkMBkZ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS user_organization (\n' +
        '    id uuid NOT NULL,\n' +
        "    role organization_role DEFAULT 'Student'::organization_role,\n" +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    organization uuid,\n' +
        '    "user" uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'xYXM_owIMKavyw4MdDQdN'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS study_module_translation (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    name text NOT NULL,\n' +
        '    language text NOT NULL,\n' +
        '    description text NOT NULL,\n' +
        '    study_module uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'eV32S2FkuGMF1Pmuuwfcz'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS verified_user (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    display_name text,\n' +
        '    personal_unique_code text NOT NULL,\n' +
        '    organization uuid,\n' +
        '    "user" uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '-b3Fno1n-2h-URVLXT0ML'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS "user" (\n' +
        '    id uuid NOT NULL,\n' +
        '    upstream_id integer NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    first_name text,\n' +
        '    last_name text,\n' +
        '    username text NOT NULL,\n' +
        '    email text NOT NULL,\n' +
        '    administrator boolean NOT NULL,\n' +
        '    student_number text,\n' +
        '    real_student_number text,\n' +
        '    research_consent boolean\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'jzr5L58FHxVcHw3XxozMa'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "UserAppDatumConfig" \n' +
        '        ADD CONSTRAINT "UserAppDatumConfig_pkey" PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'r04XvXjBIDCBgMaI_nqI8'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS user_course_progress (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    progress json NOT NULL,\n' +
        '    max_points numeric(65,30),\n' +
        '    n_points numeric(65,30),\n' +
        '    "user" uuid,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'iV2fb2NYtDdnH2yQcs0Ge'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "UserCourseSettings"\n' +
        '        ADD CONSTRAINT "UserCourseSettings_pkey" PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'P7eFsdIVkh9YPJvz-qYJH'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion\n' +
        '        ADD CONSTRAINT completion_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'r2jtQWjyDPYvsIVpf4ALs'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS user_course_service_progress (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    progress json NOT NULL,\n' +
        '    "timestamp" timestamp(3) without time zone,\n' +
        '    service uuid,\n' +
        '    "user" uuid,\n' +
        '    course uuid,\n' +
        '    user_course_progress uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'R4W-FFKugoQwe36KxlOzj'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion_registered\n' +
        '        ADD CONSTRAINT completion_registered_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'jxWiIVcomy0HiJhPXlhW1'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS user_course_settings_visibility (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    language text NOT NULL,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'S6xqAWWhWxuZPs4_0ihv1'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_alias\n' +
        '        ADD CONSTRAINT course_alias_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'uBJWwWATld8ouwABLQHV-'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS user_organization (\n' +
        '    id uuid NOT NULL,\n' +
        "    role organization_role DEFAULT 'Student'::organization_role,\n" +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    organization uuid,\n' +
        '    "user" uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'UFsF2vFzuvv7nhDhJ5lwF'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_organization\n' +
        '        ADD CONSTRAINT course_organization_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'LGCbDb5qamG8DeMV6hnKt'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS verified_user (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    display_name text,\n' +
        '    personal_unique_code text NOT NULL,\n' +
        '    organization uuid,\n' +
        '    "user" uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'xJneFSNzWgcoQVkxXlcas'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'WlIKr7CxyTt3NmpS3LtVi'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "UserAppDatumConfig" \n' +
        '        ADD CONSTRAINT "UserAppDatumConfig_pkey" PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'FvqOOGN1w839SH9BtDgJF'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_translation\n' +
        '        ADD CONSTRAINT course_translation_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: '6oCs_So1ilKM-kLb_bPMo'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "UserCourseSettings"\n' +
        '        ADD CONSTRAINT "UserCourseSettings_pkey" PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'aLtjGJ1twwfyBXfTIJR5_'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_variant\n' +
        '        ADD CONSTRAINT course_variant_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'SybRhBm8DMQSvK3B9w8dv'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion\n' +
        '        ADD CONSTRAINT completion_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'zc0M9VjBLoxXPzmsAebj0'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY email_template\n' +
        '        ADD CONSTRAINT email_template_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: '7aC3Thtwy9FOePg0SmzAT'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion_registered\n' +
        '        ADD CONSTRAINT completion_registered_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'aapjb304RDeJmwd9byRuR'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise_completion\n' +
        '        ADD CONSTRAINT exercise_completion_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'AHGRlD_FM6Ow733LeeKvV'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_alias\n' +
        '        ADD CONSTRAINT course_alias_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'MjTZ6yV4i_zt2dgwYP6Nh'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise_completion_required_actions\n' +
        '        ADD CONSTRAINT exercise_completion_required_actions_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'Iw4kfebiwL1PNTvNx8SQT'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_organization\n' +
        '        ADD CONSTRAINT course_organization_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'tVvVO5T9iCMYiSRJilB3V'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise\n' +
        '        ADD CONSTRAINT exercise_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: '8efwbWfW8az1zd7LSu7yk'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'NP_pv9L6i16CeqGDIj0ll'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY image\n        ADD CONSTRAINT image_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'K5KXCcudeeIJtrKLSEPQd'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_translation\n' +
        '        ADD CONSTRAINT course_translation_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'BEDUxlpkXB3yXpHzpFapU'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY open_university_registration_link\n' +
        '        ADD CONSTRAINT open_university_registration_link_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'juX-xKFN2scYD5wnyme3G'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:35.398Z knex:query ALTER TABLE ONLY course_variant
        ADD CONSTRAINT course_variant_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.398Z knex:bindings [] trx3
2020-11-10T11:44:35.399Z knex:query ALTER TABLE ONLY organization
        ADD CONSTRAINT organization_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.399Z knex:bindings [] trx3
2020-11-10T11:44:35.402Z knex:query ALTER TABLE ONLY email_template
        ADD CONSTRAINT email_template_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.402Z knex:bindings [] trx3
2020-11-10T11:44:35.403Z knex:query ALTER TABLE ONLY organization_translation
        ADD CONSTRAINT organization_translation_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.403Z knex:bindings [] trx3
2020-11-10T11:44:35.407Z knex:query ALTER TABLE ONLY exercise_completion
        ADD CONSTRAINT exercise_completion_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.407Z knex:bindings [] trx3
2020-11-10T11:44:35.407Z knex:query ALTER TABLE ONLY service
        ADD CONSTRAINT service_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.407Z knex:bindings [] trx3
2020-11-10T11:44:35.411Z knex:query ALTER TABLE ONLY study_module
        ADD CONSTRAINT study_module_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.411Z knex:bindings [] trx3
2020-11-10T11:44:35.411Z knex:query ALTER TABLE ONLY exercise_completion_required_actions
        ADD CONSTRAINT exercise_completion_required_actions_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.412Z knex:bindings [] trx3
2020-11-10T11:44:35.415Z knex:query ALTER TABLE ONLY study_module_translation
        ADD CONSTRAINT study_module_translation_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.415Z knex:bindings [] trx3
2020-11-10T11:44:35.416Z knex:query ALTER TABLE ONLY exercise
        ADD CONSTRAINT exercise_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.416Z knex:bindings [] trx3
2020-11-10T11:44:35.420Z knex:query ALTER TABLE ONLY user_course_progress
        ADD CONSTRAINT user_course_progress_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.420Z knex:bindings [] trx3
2020-11-10T11:44:35.421Z knex:query ALTER TABLE ONLY image
        ADD CONSTRAINT image_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.421Z knex:bindings [] trx3
2020-11-10T11:44:35.424Z knex:query ALTER TABLE ONLY user_course_service_progress
        ADD CONSTRAINT user_course_service_progress_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.425Z knex:bindings [] trx3
2020-11-10T11:44:35.425Z knex:query ALTER TABLE ONLY open_university_registration_link
        ADD CONSTRAINT open_university_registration_link_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.426Z knex:bindings [] trx3
2020-11-10T11:44:35.429Z knex:query ALTER TABLE ONLY user_course_settings_visibility
        ADD CONSTRAINT user_course_settings_visibility_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.430Z knex:bindings [] trx3
2020-11-10T11:44:35.430Z knex:query ALTER TABLE ONLY organization
        ADD CONSTRAINT organization_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.430Z knex:bindings [] trx3
2020-11-10T11:44:35.434Z knex:query ALTER TABLE ONLY user_organization
        ADD CONSTRAINT user_organization_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.434Z knex:bindings [] trx3
2020-11-10T11:44:35.435Z knex:query ALTER TABLE ONLY organization_translation
        ADD CONSTRAINT organization_translation_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.435Z knex:bindings [] trx3
2020-11-10T11:44:35.438Z knex:query ALTER TABLE ONLY "user"
        ADD CONSTRAINT user_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.439Z knex:bindings [] trx3
2020-11-10T11:44:35.439Z knex:query ALTER TABLE ONLY service
        ADD CONSTRAINT service_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.439Z knex:bindings [] trx3
2020-11-10T11:44:35.443Z knex:query ALTER TABLE ONLY study_module
        ADD CONSTRAINT study_module_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.443Z knex:bindings [] trx3
2020-11-10T11:44:35.447Z knex:query ALTER TABLE ONLY study_module_translation
        ADD CONSTRAINT study_module_translation_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.447Z knex:bindings [] trx3
2020-11-10T11:44:35.451Z knex:query ALTER TABLE ONLY user_course_progress
        ADD CONSTRAINT user_course_progress_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.451Z knex:bindings [] trx3
2020-11-10T11:44:35.452Z knex:query ALTER TABLE ONLY verified_user
        ADD CONSTRAINT verified_user_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.452Z knex:bindings [] trx3
2020-11-10T11:44:35.454Z knex:query ALTER TABLE ONLY user_course_service_progress
        ADD CONSTRAINT user_course_service_progress_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.454Z knex:bindings [] trx3
2020-11-10T11:44:35.454Z knex:query RELEASE SAVEPOINT trx3; trx3
2020-11-10T11:44:35.454Z knex:bindings undefined trx3
2020-11-10T11:44:35.455Z knex:tx trx3: releasing connection
2020-11-10T11:44:35.455Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "_CourseToService_AB_unique" ON "_CourseToService" USING btree ("A", "B"); trx3
2020-11-10T11:44:35.455Z knex:bindings [] trx3
2020-11-10T11:44:35.457Z knex:query ALTER TABLE ONLY user_course_settings_visibility
        ADD CONSTRAINT user_course_settings_visibility_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.457Z knex:bindings [] trx3
2020-11-10T11:44:35.458Z knex:query CREATE INDEX IF NOT EXISTS "_CourseToService_B" ON "_CourseToService" USING btree ("B"); trx3
2020-11-10T11:44:35.458Z knex:bindings [] trx3
2020-11-10T11:44:35.460Z knex:query ALTER TABLE ONLY user_organization
        ADD CONSTRAINT user_organization_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.460Z knex:bindings [] trx3
2020-11-10T11:44:35.462Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "_StudyModuleToCourse_AB_unique" ON "_StudyModuleToCourse" USING btree ("A", "B"); trx3
2020-11-10T11:44:35.462Z knex:bindings [] trx3
2020-11-10T11:44:35.464Z knex:query ALTER TABLE ONLY "user"
        ADD CONSTRAINT user_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.464Z knex:bindings [] trx3
2020-11-10T11:44:35.467Z knex:query CREATE INDEX IF NOT EXISTS "_StudyModuleToCourse_B" ON "_StudyModuleToCourse" USING btree ("B"); trx3
2020-11-10T11:44:35.467Z knex:bindings [] trx3
2020-11-10T11:44:35.470Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "UserAppDatumConfig.name._UNIQUE" ON "UserAppDatumConfig" USING btree (name); trx3
2020-11-10T11:44:35.471Z knex:bindings [] trx3
2020-11-10T11:44:35.474Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "course.slug._UNIQUE" ON course USING btree (slug); trx3
2020-11-10T11:44:35.474Z knex:bindings [] trx3
2020-11-10T11:44:35.475Z knex:query ALTER TABLE ONLY verified_user
        ADD CONSTRAINT verified_user_pkey PRIMARY KEY (id); trx3
2020-11-10T11:44:35.476Z knex:bindings [] trx3
2020-11-10T11:44:35.477Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "course_alias.course_code._UNIQUE" ON course_alias USING btree (course_code); trx3
2020-11-10T11:44:35.477Z knex:bindings [] trx3
2020-11-10T11:44:35.478Z knex:query RELEASE SAVEPOINT trx3; trx3
2020-11-10T11:44:35.478Z knex:bindings undefined trx3
2020-11-10T11:44:35.478Z knex:tx trx3: releasing connection
2020-11-10T11:44:35.479Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "_CourseToService_AB_unique" ON "_CourseToService" USING btree ("A", "B"); trx3
2020-11-10T11:44:35.479Z knex:bindings [] trx3
2020-11-10T11:44:35.481Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "organization.secret_key._UNIQUE" ON organization USING btree (secret_key); trx3
2020-11-10T11:44:35.481Z knex:bindings [] trx3
2020-11-10T11:44:35.483Z knex:query CREATE INDEX IF NOT EXISTS "_CourseToService_B" ON "_CourseToService" USING btree ("B"); trx3
2020-11-10T11:44:35.483Z knex:bindings [] trx3
2020-11-10T11:44:35.484Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "organization.slug._UNIQUE" ON organization USING btree (slug); trx3
2020-11-10T11:44:35.484Z knex:bindings [] trx3
2020-11-10T11:44:35.486Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "_StudyModuleToCourse_AB_unique" ON "_StudyModuleToCourse" USING btree ("A", "B"); trx3
2020-11-10T11:44:35.486Z knex:bindings [] trx3
2020-11-10T11:44:35.487Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "study_module.slug._UNIQUE" ON study_module USING btree (slug); trx3
2020-11-10T11:44:35.487Z knex:bindings [] trx3
2020-11-10T11:44:35.490Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "user.upstream_id._UNIQUE" ON "user" USING btree (upstream_id); trx3
2020-11-10T11:44:35.490Z knex:bindings [] trx3
2020-11-10T11:44:35.490Z knex:query CREATE INDEX IF NOT EXISTS "_StudyModuleToCourse_B" ON "_StudyModuleToCourse" USING btree ("B"); trx3
2020-11-10T11:44:35.490Z knex:bindings [] trx3
2020-11-10T11:44:35.493Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "user.username._UNIQUE" ON "user" USING btree (username); trx3
2020-11-10T11:44:35.493Z knex:bindings [] trx3
2020-11-10T11:44:35.494Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "UserAppDatumConfig.name._UNIQUE" ON "UserAppDatumConfig" USING btree (name); trx3
2020-11-10T11:44:35.494Z knex:bindings [] trx3
2020-11-10T11:44:35.495Z knex:tx trx4: Starting nested transaction
2020-11-10T11:44:35.496Z knex:query SAVEPOINT trx4; trx4
2020-11-10T11:44:35.496Z knex:bindings undefined trx4
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_variant\n' +
        '        ADD CONSTRAINT course_variant_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'galRXgw03MFnGHeq5X5su'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY organization\n' +
        '        ADD CONSTRAINT organization_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'Rft-meOpUIVgprmHcPASN'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY email_template\n' +
        '        ADD CONSTRAINT email_template_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'G48XMQ2DYbv5U39ra1AVv'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY organization_translation\n' +
        '        ADD CONSTRAINT organization_translation_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'Ik1SNmyGI85jHGx9DrRoU'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise_completion\n' +
        '        ADD CONSTRAINT exercise_completion_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: '3Au1ZHM4OQWyjqUVDWT6-'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY service\n' +
        '        ADD CONSTRAINT service_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'JpkVePnElA7eFbF_5-mUy'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY study_module\n' +
        '        ADD CONSTRAINT study_module_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'U4GrIGe5GZm8KyCihtVQ1'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise_completion_required_actions\n' +
        '        ADD CONSTRAINT exercise_completion_required_actions_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'Hrdydv5cSBuzNspmfA3iN'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY study_module_translation\n' +
        '        ADD CONSTRAINT study_module_translation_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: '9M2Aft6M7acsuRJ0ww1XN'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise\n' +
        '        ADD CONSTRAINT exercise_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'VKRthG4ynuLZlEvZ6ECbH'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_progress\n' +
        '        ADD CONSTRAINT user_course_progress_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'Wcj09a53wYm2jVXC04zQj'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY image\n        ADD CONSTRAINT image_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'sHYYmgaGlIb6w7V6BocIP'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_service_progress\n' +
        '        ADD CONSTRAINT user_course_service_progress_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: '0JG59JyfJWt0EJRPN-Qt4'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY open_university_registration_link\n' +
        '        ADD CONSTRAINT open_university_registration_link_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'rdlRbSRkNyB-QnmWYMg04'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_settings_visibility\n' +
        '        ADD CONSTRAINT user_course_settings_visibility_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'NDXNRolICECA6HkCHJoau'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY organization\n' +
        '        ADD CONSTRAINT organization_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: '1zwrhebb1m-DiLkP17Sac'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_organization\n' +
        '        ADD CONSTRAINT user_organization_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'GNtQ4MDQWwfEr5fmkoytE'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY organization_translation\n' +
        '        ADD CONSTRAINT organization_translation_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'Kn9wM_5H410LUSD1U8nut'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "user"\n        ADD CONSTRAINT user_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'zAfQweytCnhWOOQ_hOYNJ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY service\n' +
        '        ADD CONSTRAINT service_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'sq6PxesKDY6kJYUaMlxQK'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY study_module\n' +
        '        ADD CONSTRAINT study_module_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'RdqG3BayOOduDV4dY-ccx'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY study_module_translation\n' +
        '        ADD CONSTRAINT study_module_translation_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'F2EhPi-M09DsL6KaL1BvY'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_progress\n' +
        '        ADD CONSTRAINT user_course_progress_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'G2QLtEwusyn6o7AAejilV'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY verified_user\n' +
        '        ADD CONSTRAINT verified_user_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'qE_MYLttUwfr4-cl5b1aE'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_service_progress\n' +
        '        ADD CONSTRAINT user_course_service_progress_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'gnNt2bzP5T_DaKoW32vRz'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "_CourseToService_AB_unique" ON "_CourseToService" USING btree ("A", "B");',
      bindings: [],
      options: {},
      __knexQueryUid: 'EUraShz1ClbP4aHjeMMo-'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_settings_visibility\n' +
        '        ADD CONSTRAINT user_course_settings_visibility_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: '7uj_qxyC0Zo9cEd-ju_kg'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE INDEX IF NOT EXISTS "_CourseToService_B" ON "_CourseToService" USING btree ("B");',
      bindings: [],
      options: {},
      __knexQueryUid: 'oqmaUSuvtrG-4jdyAUDjU'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_organization\n' +
        '        ADD CONSTRAINT user_organization_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: '4lYFWBmHRWLUDSmpdyv70'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "_StudyModuleToCourse_AB_unique" ON "_StudyModuleToCourse" USING btree ("A", "B");',
      bindings: [],
      options: {},
      __knexQueryUid: 'aP5TNleagyrYaPVcg98PD'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "user"\n        ADD CONSTRAINT user_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'mW2lVMtK4e_pXph8OyOPA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE INDEX IF NOT EXISTS "_StudyModuleToCourse_B" ON "_StudyModuleToCourse" USING btree ("B");',
      bindings: [],
      options: {},
      __knexQueryUid: 'rnh2wfQKAzQfyuWaeLtab'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "UserAppDatumConfig.name._UNIQUE" ON "UserAppDatumConfig" USING btree (name);',
      bindings: [],
      options: {},
      __knexQueryUid: 'Ayi-yxsF7IRc_UpCwl80W'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "course.slug._UNIQUE" ON course USING btree (slug);',
      bindings: [],
      options: {},
      __knexQueryUid: 'oKt-S1I18A23gWr3PasJ5'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY verified_user\n' +
        '        ADD CONSTRAINT verified_user_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'fGFf72JngbekLo8pLq9-K'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "course_alias.course_code._UNIQUE" ON course_alias USING btree (course_code);',
      bindings: [],
      options: {},
      __knexQueryUid: '5zxeXcURfOKxxDZ6tu273'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "_CourseToService_AB_unique" ON "_CourseToService" USING btree ("A", "B");',
      bindings: [],
      options: {},
      __knexQueryUid: 'Pfx10ogoVKMPdwbMMw6Rb'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "organization.secret_key._UNIQUE" ON organization USING btree (secret_key);',
      bindings: [],
      options: {},
      __knexQueryUid: 'uiy_7ZJdKdV9Ir9nXUYXf'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE INDEX IF NOT EXISTS "_CourseToService_B" ON "_CourseToService" USING btree ("B");',
      bindings: [],
      options: {},
      __knexQueryUid: 'VZEKEaCcgx4Q5g-yi7c-x'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "organization.slug._UNIQUE" ON organization USING btree (slug);',
      bindings: [],
      options: {},
      __knexQueryUid: 'Xwk8582jcpTkBmOVVdMXK'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "_StudyModuleToCourse_AB_unique" ON "_StudyModuleToCourse" USING btree ("A", "B");',
      bindings: [],
      options: {},
      __knexQueryUid: 'HucMfXN9yTVXjyfSImRSo'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "study_module.slug._UNIQUE" ON study_module USING btree (slug);',
      bindings: [],
      options: {},
      __knexQueryUid: 'oeLObtUJmII5Z6Teaw8fu'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "user.upstream_id._UNIQUE" ON "user" USING btree (upstream_id);',
      bindings: [],
      options: {},
      __knexQueryUid: '5tNOjHZYctvZWwcvLarQ5'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE INDEX IF NOT EXISTS "_StudyModuleToCourse_B" ON "_StudyModuleToCourse" USING btree ("B");',
      bindings: [],
      options: {},
      __knexQueryUid: 'rsEe5sfCAdePUhYVMqNiw'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "user.username._UNIQUE" ON "user" USING btree (username);',
      bindings: [],
      options: {},
      __knexQueryUid: 'rC01AQUZ3009SPRZfqxdT'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "UserAppDatumConfig.name._UNIQUE" ON "UserAppDatumConfig" USING btree (name);',
      bindings: [],
      options: {},
      __knexQueryUid: '3BvYmUaXmiXT5VWO6pldL'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "UserCourseSettings"\n' +
        '        ADD CONSTRAINT "UserCourseSettings_course_fkey" FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '8T-kBslqFJe1OjWsZZCX7'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "course.slug._UNIQUE" ON course USING btree (slug);',
      bindings: [],
      options: {},
      __knexQueryUid: 'Qy2GsWxdJFIw7EDjfRKAA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:35.497Z knex:query ALTER TABLE ONLY "UserCourseSettings"
        ADD CONSTRAINT "UserCourseSettings_course_fkey" FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.497Z knex:bindings [] trx4
2020-11-10T11:44:35.497Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "course.slug._UNIQUE" ON course USING btree (slug); trx3
2020-11-10T11:44:35.497Z knex:bindings [] trx3
2020-11-10T11:44:35.501Z knex:query ALTER TABLE ONLY "UserCourseSettings"
        ADD CONSTRAINT "UserCourseSettings_user_fkey" FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.501Z knex:bindings [] trx4
2020-11-10T11:44:35.501Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "course_alias.course_code._UNIQUE" ON course_alias USING btree (course_code); trx3
2020-11-10T11:44:35.501Z knex:bindings [] trx3
2020-11-10T11:44:35.504Z knex:query ALTER TABLE ONLY "_CourseToService"
        ADD CONSTRAINT "_CourseToService_A_fkey" FOREIGN KEY ("A") REFERENCES course(id) ON DELETE CASCADE; trx4
2020-11-10T11:44:35.504Z knex:bindings [] trx4
2020-11-10T11:44:35.505Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "organization.secret_key._UNIQUE" ON organization USING btree (secret_key); trx3
2020-11-10T11:44:35.505Z knex:bindings [] trx3
2020-11-10T11:44:35.507Z knex:query ALTER TABLE ONLY "_CourseToService"
        ADD CONSTRAINT "_CourseToService_B_fkey" FOREIGN KEY ("B") REFERENCES service(id) ON DELETE CASCADE; trx4
2020-11-10T11:44:35.507Z knex:bindings [] trx4
2020-11-10T11:44:35.508Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "organization.slug._UNIQUE" ON organization USING btree (slug); trx3
2020-11-10T11:44:35.508Z knex:bindings [] trx3
2020-11-10T11:44:35.510Z knex:query ALTER TABLE ONLY "_StudyModuleToCourse"
        ADD CONSTRAINT "_StudyModuleToCourse_A_fkey" FOREIGN KEY ("A") REFERENCES course(id) ON DELETE CASCADE; trx4
2020-11-10T11:44:35.510Z knex:bindings [] trx4
2020-11-10T11:44:35.511Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "study_module.slug._UNIQUE" ON study_module USING btree (slug); trx3
2020-11-10T11:44:35.511Z knex:bindings [] trx3
2020-11-10T11:44:35.513Z knex:query ALTER TABLE ONLY "_StudyModuleToCourse"
        ADD CONSTRAINT "_StudyModuleToCourse_B_fkey" FOREIGN KEY ("B") REFERENCES study_module(id) ON DELETE CASCADE; trx4
2020-11-10T11:44:35.514Z knex:bindings [] trx4
2020-11-10T11:44:35.514Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "user.upstream_id._UNIQUE" ON "user" USING btree (upstream_id); trx3
2020-11-10T11:44:35.514Z knex:bindings [] trx3
2020-11-10T11:44:35.516Z knex:query ALTER TABLE ONLY completion
        ADD CONSTRAINT completion_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.516Z knex:bindings [] trx4
2020-11-10T11:44:35.518Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "user.username._UNIQUE" ON "user" USING btree (username); trx3
2020-11-10T11:44:35.518Z knex:bindings [] trx3
2020-11-10T11:44:35.520Z knex:query ALTER TABLE ONLY completion_registered
        ADD CONSTRAINT completion_registered_completion_fkey FOREIGN KEY (completion) REFERENCES completion(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.520Z knex:bindings [] trx4
2020-11-10T11:44:35.520Z knex:tx trx4: Starting nested transaction
2020-11-10T11:44:35.521Z knex:query SAVEPOINT trx4; trx4
2020-11-10T11:44:35.521Z knex:bindings undefined trx4
2020-11-10T11:44:35.523Z knex:query ALTER TABLE ONLY "UserCourseSettings"
        ADD CONSTRAINT "UserCourseSettings_course_fkey" FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.523Z knex:bindings [] trx4
2020-11-10T11:44:35.524Z knex:query ALTER TABLE ONLY completion_registered
        ADD CONSTRAINT completion_registered_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.524Z knex:bindings [] trx4
2020-11-10T11:44:35.527Z knex:query ALTER TABLE ONLY "UserCourseSettings"
        ADD CONSTRAINT "UserCourseSettings_user_fkey" FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.527Z knex:bindings [] trx4
2020-11-10T11:44:35.528Z knex:query ALTER TABLE ONLY completion_registered
        ADD CONSTRAINT completion_registered_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.528Z knex:bindings [] trx4
2020-11-10T11:44:35.530Z knex:query ALTER TABLE ONLY "_CourseToService"
        ADD CONSTRAINT "_CourseToService_A_fkey" FOREIGN KEY ("A") REFERENCES course(id) ON DELETE CASCADE; trx4
2020-11-10T11:44:35.530Z knex:bindings [] trx4
2020-11-10T11:44:35.531Z knex:query ALTER TABLE ONLY completion_registered
        ADD CONSTRAINT completion_registered_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.532Z knex:bindings [] trx4
2020-11-10T11:44:35.533Z knex:query ALTER TABLE ONLY "_CourseToService"
        ADD CONSTRAINT "_CourseToService_B_fkey" FOREIGN KEY ("B") REFERENCES service(id) ON DELETE CASCADE; trx4
2020-11-10T11:44:35.533Z knex:bindings [] trx4
2020-11-10T11:44:35.536Z knex:query ALTER TABLE ONLY completion
        ADD CONSTRAINT completion_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.536Z knex:bindings [] trx4
2020-11-10T11:44:35.536Z knex:query ALTER TABLE ONLY "_StudyModuleToCourse"
        ADD CONSTRAINT "_StudyModuleToCourse_A_fkey" FOREIGN KEY ("A") REFERENCES course(id) ON DELETE CASCADE; trx4
2020-11-10T11:44:35.536Z knex:bindings [] trx4
2020-11-10T11:44:35.539Z knex:query ALTER TABLE ONLY "_StudyModuleToCourse"
        ADD CONSTRAINT "_StudyModuleToCourse_B_fkey" FOREIGN KEY ("B") REFERENCES study_module(id) ON DELETE CASCADE; trx4
2020-11-10T11:44:35.539Z knex:bindings [] trx4
2020-11-10T11:44:35.539Z knex:query ALTER TABLE ONLY course_alias
        ADD CONSTRAINT course_alias_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.539Z knex:bindings [] trx4
2020-11-10T11:44:35.541Z knex:query ALTER TABLE ONLY completion
        ADD CONSTRAINT completion_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.541Z knex:bindings [] trx4
2020-11-10T11:44:35.541Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_completion_email_fkey FOREIGN KEY (completion_email) REFERENCES email_template(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.541Z knex:bindings [] trx4
2020-11-10T11:44:35.543Z knex:query ALTER TABLE ONLY completion_registered
        ADD CONSTRAINT completion_registered_completion_fkey FOREIGN KEY (completion) REFERENCES completion(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.543Z knex:bindings [] trx4
2020-11-10T11:44:35.544Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_completions_handled_by_fkey FOREIGN KEY (completions_handled_by) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.544Z knex:bindings [] trx4
2020-11-10T11:44:35.545Z knex:query ALTER TABLE ONLY completion_registered
        ADD CONSTRAINT completion_registered_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.545Z knex:bindings [] trx4
2020-11-10T11:44:35.545Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_inherit_settings_from_fkey FOREIGN KEY (inherit_settings_from) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.545Z knex:bindings [] trx4
2020-11-10T11:44:35.547Z knex:query ALTER TABLE ONLY completion_registered
        ADD CONSTRAINT completion_registered_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.547Z knex:bindings [] trx4
2020-11-10T11:44:35.548Z knex:query ALTER TABLE ONLY course_organization
        ADD CONSTRAINT course_organization_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.548Z knex:bindings [] trx4
2020-11-10T11:44:35.549Z knex:query ALTER TABLE ONLY completion_registered
        ADD CONSTRAINT completion_registered_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.550Z knex:bindings [] trx4
2020-11-10T11:44:35.551Z knex:query ALTER TABLE ONLY course_organization
        ADD CONSTRAINT course_organization_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.551Z knex:bindings [] trx4
2020-11-10T11:44:35.553Z knex:query ALTER TABLE ONLY completion
        ADD CONSTRAINT completion_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.553Z knex:bindings [] trx4
2020-11-10T11:44:35.555Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_owner_organization_fkey FOREIGN KEY (owner_organization) REFERENCES organization(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.555Z knex:bindings [] trx4
2020-11-10T11:44:35.556Z knex:query ALTER TABLE ONLY course_alias
        ADD CONSTRAINT course_alias_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.556Z knex:bindings [] trx4
2020-11-10T11:44:35.558Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_photo_fkey FOREIGN KEY (photo) REFERENCES image(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.558Z knex:bindings [] trx4
2020-11-10T11:44:35.559Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_completion_email_fkey FOREIGN KEY (completion_email) REFERENCES email_template(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.559Z knex:bindings [] trx4
2020-11-10T11:44:35.561Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_completions_handled_by_fkey FOREIGN KEY (completions_handled_by) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.561Z knex:bindings [] trx4
2020-11-10T11:44:35.563Z knex:query ALTER TABLE ONLY course_translation
        ADD CONSTRAINT course_translation_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.563Z knex:bindings [] trx4
2020-11-10T11:44:35.565Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_inherit_settings_from_fkey FOREIGN KEY (inherit_settings_from) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.565Z knex:bindings [] trx4
2020-11-10T11:44:35.566Z knex:query ALTER TABLE ONLY course_variant
        ADD CONSTRAINT course_variant_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.566Z knex:bindings [] trx4
2020-11-10T11:44:35.567Z knex:query ALTER TABLE ONLY course_organization
        ADD CONSTRAINT course_organization_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.567Z knex:bindings [] trx4
2020-11-10T11:44:35.570Z knex:query ALTER TABLE ONLY course_organization
        ADD CONSTRAINT course_organization_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.570Z knex:bindings [] trx4
2020-11-10T11:44:35.571Z knex:query ALTER TABLE ONLY email_delivery
        ADD CONSTRAINT email_delivery_email_template_fkey FOREIGN KEY (email_template) REFERENCES email_template(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.571Z knex:bindings [] trx4
2020-11-10T11:44:35.573Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_owner_organization_fkey FOREIGN KEY (owner_organization) REFERENCES organization(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.573Z knex:bindings [] trx4
2020-11-10T11:44:35.575Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_photo_fkey FOREIGN KEY (photo) REFERENCES image(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.575Z knex:query ALTER TABLE ONLY email_delivery
        ADD CONSTRAINT email_delivery_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.575Z knex:bindings [] trx4
2020-11-10T11:44:35.575Z knex:bindings [] trx4
2020-11-10T11:44:35.579Z knex:query ALTER TABLE ONLY exercise_completion
        ADD CONSTRAINT exercise_completion_exercise_fkey FOREIGN KEY (exercise) REFERENCES exercise(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.579Z knex:bindings [] trx4
2020-11-10T11:44:35.579Z knex:query ALTER TABLE ONLY course_translation
        ADD CONSTRAINT course_translation_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.579Z knex:bindings [] trx4
2020-11-10T11:44:35.582Z knex:query ALTER TABLE ONLY exercise_completion_required_actions
        ADD CONSTRAINT exercise_completion_required_actions_exercise_completion_fkey FOREIGN KEY (exercise_completion) REFERENCES exercise_completion(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.582Z knex:bindings [] trx4
2020-11-10T11:44:35.583Z knex:query ALTER TABLE ONLY course_variant
        ADD CONSTRAINT course_variant_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.583Z knex:bindings [] trx4
2020-11-10T11:44:35.585Z knex:query ALTER TABLE ONLY exercise_completion
        ADD CONSTRAINT exercise_completion_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.585Z knex:bindings [] trx4
2020-11-10T11:44:35.587Z knex:query ALTER TABLE ONLY email_delivery
        ADD CONSTRAINT email_delivery_email_template_fkey FOREIGN KEY (email_template) REFERENCES email_template(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.587Z knex:bindings [] trx4
2020-11-10T11:44:35.588Z knex:query ALTER TABLE ONLY exercise
        ADD CONSTRAINT exercise_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.588Z knex:bindings [] trx4
2020-11-10T11:44:35.591Z knex:query ALTER TABLE ONLY email_delivery
        ADD CONSTRAINT email_delivery_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.591Z knex:bindings [] trx4
2020-11-10T11:44:35.591Z knex:query ALTER TABLE ONLY exercise
        ADD CONSTRAINT exercise_service_fkey FOREIGN KEY (service) REFERENCES service(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.591Z knex:bindings [] trx4
2020-11-10T11:44:35.593Z knex:query ALTER TABLE ONLY exercise_completion
        ADD CONSTRAINT exercise_completion_exercise_fkey FOREIGN KEY (exercise) REFERENCES exercise(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.593Z knex:bindings [] trx4
2020-11-10T11:44:35.594Z knex:query ALTER TABLE ONLY open_university_registration_link
        ADD CONSTRAINT open_university_registration_link_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.594Z knex:bindings [] trx4
2020-11-10T11:44:35.596Z knex:query ALTER TABLE ONLY exercise_completion_required_actions
        ADD CONSTRAINT exercise_completion_required_actions_exercise_completion_fkey FOREIGN KEY (exercise_completion) REFERENCES exercise_completion(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.596Z knex:bindings [] trx4
2020-11-10T11:44:35.597Z knex:query ALTER TABLE ONLY organization
        ADD CONSTRAINT organization_creator_fkey FOREIGN KEY (creator) REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.597Z knex:bindings [] trx4
2020-11-10T11:44:35.598Z knex:query ALTER TABLE ONLY exercise_completion
        ADD CONSTRAINT exercise_completion_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.598Z knex:bindings [] trx4
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "UserCourseSettings"\n' +
        '        ADD CONSTRAINT "UserCourseSettings_user_fkey" FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'z-082KK6dyzKAQLm0rbDf'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "course_alias.course_code._UNIQUE" ON course_alias USING btree (course_code);',
      bindings: [],
      options: {},
      __knexQueryUid: 'rhvFdaTsWYRfpJAa_KKNl'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "_CourseToService"\n' +
        '        ADD CONSTRAINT "_CourseToService_A_fkey" FOREIGN KEY ("A") REFERENCES course(id) ON DELETE CASCADE;',
      bindings: [],
      options: {},
      __knexQueryUid: 'EEOMFAktjjzWyPQXoVTH7'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "organization.secret_key._UNIQUE" ON organization USING btree (secret_key);',
      bindings: [],
      options: {},
      __knexQueryUid: 'kuufGkqqFh7kMHry-0O_U'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "_CourseToService"\n' +
        '        ADD CONSTRAINT "_CourseToService_B_fkey" FOREIGN KEY ("B") REFERENCES service(id) ON DELETE CASCADE;',
      bindings: [],
      options: {},
      __knexQueryUid: '9SZImyL2ae-nYuAUA-Xo2'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "organization.slug._UNIQUE" ON organization USING btree (slug);',
      bindings: [],
      options: {},
      __knexQueryUid: 'rgH6DcwUK4EglNBc1WYlc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "_StudyModuleToCourse"\n' +
        '        ADD CONSTRAINT "_StudyModuleToCourse_A_fkey" FOREIGN KEY ("A") REFERENCES course(id) ON DELETE CASCADE;',
      bindings: [],
      options: {},
      __knexQueryUid: 'FxNWCQSc_tqwagWksVCvM'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "study_module.slug._UNIQUE" ON study_module USING btree (slug);',
      bindings: [],
      options: {},
      __knexQueryUid: 'HIlBPmbxkzOJws-5XloWa'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "_StudyModuleToCourse"\n' +
        '        ADD CONSTRAINT "_StudyModuleToCourse_B_fkey" FOREIGN KEY ("B") REFERENCES study_module(id) ON DELETE CASCADE;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Er3iPnlh-O72hLRKJiKxm'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "user.upstream_id._UNIQUE" ON "user" USING btree (upstream_id);',
      bindings: [],
      options: {},
      __knexQueryUid: '8_10NeXEsdL42v_teCYYJ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion\n' +
        '        ADD CONSTRAINT completion_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'SsytVGJWp-uU0zBdn1wO9'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "user.username._UNIQUE" ON "user" USING btree (username);',
      bindings: [],
      options: {},
      __knexQueryUid: 'uE0VJxpN20K--U5DBEPQm'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion_registered\n' +
        '        ADD CONSTRAINT completion_registered_completion_fkey FOREIGN KEY (completion) REFERENCES completion(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'R-egRoK1IeA6ifN0x_x_G'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "UserCourseSettings"\n' +
        '        ADD CONSTRAINT "UserCourseSettings_course_fkey" FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'AoPSYh4poLrU2pBPwaVuM'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion_registered\n' +
        '        ADD CONSTRAINT completion_registered_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'azqQZEhhu835o3qEk9WPg'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "UserCourseSettings"\n' +
        '        ADD CONSTRAINT "UserCourseSettings_user_fkey" FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'SeSvc4VnpoI8IF7ivY_-5'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion_registered\n' +
        '        ADD CONSTRAINT completion_registered_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '7k1RF13-ehJl89lUyeJjQ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "_CourseToService"\n' +
        '        ADD CONSTRAINT "_CourseToService_A_fkey" FOREIGN KEY ("A") REFERENCES course(id) ON DELETE CASCADE;',
      bindings: [],
      options: {},
      __knexQueryUid: 'JVOvtkRdexbrQ5fviTQHP'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion_registered\n' +
        '        ADD CONSTRAINT completion_registered_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '6IlrN7BDgKg2hpOq4JcOe'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "_CourseToService"\n' +
        '        ADD CONSTRAINT "_CourseToService_B_fkey" FOREIGN KEY ("B") REFERENCES service(id) ON DELETE CASCADE;',
      bindings: [],
      options: {},
      __knexQueryUid: 'WE4URSTuzso5_Aqj04P1n'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion\n' +
        '        ADD CONSTRAINT completion_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ZwiVryHFTMrdQgqV_opc_'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "_StudyModuleToCourse"\n' +
        '        ADD CONSTRAINT "_StudyModuleToCourse_A_fkey" FOREIGN KEY ("A") REFERENCES course(id) ON DELETE CASCADE;',
      bindings: [],
      options: {},
      __knexQueryUid: 'I25GTf5NUFK8ayXFX34Sv'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "_StudyModuleToCourse"\n' +
        '        ADD CONSTRAINT "_StudyModuleToCourse_B_fkey" FOREIGN KEY ("B") REFERENCES study_module(id) ON DELETE CASCADE;',
      bindings: [],
      options: {},
      __knexQueryUid: 'p-DPwGFPH9kLvr2pKvsqy'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_alias\n' +
        '        ADD CONSTRAINT course_alias_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'WZODaDI_39WChG-UH5vqs'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion\n' +
        '        ADD CONSTRAINT completion_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ilnbo2Vc1tyubA-Ah0Lth'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_completion_email_fkey FOREIGN KEY (completion_email) REFERENCES email_template(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'XCd8oBZXed_EL6Im8k0Fa'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion_registered\n' +
        '        ADD CONSTRAINT completion_registered_completion_fkey FOREIGN KEY (completion) REFERENCES completion(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'dWYYIuW1bMflz_rwjfzDG'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_completions_handled_by_fkey FOREIGN KEY (completions_handled_by) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'SiQcsf0xn32hB2gPCNEp6'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion_registered\n' +
        '        ADD CONSTRAINT completion_registered_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ZV83kTdBZylfmzysITmSL'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_inherit_settings_from_fkey FOREIGN KEY (inherit_settings_from) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'TajqsrVD1tYDvKaEF1PrP'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion_registered\n' +
        '        ADD CONSTRAINT completion_registered_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '9MbZf_1Iw_fPNuJWTDegh'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_organization\n' +
        '        ADD CONSTRAINT course_organization_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'TfSuHfgYEeSrrGtzIi5aU'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion_registered\n' +
        '        ADD CONSTRAINT completion_registered_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'I_EB2KjqmHFo93_QQUbSn'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_organization\n' +
        '        ADD CONSTRAINT course_organization_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'yF1cZX4lco8Y_cvCbvJr8'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion\n' +
        '        ADD CONSTRAINT completion_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'jrx_BY9NBm9uwD9ZWW7Ho'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_owner_organization_fkey FOREIGN KEY (owner_organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'JLfJubKlWAxgHUJNh7xZb'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_alias\n' +
        '        ADD CONSTRAINT course_alias_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'krnz0VRZ8LB5-2JNYJw2H'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_photo_fkey FOREIGN KEY (photo) REFERENCES image(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '9qG0Pa0RdSm62kq55__kp'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_completion_email_fkey FOREIGN KEY (completion_email) REFERENCES email_template(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'AaPZiR5QiA-AnyNZZGwnA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_completions_handled_by_fkey FOREIGN KEY (completions_handled_by) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'aRCvHaJ7e_xN9oyHZBi-m'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_translation\n' +
        '        ADD CONSTRAINT course_translation_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'pKjwtL2CacU7RMEyyswz5'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_inherit_settings_from_fkey FOREIGN KEY (inherit_settings_from) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'H2l8KSzkWsvK5jq61NKBl'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_variant\n' +
        '        ADD CONSTRAINT course_variant_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'LhZShrUzhCm22x9XY5ktP'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_organization\n' +
        '        ADD CONSTRAINT course_organization_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'a7AuDT49VXHJVtojn85vm'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_organization\n' +
        '        ADD CONSTRAINT course_organization_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'dNlEoGyiQD3cWM9yLlVhJ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY email_delivery\n' +
        '        ADD CONSTRAINT email_delivery_email_template_fkey FOREIGN KEY (email_template) REFERENCES email_template(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'bJ6Hvb7eRTKoqOUkLZjGr'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_owner_organization_fkey FOREIGN KEY (owner_organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'RCd2znUZcY7wb0neiU2Rt'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY email_delivery\n' +
        '        ADD CONSTRAINT email_delivery_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ijTHUkOOKrpV-aZBYNl3_'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_photo_fkey FOREIGN KEY (photo) REFERENCES image(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'dFiWgSxlk8rSnE3kHtmxS'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise_completion\n' +
        '        ADD CONSTRAINT exercise_completion_exercise_fkey FOREIGN KEY (exercise) REFERENCES exercise(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '5BMQWnxp7hZZFID1KEEwm'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_translation\n' +
        '        ADD CONSTRAINT course_translation_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Gkk7QigxLw0-FSOyoxIzD'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise_completion_required_actions\n' +
        '        ADD CONSTRAINT exercise_completion_required_actions_exercise_completion_fkey FOREIGN KEY (exercise_completion) REFERENCES exercise_completion(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Yh-mTiUvDU5r160Jj95d6'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_variant\n' +
        '        ADD CONSTRAINT course_variant_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'oUxFBkOy_cA0Vhhsu9lKE'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise_completion\n' +
        '        ADD CONSTRAINT exercise_completion_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'yn8nyx-dbHccR6N1F3jhb'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY email_delivery\n' +
        '        ADD CONSTRAINT email_delivery_email_template_fkey FOREIGN KEY (email_template) REFERENCES email_template(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '0FofiZNXLZD_bfSpnTJkK'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise\n' +
        '        ADD CONSTRAINT exercise_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'oVEbRjpw7OToRvtFUAGLc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY email_delivery\n' +
        '        ADD CONSTRAINT email_delivery_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'rY9Q9rx_Jq3YXj7pIxpy3'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise\n' +
        '        ADD CONSTRAINT exercise_service_fkey FOREIGN KEY (service) REFERENCES service(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'R-QKHVuzANpcXwblXc6Te'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise_completion\n' +
        '        ADD CONSTRAINT exercise_completion_exercise_fkey FOREIGN KEY (exercise) REFERENCES exercise(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'qYX92zLa4zXvcvQfvPMbA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY open_university_registration_link\n' +
        '        ADD CONSTRAINT open_university_registration_link_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'GGFVdamtiRubCmJ2hw2dO'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise_completion_required_actions\n' +
        '        ADD CONSTRAINT exercise_completion_required_actions_exercise_completion_fkey FOREIGN KEY (exercise_completion) REFERENCES exercise_completion(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'jdQ7chBHz8-X6kCk7Dfoi'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY organization\n' +
        '        ADD CONSTRAINT organization_creator_fkey FOREIGN KEY (creator) REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'RVgB3XcORhK2QQS8FtJty'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise_completion\n' +
        '        ADD CONSTRAINT exercise_completion_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '1enrVGkC_tIp6OvTD2_2c'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise\n' +
        '        ADD CONSTRAINT exercise_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Ux5ySrjcIZfeb4FiRHkKe'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:35.600Z knex:query ALTER TABLE ONLY exercise
        ADD CONSTRAINT exercise_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.601Z knex:bindings [] trx4
2020-11-10T11:44:35.601Z knex:query ALTER TABLE ONLY organization_translation
        ADD CONSTRAINT organization_translation_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.601Z knex:bindings [] trx4
2020-11-10T11:44:35.603Z knex:query ALTER TABLE ONLY exercise
        ADD CONSTRAINT exercise_service_fkey FOREIGN KEY (service) REFERENCES service(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.603Z knex:bindings [] trx4
2020-11-10T11:44:35.605Z knex:query ALTER TABLE ONLY open_university_registration_link
        ADD CONSTRAINT open_university_registration_link_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.605Z knex:bindings [] trx4
2020-11-10T11:44:35.609Z knex:query ALTER TABLE ONLY organization
        ADD CONSTRAINT organization_creator_fkey FOREIGN KEY (creator) REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.609Z knex:bindings [] trx4
2020-11-10T11:44:35.610Z knex:query ALTER TABLE ONLY study_module_translation
        ADD CONSTRAINT study_module_translation_study_module_fkey FOREIGN KEY (study_module) REFERENCES study_module(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.610Z knex:bindings [] trx4
2020-11-10T11:44:35.611Z knex:query ALTER TABLE ONLY organization_translation
        ADD CONSTRAINT organization_translation_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.611Z knex:bindings [] trx4
2020-11-10T11:44:35.613Z knex:query ALTER TABLE ONLY user_course_progress
        ADD CONSTRAINT user_course_progress_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.613Z knex:bindings [] trx4
2020-11-10T11:44:35.613Z knex:query ALTER TABLE ONLY study_module_translation
        ADD CONSTRAINT study_module_translation_study_module_fkey FOREIGN KEY (study_module) REFERENCES study_module(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.613Z knex:bindings [] trx4
2020-11-10T11:44:35.615Z knex:query ALTER TABLE ONLY user_course_progress
        ADD CONSTRAINT user_course_progress_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.616Z knex:bindings [] trx4
2020-11-10T11:44:35.617Z knex:query ALTER TABLE ONLY user_course_progress
        ADD CONSTRAINT user_course_progress_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.617Z knex:bindings [] trx4
2020-11-10T11:44:35.618Z knex:query ALTER TABLE ONLY user_course_progress
        ADD CONSTRAINT user_course_progress_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.618Z knex:bindings [] trx4
2020-11-10T11:44:35.621Z knex:query ALTER TABLE ONLY user_course_service_progress
        ADD CONSTRAINT user_course_service_progress_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.621Z knex:bindings [] trx4
2020-11-10T11:44:35.621Z knex:query ALTER TABLE ONLY user_course_service_progress
        ADD CONSTRAINT user_course_service_progress_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.621Z knex:bindings [] trx4
2020-11-10T11:44:35.624Z knex:query ALTER TABLE ONLY user_course_service_progress
        ADD CONSTRAINT user_course_service_progress_service_fkey FOREIGN KEY (service) REFERENCES service(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.624Z knex:bindings [] trx4
2020-11-10T11:44:35.624Z knex:query ALTER TABLE ONLY user_course_service_progress
        ADD CONSTRAINT user_course_service_progress_service_fkey FOREIGN KEY (service) REFERENCES service(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.624Z knex:bindings [] trx4
2020-11-10T11:44:35.628Z knex:query ALTER TABLE ONLY user_course_service_progress
        ADD CONSTRAINT user_course_service_progress_user_course_progress_fkey FOREIGN KEY (user_course_progress) REFERENCES user_course_progress(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.628Z knex:bindings [] trx4
2020-11-10T11:44:35.628Z knex:query ALTER TABLE ONLY user_course_service_progress
        ADD CONSTRAINT user_course_service_progress_user_course_progress_fkey FOREIGN KEY (user_course_progress) REFERENCES user_course_progress(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.629Z knex:bindings [] trx4
2020-11-10T11:44:35.630Z knex:query ALTER TABLE ONLY user_course_service_progress
        ADD CONSTRAINT user_course_service_progress_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.631Z knex:bindings [] trx4
2020-11-10T11:44:35.632Z knex:query ALTER TABLE ONLY user_course_service_progress
        ADD CONSTRAINT user_course_service_progress_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.632Z knex:bindings [] trx4
2020-11-10T11:44:35.634Z knex:query ALTER TABLE ONLY user_course_settings_visibility
        ADD CONSTRAINT user_course_settings_visibility_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.634Z knex:bindings [] trx4
2020-11-10T11:44:35.635Z knex:query ALTER TABLE ONLY user_course_settings_visibility
        ADD CONSTRAINT user_course_settings_visibility_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.636Z knex:bindings [] trx4
2020-11-10T11:44:35.636Z knex:query ALTER TABLE ONLY user_organization
        ADD CONSTRAINT user_organization_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.637Z knex:bindings [] trx4
2020-11-10T11:44:35.639Z knex:query ALTER TABLE ONLY user_organization
        ADD CONSTRAINT user_organization_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.639Z knex:bindings [] trx4
2020-11-10T11:44:35.639Z knex:query ALTER TABLE ONLY user_organization
        ADD CONSTRAINT user_organization_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.639Z knex:bindings [] trx4
2020-11-10T11:44:35.642Z knex:query ALTER TABLE ONLY user_organization
        ADD CONSTRAINT user_organization_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.642Z knex:bindings [] trx4
2020-11-10T11:44:35.644Z knex:query ALTER TABLE ONLY verified_user
        ADD CONSTRAINT verified_user_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.644Z knex:bindings [] trx4
2020-11-10T11:44:35.646Z knex:query ALTER TABLE ONLY verified_user
        ADD CONSTRAINT verified_user_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.646Z knex:bindings [] trx4
2020-11-10T11:44:35.647Z knex:query ALTER TABLE ONLY verified_user
        ADD CONSTRAINT verified_user_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.648Z knex:bindings [] trx4
2020-11-10T11:44:35.649Z knex:query ALTER TABLE ONLY verified_user
        ADD CONSTRAINT verified_user_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx4
2020-11-10T11:44:35.649Z knex:bindings [] trx4
2020-11-10T11:44:35.649Z knex:query RELEASE SAVEPOINT trx4; trx4
2020-11-10T11:44:35.649Z knex:bindings undefined trx4
2020-11-10T11:44:35.650Z knex:tx trx4: releasing connection
2020-11-10T11:44:35.651Z knex:query RELEASE SAVEPOINT trx4; trx4
2020-11-10T11:44:35.651Z knex:bindings undefined trx4
2020-11-10T11:44:35.652Z knex:tx trx4: releasing connection
2020-11-10T11:44:35.653Z knex:query insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.653Z knex:bindings [
  1,
  2020-11-10T11:44:35.650Z,
  '19000101114728_create-table-schema.ts'
] trx4
2020-11-10T11:44:35.654Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.655Z knex:bindings [
  1,
  2020-11-10T11:44:35.652Z,
  '19000101114728_create-table-schema.ts'
] trx4
2020-11-10T11:44:35.660Z knex:query CREATE TYPE "CourseStatus" AS ENUM ('Active', 'Ended', 'Upcoming'); trx4
2020-11-10T11:44:35.660Z knex:bindings [] trx4
2020-11-10T11:44:35.660Z knex:query CREATE TYPE "CourseStatus" AS ENUM ('Active', 'Ended', 'Upcoming'); trx4
2020-11-10T11:44:35.660Z knex:bindings [] trx4
2020-11-10T11:44:35.662Z knex:query CREATE TYPE "OrganizationRole" AS ENUM ('OrganizationAdmin', 'Student', 'Teacher'); trx4
2020-11-10T11:44:35.662Z knex:bindings [] trx4
2020-11-10T11:44:35.662Z knex:query CREATE TYPE "OrganizationRole" AS ENUM ('OrganizationAdmin', 'Student', 'Teacher'); trx4
2020-11-10T11:44:35.662Z knex:bindings [] trx4
2020-11-10T11:44:35.664Z knex:query ALTER TABLE "course" ALTER COLUMN automatic_completions SET DEFAULT false; trx4
2020-11-10T11:44:35.664Z knex:bindings [] trx4
2020-11-10T11:44:35.664Z knex:query ALTER TABLE "course" ALTER COLUMN automatic_completions SET DEFAULT false; trx4
2020-11-10T11:44:35.664Z knex:bindings [] trx4
2020-11-10T11:44:35.666Z knex:query ALTER TABLE "course" ALTER COLUMN has_certificate SET DEFAULT false; trx4
2020-11-10T11:44:35.666Z knex:bindings [] trx4
2020-11-10T11:44:35.667Z knex:query ALTER TABLE "course" ALTER COLUMN has_certificate SET DEFAULT false; trx4
2020-11-10T11:44:35.667Z knex:bindings [] trx4
2020-11-10T11:44:35.668Z knex:query ALTER TABLE "course" ALTER COLUMN status SET DEFAULT 'Upcoming'; trx4
2020-11-10T11:44:35.668Z knex:bindings [] trx4
2020-11-10T11:44:35.670Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN error SET DEFAULT false; trx4
2020-11-10T11:44:35.670Z knex:bindings [] trx4
2020-11-10T11:44:35.670Z knex:query ALTER TABLE "course" ALTER COLUMN status SET DEFAULT 'Upcoming'; trx4
2020-11-10T11:44:35.670Z knex:bindings [] trx4
2020-11-10T11:44:35.671Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN sent SET DEFAULT false; trx4
2020-11-10T11:44:35.671Z knex:bindings [] trx4
2020-11-10T11:44:35.673Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN error SET DEFAULT false; trx4
2020-11-10T11:44:35.673Z knex:bindings [] trx4
2020-11-10T11:44:35.673Z knex:query ALTER TABLE "exercise" ALTER COLUMN deleted SET DEFAULT false; trx4
2020-11-10T11:44:35.673Z knex:bindings [] trx4
2020-11-10T11:44:35.675Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN sent SET DEFAULT false; trx4
2020-11-10T11:44:35.675Z knex:bindings [] trx4
2020-11-10T11:44:35.676Z knex:query ALTER TABLE "exercise_completion" ALTER COLUMN completed SET DEFAULT false; trx4
2020-11-10T11:44:35.676Z knex:bindings [] trx4
2020-11-10T11:44:35.678Z knex:query ALTER TABLE "exercise" ALTER COLUMN deleted SET DEFAULT false; trx4
2020-11-10T11:44:35.678Z knex:bindings [] trx4
2020-11-10T11:44:35.678Z knex:query ALTER TABLE "user_organization" ALTER COLUMN role SET DEFAULT 'Student'; trx4
2020-11-10T11:44:35.678Z knex:bindings [] trx4
2020-11-10T11:44:35.680Z knex:query ALTER TABLE "exercise_completion" ALTER COLUMN completed SET DEFAULT false; trx4
2020-11-10T11:44:35.680Z knex:bindings [] trx4
2020-11-10T11:44:35.681Z knex:query ALTER TABLE "completion" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.681Z knex:bindings [] trx4
2020-11-10T11:44:35.683Z knex:query ALTER TABLE "user_organization" ALTER COLUMN role SET DEFAULT 'Student'; trx4
2020-11-10T11:44:35.683Z knex:bindings [] trx4
2020-11-10T11:44:35.683Z knex:query ALTER TABLE "completion_registered" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.683Z knex:bindings [] trx4
2020-11-10T11:44:35.686Z knex:query ALTER TABLE "completion" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.686Z knex:bindings [] trx4
2020-11-10T11:44:35.686Z knex:query ALTER TABLE "course" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.686Z knex:bindings [] trx4
2020-11-10T11:44:35.688Z knex:query ALTER TABLE "completion_registered" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.688Z knex:bindings [] trx4
2020-11-10T11:44:35.688Z knex:query ALTER TABLE "course_alias" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.689Z knex:bindings [] trx4
2020-11-10T11:44:35.691Z knex:query ALTER TABLE "course_organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.691Z knex:bindings [] trx4
2020-11-10T11:44:35.691Z knex:query ALTER TABLE "course" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.691Z knex:bindings [] trx4
2020-11-10T11:44:35.693Z knex:query ALTER TABLE "course_alias" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.693Z knex:bindings [] trx4
2020-11-10T11:44:35.693Z knex:query ALTER TABLE "course_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.693Z knex:bindings [] trx4
2020-11-10T11:44:35.695Z knex:query ALTER TABLE "course_organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.695Z knex:bindings [] trx4
2020-11-10T11:44:35.696Z knex:query ALTER TABLE "course_variant" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.696Z knex:bindings [] trx4
2020-11-10T11:44:35.697Z knex:query ALTER TABLE "course_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.697Z knex:bindings [] trx4
2020-11-10T11:44:35.698Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.698Z knex:bindings [] trx4
2020-11-10T11:44:35.698Z knex:query ALTER TABLE "course_variant" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.698Z knex:bindings [] trx4
2020-11-10T11:44:35.700Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.700Z knex:bindings [] trx4
2020-11-10T11:44:35.700Z knex:query ALTER TABLE "email_template" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY organization_translation\n' +
        '        ADD CONSTRAINT organization_translation_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'G7LGe1VWBV77kzpMAMxZE'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise\n' +
        '        ADD CONSTRAINT exercise_service_fkey FOREIGN KEY (service) REFERENCES service(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'a8w1UzyJDvWLpDkevCK7s'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY open_university_registration_link\n' +
        '        ADD CONSTRAINT open_university_registration_link_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'hrsp8YKoBHoPUBDjmkolK'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY organization\n' +
        '        ADD CONSTRAINT organization_creator_fkey FOREIGN KEY (creator) REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '_iGG0ow6nFU8V1KbOBPh8'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY study_module_translation\n' +
        '        ADD CONSTRAINT study_module_translation_study_module_fkey FOREIGN KEY (study_module) REFERENCES study_module(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'bBEh2DVgEIpS1BhtkgXcX'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY organization_translation\n' +
        '        ADD CONSTRAINT organization_translation_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'YzQcJbPflUGjXSIcSvTi_'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_progress\n' +
        '        ADD CONSTRAINT user_course_progress_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'MQmMD1pzg2xUnSy6sddC9'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY study_module_translation\n' +
        '        ADD CONSTRAINT study_module_translation_study_module_fkey FOREIGN KEY (study_module) REFERENCES study_module(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '5PNqLXRJtVksou5kzP3o8'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_progress\n' +
        '        ADD CONSTRAINT user_course_progress_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'a5AYDmqqiYhOnR_ma0FwB'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_progress\n' +
        '        ADD CONSTRAINT user_course_progress_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '1gOpi7KOwfvHZtI_KCpXr'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_progress\n' +
        '        ADD CONSTRAINT user_course_progress_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'QUkktJMYA_hqR8ocMpIvS'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_service_progress\n' +
        '        ADD CONSTRAINT user_course_service_progress_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'BMiaV9tgWKeP7XXecZkPe'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_service_progress\n' +
        '        ADD CONSTRAINT user_course_service_progress_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'QRS4IHceDwk-74INyoJ5i'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_service_progress\n' +
        '        ADD CONSTRAINT user_course_service_progress_service_fkey FOREIGN KEY (service) REFERENCES service(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'JeB80OGGqFq4xMxK2izOj'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_service_progress\n' +
        '        ADD CONSTRAINT user_course_service_progress_service_fkey FOREIGN KEY (service) REFERENCES service(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ibe2zgW_T3A63AIAEkqGE'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_service_progress\n' +
        '        ADD CONSTRAINT user_course_service_progress_user_course_progress_fkey FOREIGN KEY (user_course_progress) REFERENCES user_course_progress(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'LYOaZdOazjekBKBoYuF1G'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_service_progress\n' +
        '        ADD CONSTRAINT user_course_service_progress_user_course_progress_fkey FOREIGN KEY (user_course_progress) REFERENCES user_course_progress(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'jV8O7oUgudCaamHXs6Gu8'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_service_progress\n' +
        '        ADD CONSTRAINT user_course_service_progress_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'OYDrX2c1YrbFlPMAkPLiF'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_service_progress\n' +
        '        ADD CONSTRAINT user_course_service_progress_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Gf6fGx_fP2uPKXrWOQDR1'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_settings_visibility\n' +
        '        ADD CONSTRAINT user_course_settings_visibility_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'bzurZ_OEfcm-ndQHhIivB'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_settings_visibility\n' +
        '        ADD CONSTRAINT user_course_settings_visibility_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'JGMfFDZCOyhnkWgnLyqvQ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_organization\n' +
        '        ADD CONSTRAINT user_organization_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'M2Y3ikmUK8BVcJEiZ9BQr'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_organization\n' +
        '        ADD CONSTRAINT user_organization_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'sC9y4W3UTr_fVmht-l2NS'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_organization\n' +
        '        ADD CONSTRAINT user_organization_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'yIP_M95ndbNTUc6BaqzpW'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_organization\n' +
        '        ADD CONSTRAINT user_organization_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'VcfuLZp6S-KRr3n1MWKLc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY verified_user\n' +
        '        ADD CONSTRAINT verified_user_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'aQ61TcM5f7eFpHpawVPwo'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY verified_user\n' +
        '        ADD CONSTRAINT verified_user_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'pzXZKLfbfDzYVjJQbnSQ3'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY verified_user\n' +
        '        ADD CONSTRAINT verified_user_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'csNPPo0ajBOWhK4eVasqZ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY verified_user\n' +
        '        ADD CONSTRAINT verified_user_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'in5-Z2VWzK9p2kePZ7S2E'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.650Z,
        '19000101114728_create-table-schema.ts'
      ],
      __knexQueryUid: '1FJoxq8Jh44VYwkJeJKnZ',
      sql: 'insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.652Z,
        '19000101114728_create-table-schema.ts'
      ],
      __knexQueryUid: '7xC9J8fS30b7tB5Nu_n61',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: `CREATE TYPE "CourseStatus" AS ENUM ('Active', 'Ended', 'Upcoming');`,
      bindings: [],
      options: {},
      __knexQueryUid: 'zUwUE-E1Z5iRzENyK5020'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: `CREATE TYPE "CourseStatus" AS ENUM ('Active', 'Ended', 'Upcoming');`,
      bindings: [],
      options: {},
      __knexQueryUid: 'avYSA4fZ77mLPumL45CwM'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: `CREATE TYPE "OrganizationRole" AS ENUM ('OrganizationAdmin', 'Student', 'Teacher');`,
      bindings: [],
      options: {},
      __knexQueryUid: 'dNC7pSgvEe1Qv9HM4rLCh'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: `CREATE TYPE "OrganizationRole" AS ENUM ('OrganizationAdmin', 'Student', 'Teacher');`,
      bindings: [],
      options: {},
      __knexQueryUid: 'f_Z0gYM4rPR71n2HUgBrP'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN automatic_completions SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ogxIeQQNeI2DUGHrUH002'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN automatic_completions SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: 'YYsTEsmQHPurJnCw8Qvjx'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN has_certificate SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: 'I0Xb2Q_1Zrc4ZlsEu-prj'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN has_certificate SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Br-ouRSswy7VfgdlkqW-3'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: `ALTER TABLE "course" ALTER COLUMN status SET DEFAULT 'Upcoming';`,
      bindings: [],
      options: {},
      __knexQueryUid: 'CW-Ou-mnRz1Y05dQa_WuB'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN error SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ygAVUFXRtH8cT7S_Dfy3P'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: `ALTER TABLE "course" ALTER COLUMN status SET DEFAULT 'Upcoming';`,
      bindings: [],
      options: {},
      __knexQueryUid: 'sSn5Q2S27UJzHiTMxt3R8'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN sent SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: 'pK0BxanWziNdVLyHseG-t'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN error SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: 'h1QoaQt253_OA4JbGqTcq'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" ALTER COLUMN deleted SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: '1zXoLlNDj5eXCFwVqupO6'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN sent SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: 'MJ0s5u8uF_2N3c2f9ISMu'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" ALTER COLUMN completed SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: 'xQyGTJcbcGIqPkRQ7utFk'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" ALTER COLUMN deleted SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: '-fn63SHHUJwleYisnN9RL'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: `ALTER TABLE "user_organization" ALTER COLUMN role SET DEFAULT 'Student';`,
      bindings: [],
      options: {},
      __knexQueryUid: 'lLvpjuCM33nPmKpF9Vyn6'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" ALTER COLUMN completed SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: 'nzlC74CjGIk2ZRdoNW8tL'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'hIYb6YJ2hucPv06CM3fBP'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: `ALTER TABLE "user_organization" ALTER COLUMN role SET DEFAULT 'Student';`,
      bindings: [],
      options: {},
      __knexQueryUid: 'oh7KhyCMNBwyJ8wrZFj40'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'SFQMgLHP6tlO58iD06GFx'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '3BV81tSfB2c8DVoKEONQt'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'GbyBIneMO95HaZJ9WnoPF'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'qpYFQRH7X8f0QZwa7KDWR'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_alias" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'HZp14FNRn9YXgVlFv68cU'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '_AjhbhKHxbHRPb3AChT1O'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'qXFgH5I7dCSr6YD9Ck-wI'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_alias" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'J2ARNc4jgathfuwdZOg54'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'SuqyqEIfc2R8yic3ndwSQ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'R91gvPUvRgl6sJCpxfgkp'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_variant" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'xjqDn7ctZk583e5IEx3pF'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'LEdf2Ior33CVx4vO7dSoY'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'bq1Gu4tUMnAPPcUi0zdwB'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_variant" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'phfH5gWU5ZJvmROCWKUSA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '6Auk3BAttPT-wnkqBTDwy'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_template" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'L4JF10uxN3r8mB1wnrwvk'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:35.700Z knex:bindings [] trx4
2020-11-10T11:44:35.703Z knex:query ALTER TABLE "exercise" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.703Z knex:bindings [] trx4
2020-11-10T11:44:35.706Z knex:query ALTER TABLE "exercise_completion" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.706Z knex:bindings [] trx4
2020-11-10T11:44:35.701Z knex:query ALTER TABLE "email_template" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.702Z knex:bindings [] trx4
2020-11-10T11:44:35.704Z knex:query ALTER TABLE "exercise" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.704Z knex:bindings [] trx4
2020-11-10T11:44:35.707Z knex:query ALTER TABLE "exercise_completion" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.707Z knex:bindings [] trx4
2020-11-10T11:44:35.708Z knex:query ALTER TABLE "image" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.708Z knex:bindings [] trx4
2020-11-10T11:44:35.710Z knex:query ALTER TABLE "open_university_registration_link" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.710Z knex:query ALTER TABLE "image" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.710Z knex:bindings [] trx4
2020-11-10T11:44:35.710Z knex:bindings [] trx4
2020-11-10T11:44:35.712Z knex:query ALTER TABLE "organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.712Z knex:bindings [] trx4
2020-11-10T11:44:35.712Z knex:query ALTER TABLE "open_university_registration_link" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.713Z knex:bindings [] trx4
2020-11-10T11:44:35.715Z knex:query ALTER TABLE "organization_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.715Z knex:bindings [] trx4
2020-11-10T11:44:35.717Z knex:query ALTER TABLE "organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.717Z knex:bindings [] trx4
2020-11-10T11:44:35.717Z knex:query ALTER TABLE "service" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.717Z knex:bindings [] trx4
2020-11-10T11:44:35.719Z knex:query ALTER TABLE "organization_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.719Z knex:bindings [] trx4
2020-11-10T11:44:35.720Z knex:query ALTER TABLE "study_module" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.720Z knex:bindings [] trx4
2020-11-10T11:44:35.722Z knex:query ALTER TABLE "service" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.722Z knex:bindings [] trx4
2020-11-10T11:44:35.723Z knex:query ALTER TABLE "study_module_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.723Z knex:bindings [] trx4
2020-11-10T11:44:35.724Z knex:query ALTER TABLE "study_module" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.724Z knex:bindings [] trx4
2020-11-10T11:44:35.725Z knex:query ALTER TABLE "user" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.725Z knex:bindings [] trx4
2020-11-10T11:44:35.727Z knex:query ALTER TABLE "study_module_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.727Z knex:bindings [] trx4
2020-11-10T11:44:35.728Z knex:query ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.728Z knex:bindings [] trx4
2020-11-10T11:44:35.730Z knex:query ALTER TABLE "user" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.730Z knex:bindings [] trx4
2020-11-10T11:44:35.730Z knex:query ALTER TABLE "user_course_progress" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.730Z knex:bindings [] trx4
2020-11-10T11:44:35.733Z knex:query ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.733Z knex:bindings [] trx4
2020-11-10T11:44:35.733Z knex:query ALTER TABLE "user_course_service_progress" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.733Z knex:bindings [] trx4
2020-11-10T11:44:35.735Z knex:query ALTER TABLE "user_course_progress" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.735Z knex:bindings [] trx4
2020-11-10T11:44:35.737Z knex:query ALTER TABLE "user_course_service_progress" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.737Z knex:bindings [] trx4
2020-11-10T11:44:35.737Z knex:query ALTER TABLE "UserCourseSettings" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.737Z knex:bindings [] trx4
2020-11-10T11:44:35.739Z knex:query ALTER TABLE "UserCourseSettings" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.739Z knex:bindings [] trx4
2020-11-10T11:44:35.740Z knex:query ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.740Z knex:bindings [] trx4
2020-11-10T11:44:35.742Z knex:query ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.742Z knex:bindings [] trx4
2020-11-10T11:44:35.743Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.743Z knex:bindings [] trx4
2020-11-10T11:44:35.745Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.745Z knex:bindings [] trx4
2020-11-10T11:44:35.745Z knex:query ALTER TABLE "verified_user" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.745Z knex:bindings [] trx4
2020-11-10T11:44:35.748Z knex:query ALTER TABLE "verified_user" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.748Z knex:bindings [] trx4
2020-11-10T11:44:35.748Z knex:query insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.748Z knex:bindings [
  1,
  2020-11-10T11:44:35.747Z,
  '20200601113530_prisma-upgrade-alter-tables.ts'
] trx4
2020-11-10T11:44:35.750Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.751Z knex:bindings [
  1,
  2020-11-10T11:44:35.749Z,
  '20200601113530_prisma-upgrade-alter-tables.ts'
] trx4
2020-11-10T11:44:35.751Z knex:query select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema() trx4
2020-11-10T11:44:35.751Z knex:bindings [ 'user', 'research_consent' ] trx4
2020-11-10T11:44:35.753Z knex:query select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema() trx4
2020-11-10T11:44:35.753Z knex:bindings [ 'user', 'research_consent' ] trx4
2020-11-10T11:44:35.759Z knex:query insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.759Z knex:bindings [
  1,
  2020-11-10T11:44:35.757Z,
  '20200626140343_alter-table-user-research_consent.ts'
] trx4
2020-11-10T11:44:35.761Z knex:query select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema() trx4
2020-11-10T11:44:35.761Z knex:bindings [ 'completion', 'eligible_for_ects' ] trx4
2020-11-10T11:44:35.767Z knex:query insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.767Z knex:bindings [
  1,
  2020-11-10T11:44:35.766Z,
  '20200626141004_alter-table-completion-eligible_for_ects.ts'
] trx4
2020-11-10T11:44:35.769Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.769Z knex:bindings [
  1,
  2020-11-10T11:44:35.767Z,
  '20200626140343_alter-table-user-research_consent.ts'
] trx4
2020-11-10T11:44:35.770Z knex:query select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema() trx4
2020-11-10T11:44:35.770Z knex:bindings [ 'course', 'automatic_completions_eligible_for_ects' ] trx4
2020-11-10T11:44:35.771Z knex:query select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema() trx4
2020-11-10T11:44:35.771Z knex:bindings [ 'completion', 'eligible_for_ects' ] trx4
2020-11-10T11:44:35.780Z knex:query insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.780Z knex:bindings [
  1,
  2020-11-10T11:44:35.778Z,
  '20200626141225_alter-table-course-automatic_completions_eligible_for_ects.ts'
] trx4
2020-11-10T11:44:35.781Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.781Z knex:bindings [
  1,
  2020-11-10T11:44:35.780Z,
  '20200626141004_alter-table-completion-eligible_for_ects.ts'
] trx4
2020-11-10T11:44:35.783Z knex:query select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema() trx4
2020-11-10T11:44:35.783Z knex:bindings [ 'completion', 'completion_date' ] trx4
2020-11-10T11:44:35.784Z knex:query select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema() trx4
2020-11-10T11:44:35.784Z knex:bindings [ 'course', 'automatic_completions_eligible_for_ects' ] trx4
2020-11-10T11:44:35.792Z knex:query alter table "completion" add column "completion_date" timestamptz trx4
2020-11-10T11:44:35.792Z knex:bindings [] trx4
2020-11-10T11:44:35.793Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.793Z knex:bindings [
  1,
  2020-11-10T11:44:35.792Z,
  '20200626141225_alter-table-course-automatic_completions_eligible_for_ects.ts'
] trx4
2020-11-10T11:44:35.795Z knex:query insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.795Z knex:bindings [
  1,
  2020-11-10T11:44:35.793Z,
  '20200723120702_alter-table-completion-completion-date.ts'
] trx4
2020-11-10T11:44:35.796Z knex:query select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema() trx4
2020-11-10T11:44:35.796Z knex:bindings [ 'completion', 'completion_date' ] trx4
2020-11-10T11:44:35.798Z knex:query ALTER TABLE "completion" ALTER COLUMN "eligible_for_ects" SET DEFAULT true; trx4
2020-11-10T11:44:35.798Z knex:bindings [] trx4
2020-11-10T11:44:35.801Z knex:query insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.801Z knex:bindings [
  1,
  2020-11-10T11:44:35.800Z,
  '20200804112538_alter-table-completion-eligible-for-ects-default.ts'
] trx4
2020-11-10T11:44:35.805Z knex:query ALTER TABLE "course" ALTER COLUMN "automatic_completions_eligible_for_ects" SET DEFAULT true; trx4
2020-11-10T11:44:35.805Z knex:bindings [] trx4
2020-11-10T11:44:35.805Z knex:query alter table "completion" add column "completion_date" timestamptz trx4
2020-11-10T11:44:35.805Z knex:bindings [] trx4
2020-11-10T11:44:35.807Z knex:query insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.807Z knex:bindings [
  1,
  2020-11-10T11:44:35.806Z,
  '20200804112601_alter-table-course-automatic-completions-eligible-for-ects-default.ts'
] trx4
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_template" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'YIRgvrlFeueefxt8S-h_V'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'chshF_8fgGTF5q3dGj4rf'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ADIRxhRIvbeNU6HRV9k4N'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'nx_QzWjUT1InYCIYaaEAl'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'WrvkIUnYh6xreoES2rzAQ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "image" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ZO9iS3XC5n4XuPT-w7jpK'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "open_university_registration_link" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'oPCANNjOZ4LzoL3E4ymPV'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "image" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '1T3Pd9mfH09QlkmND04tB'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'm2xWyT2EZB5xUw-PwNqXq'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "open_university_registration_link" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'LavEcQXxPdup1SUx7D5zi'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '_0jyQhvBFBPcnKSU7blq2'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '66xu5UK_HbZ1tXT_MocVu'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "service" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '5kLjyJScMSOFusvxOSw1T'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Uv6GR0j-NOMlBocCNTe_1'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'u89j02csZVO1x4hqsaXd7'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "service" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'JHPDRKgAzJCcbJlgmMlyD'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'kV5czd-oXEIWT8na03pLs'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'zawPLBpJt0fL2PqVh2YOv'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '0OdP12X7aeQEuayi_Mpm5'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'tNjK07id1TiotQej34wuA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'NQMfs_aETdyPjhNvDVbcI'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'HR75jYin0nog9fxSfxJxG'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'LhCfYkG81KKt4Besir_gB'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '_eWx-jspv5VCaF4rmy-nt'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'V-4ZnpRH1Zd07DNX3lW2D'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'fIdk-AMoijlWK7VyvebqA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'cZR2wUpwaTECPRun4Sat0'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'B-TyrF76Eh90X9hmeTJpm'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'cTCDFfXd7ZSFYQvAo-FKy'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'z-aRXceOCw7K9cR7BABsq'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'vs_yIQpBU_uQ5zCxhpqZ3'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'fYjB8WiVHCABPZHkar-qk'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '3ABQqj8vWMb0BViOa5zdC'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'aFAvj7OYPUGVY2SvCeX4S'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'SKkm6uZnKgcR9GD9qhkrY'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.747Z,
        '20200601113530_prisma-upgrade-alter-tables.ts'
      ],
      __knexQueryUid: 'YK2moe36REYmmHkcVtABJ',
      sql: 'insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.749Z,
        '20200601113530_prisma-upgrade-alter-tables.ts'
      ],
      __knexQueryUid: 'ftBwBmKFeXDuZwVQ20AfL',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema()',
        bindings: [ 'user', 'research_consent' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema()',
        bindings: [ 'user', 'research_consent' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.757Z,
        '20200626140343_alter-table-user-research_consent.ts'
      ],
      __knexQueryUid: 'e167_SBNc6eMc6qAUXC4q',
      sql: 'insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema()',
        bindings: [ 'completion', 'eligible_for_ects' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.766Z,
        '20200626141004_alter-table-completion-eligible_for_ects.ts'
      ],
      __knexQueryUid: 'NKw9ynS5ye_IPXfiUF8e5',
      sql: 'insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.767Z,
        '20200626140343_alter-table-user-research_consent.ts'
      ],
      __knexQueryUid: 'aa8Efk6kaWGQbhIB5y0au',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema()',
        bindings: [ 'course', 'automatic_completions_eligible_for_ects' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema()',
        bindings: [ 'completion', 'eligible_for_ects' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.778Z,
        '20200626141225_alter-table-course-automatic_completions_eligible_for_ects.ts'
      ],
      __knexQueryUid: 'EpDB_9zoKYCbCaIsqzbXL',
      sql: 'insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.780Z,
        '20200626141004_alter-table-completion-eligible_for_ects.ts'
      ],
      __knexQueryUid: 'X2UDBC_ohahs9WfFdnq4M',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema()',
        bindings: [ 'completion', 'completion_date' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema()',
        bindings: [ 'course', 'automatic_completions_eligible_for_ects' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'alter table "completion" add column "completion_date" timestamptz',
        bindings: []
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.792Z,
        '20200626141225_alter-table-course-automatic_completions_eligible_for_ects.ts'
      ],
      __knexQueryUid: '5-s-fK2bJQ6WCPYF8iIYq',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.793Z,
        '20200723120702_alter-table-completion-completion-date.ts'
      ],
      __knexQueryUid: 'cLnGhxNyxDRJ7vCvLzYKl',
      sql: 'insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema()',
        bindings: [ 'completion', 'completion_date' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "eligible_for_ects" SET DEFAULT true;',
      bindings: [],
      options: {},
      __knexQueryUid: '5Wq5xgxrkHLMBrb_ZDZyB'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.800Z,
        '20200804112538_alter-table-completion-eligible-for-ects-default.ts'
      ],
      __knexQueryUid: 'sqp9NLIIQo-WShC4o2pRQ',
      sql: 'insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "automatic_completions_eligible_for_ects" SET DEFAULT true;',
      bindings: [],
      options: {},
      __knexQueryUid: '__Q9lRaGwvWqiR9lStzSN'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'alter table "completion" add column "completion_date" timestamptz',
        bindings: []
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.806Z,
        '20200804112601_alter-table-course-automatic-completions-eligible-for-ects-default.ts'
      ],
      __knexQueryUid: 'mL_HTeq4SsdazrEpJQKik',
      sql: 'insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.806Z,
        '20200723120702_alter-table-completion-completion-date.ts'
      ],
      __knexQueryUid: 'NhjjsJGb98RTGO1yNJGhT',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:35.808Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.808Z knex:bindings [
  1,
  2020-11-10T11:44:35.806Z,
  '20200723120702_alter-table-completion-completion-date.ts'
] trx4
2020-11-10T11:44:35.808Z knex:query ALTER TABLE "completion" ALTER COLUMN "completion_date" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.808Z knex:bindings [] trx4
2020-11-10T11:44:35.810Z knex:query insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.810Z knex:bindings [
  1,
  2020-11-10T11:44:35.809Z,
  '20200804112609_alter-table-completion-completion-date-default.ts'
] trx4
2020-11-10T11:44:35.811Z knex:query ALTER TABLE "completion" ALTER COLUMN "eligible_for_ects" SET DEFAULT true; trx4
2020-11-10T11:44:35.811Z knex:bindings [] trx4
2020-11-10T11:44:35.812Z knex:query ALTER TABLE "completion" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.812Z knex:bindings [] trx4
2020-11-10T11:44:35.813Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.813Z knex:bindings [
  1,
  2020-11-10T11:44:35.812Z,
  '20200804112538_alter-table-completion-eligible-for-ects-default.ts'
] trx4
2020-11-10T11:44:35.813Z knex:query ALTER TABLE "completion" RENAME "user" to "user_id"; trx4
2020-11-10T11:44:35.813Z knex:bindings [] trx4
2020-11-10T11:44:35.814Z knex:query ALTER TABLE "course" ALTER COLUMN "automatic_completions_eligible_for_ects" SET DEFAULT true; trx4
2020-11-10T11:44:35.814Z knex:bindings [] trx4
2020-11-10T11:44:35.815Z knex:query ALTER TABLE "completion_registered" RENAME "completion" TO "completion_id"; trx4
2020-11-10T11:44:35.815Z knex:bindings [] trx4
2020-11-10T11:44:35.816Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.816Z knex:bindings [
  1,
  2020-11-10T11:44:35.815Z,
  '20200804112601_alter-table-course-automatic-completions-eligible-for-ects-default.ts'
] trx4
2020-11-10T11:44:35.817Z knex:query ALTER TABLE "completion" ALTER COLUMN "completion_date" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.817Z knex:bindings [] trx4
2020-11-10T11:44:35.817Z knex:query ALTER TABLE "completion_registered" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.817Z knex:bindings [] trx4
2020-11-10T11:44:35.819Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.819Z knex:bindings [
  1,
  2020-11-10T11:44:35.818Z,
  '20200804112609_alter-table-completion-completion-date-default.ts'
] trx4
2020-11-10T11:44:35.820Z knex:query ALTER TABLE "completion_registered" RENAME "organization" TO "organization_id"; trx4
2020-11-10T11:44:35.821Z knex:bindings [] trx4
2020-11-10T11:44:35.821Z knex:query ALTER TABLE "completion" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.821Z knex:bindings [] trx4
2020-11-10T11:44:35.822Z knex:query ALTER TABLE "completion" RENAME "user" to "user_id"; trx4
2020-11-10T11:44:35.822Z knex:bindings [] trx4
2020-11-10T11:44:35.823Z knex:query ALTER TABLE "completion_registered" RENAME "user" TO "user_id"; trx4
2020-11-10T11:44:35.823Z knex:bindings [] trx4
2020-11-10T11:44:35.823Z knex:query ALTER TABLE "completion_registered" RENAME "completion" TO "completion_id"; trx4
2020-11-10T11:44:35.823Z knex:bindings [] trx4
2020-11-10T11:44:35.824Z knex:query ALTER TABLE "course" RENAME "completion_email" TO "completion_email_id"; trx4
2020-11-10T11:44:35.824Z knex:bindings [] trx4
2020-11-10T11:44:35.824Z knex:query ALTER TABLE "completion_registered" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.824Z knex:bindings [] trx4
2020-11-10T11:44:35.825Z knex:query ALTER TABLE "course" RENAME "completions_handled_by" TO "completions_handled_by_id"; trx4
2020-11-10T11:44:35.825Z knex:bindings [] trx4
2020-11-10T11:44:35.826Z knex:query ALTER TABLE "completion_registered" RENAME "organization" TO "organization_id"; trx4
2020-11-10T11:44:35.826Z knex:bindings [] trx4
2020-11-10T11:44:35.826Z knex:query ALTER TABLE "course" RENAME "inherit_settings_from" TO "inherit_settings_from_id"; trx4
2020-11-10T11:44:35.826Z knex:bindings [] trx4
2020-11-10T11:44:35.827Z knex:query ALTER TABLE "completion_registered" RENAME "user" TO "user_id"; trx4
2020-11-10T11:44:35.827Z knex:bindings [] trx4
2020-11-10T11:44:35.827Z knex:query ALTER TABLE "course" RENAME "owner_organization" TO "owner_organization_id"; trx4
2020-11-10T11:44:35.827Z knex:bindings [] trx4
2020-11-10T11:44:35.828Z knex:query ALTER TABLE "course" RENAME "completion_email" TO "completion_email_id"; trx4
2020-11-10T11:44:35.828Z knex:bindings [] trx4
2020-11-10T11:44:35.829Z knex:query ALTER TABLE "course" RENAME "photo" TO "photo_id"; trx4
2020-11-10T11:44:35.829Z knex:bindings [] trx4
2020-11-10T11:44:35.829Z knex:query ALTER TABLE "course" RENAME "completions_handled_by" TO "completions_handled_by_id"; trx4
2020-11-10T11:44:35.829Z knex:bindings [] trx4
2020-11-10T11:44:35.830Z knex:query ALTER TABLE "course_alias" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.830Z knex:bindings [] trx4
2020-11-10T11:44:35.831Z knex:query ALTER TABLE "course_organization" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.831Z knex:bindings [] trx4
2020-11-10T11:44:35.831Z knex:query ALTER TABLE "course" RENAME "inherit_settings_from" TO "inherit_settings_from_id"; trx4
2020-11-10T11:44:35.831Z knex:bindings [] trx4
2020-11-10T11:44:35.832Z knex:query ALTER TABLE "course" RENAME "owner_organization" TO "owner_organization_id"; trx4
2020-11-10T11:44:35.832Z knex:bindings [] trx4
2020-11-10T11:44:35.832Z knex:query ALTER TABLE "course_organization" RENAME "organization" TO "organization_id"; trx4
2020-11-10T11:44:35.832Z knex:bindings [] trx4
2020-11-10T11:44:35.833Z knex:query ALTER TABLE "course" RENAME "photo" TO "photo_id"; trx4
2020-11-10T11:44:35.833Z knex:bindings [] trx4
2020-11-10T11:44:35.834Z knex:query ALTER TABLE "course_translation" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.834Z knex:bindings [] trx4
2020-11-10T11:44:35.834Z knex:query ALTER TABLE "course_alias" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.835Z knex:bindings [] trx4
2020-11-10T11:44:35.836Z knex:query ALTER TABLE "course_organization" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.836Z knex:bindings [] trx4
2020-11-10T11:44:35.837Z knex:query ALTER TABLE "course_variant" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.837Z knex:bindings [] trx4
2020-11-10T11:44:35.837Z knex:query ALTER TABLE "course_organization" RENAME "organization" TO "organization_id"; trx4
2020-11-10T11:44:35.837Z knex:bindings [] trx4
2020-11-10T11:44:35.838Z knex:query ALTER TABLE "course_translation" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.838Z knex:bindings [] trx4
2020-11-10T11:44:35.839Z knex:query ALTER TABLE "email_delivery" RENAME "email_template" TO "email_template_id"; trx4
2020-11-10T11:44:35.839Z knex:bindings [] trx4
2020-11-10T11:44:35.840Z knex:query ALTER TABLE "course_variant" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.840Z knex:bindings [] trx4
2020-11-10T11:44:35.841Z knex:query ALTER TABLE "email_delivery" RENAME "email_template" TO "email_template_id"; trx4
2020-11-10T11:44:35.841Z knex:bindings [] trx4
2020-11-10T11:44:35.842Z knex:query ALTER TABLE "email_delivery" RENAME "user" TO "user_id"; trx4
2020-11-10T11:44:35.842Z knex:bindings [] trx4
2020-11-10T11:44:35.842Z knex:query ALTER TABLE "email_delivery" RENAME "user" TO "user_id"; trx4
2020-11-10T11:44:35.842Z knex:bindings [] trx4
2020-11-10T11:44:35.844Z knex:query ALTER TABLE "exercise" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.844Z knex:bindings [] trx4
2020-11-10T11:44:35.845Z knex:query ALTER TABLE "exercise" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.845Z knex:bindings [] trx4
2020-11-10T11:44:35.847Z knex:query ALTER TABLE "exercise" RENAME "service" TO "service_id"; trx4
2020-11-10T11:44:35.847Z knex:bindings [] trx4
2020-11-10T11:44:35.848Z knex:query ALTER TABLE "exercise_completion" RENAME "exercise" TO "exercise_id"; trx4
2020-11-10T11:44:35.848Z knex:bindings [] trx4
2020-11-10T11:44:35.849Z knex:query ALTER TABLE "exercise_completion" RENAME "user" to "user_id"; trx4
2020-11-10T11:44:35.849Z knex:bindings [] trx4
2020-11-10T11:44:35.849Z knex:query ALTER TABLE "exercise" RENAME "service" TO "service_id"; trx4
2020-11-10T11:44:35.849Z knex:bindings [] trx4
2020-11-10T11:44:35.850Z knex:query ALTER TABLE "exercise_completion_required_actions" RENAME "exercise_completion" TO "exercise_completion_id"; trx4
2020-11-10T11:44:35.850Z knex:bindings [] trx4
2020-11-10T11:44:35.851Z knex:query ALTER TABLE "exercise_completion" RENAME "exercise" TO "exercise_id"; trx4
2020-11-10T11:44:35.851Z knex:bindings [] trx4
2020-11-10T11:44:35.852Z knex:query ALTER TABLE "open_university_registration_link" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.852Z knex:bindings [] trx4
2020-11-10T11:44:35.852Z knex:query ALTER TABLE "exercise_completion" RENAME "user" to "user_id"; trx4
2020-11-10T11:44:35.852Z knex:bindings [] trx4
2020-11-10T11:44:35.853Z knex:query ALTER TABLE "organization" RENAME "creator" TO "creator_id"; trx4
2020-11-10T11:44:35.853Z knex:bindings [] trx4
2020-11-10T11:44:35.854Z knex:query ALTER TABLE "exercise_completion_required_actions" RENAME "exercise_completion" TO "exercise_completion_id"; trx4
2020-11-10T11:44:35.854Z knex:bindings [] trx4
2020-11-10T11:44:35.855Z knex:query ALTER TABLE "organization_translation" RENAME "organization" TO "organization_id"; trx4
2020-11-10T11:44:35.855Z knex:bindings [] trx4
2020-11-10T11:44:35.855Z knex:query ALTER TABLE "open_university_registration_link" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.855Z knex:bindings [] trx4
2020-11-10T11:44:35.856Z knex:query ALTER TABLE "organization" RENAME "creator" TO "creator_id"; trx4
2020-11-10T11:44:35.856Z knex:bindings [] trx4
2020-11-10T11:44:35.857Z knex:query ALTER TABLE "study_module_translation" RENAME "study_module" TO "study_module_id"; trx4
2020-11-10T11:44:35.857Z knex:bindings [] trx4
2020-11-10T11:44:35.858Z knex:query ALTER TABLE "organization_translation" RENAME "organization" TO "organization_id"; trx4
2020-11-10T11:44:35.858Z knex:bindings [] trx4
2020-11-10T11:44:35.859Z knex:query ALTER TABLE "study_module_translation" RENAME "study_module" TO "study_module_id"; trx4
2020-11-10T11:44:35.859Z knex:bindings [] trx4
2020-11-10T11:44:35.859Z knex:query ALTER TABLE "user_course_progress" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.859Z knex:bindings [] trx4
2020-11-10T11:44:35.861Z knex:query ALTER TABLE "user_course_progress" RENAME "user" TO "user_id"; trx4
2020-11-10T11:44:35.862Z knex:bindings [] trx4
2020-11-10T11:44:35.864Z knex:query ALTER TABLE "user_course_progress" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.864Z knex:query ALTER TABLE "user_course_service_progress" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.865Z knex:bindings [] trx4
2020-11-10T11:44:35.865Z knex:bindings [] trx4
2020-11-10T11:44:35.866Z knex:query ALTER TABLE "user_course_progress" RENAME "user" TO "user_id"; trx4
2020-11-10T11:44:35.866Z knex:bindings [] trx4
2020-11-10T11:44:35.866Z knex:query ALTER TABLE "user_course_service_progress" RENAME "service" TO "service_id"; trx4
2020-11-10T11:44:35.866Z knex:bindings [] trx4
2020-11-10T11:44:35.867Z knex:query ALTER TABLE "user_course_service_progress" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.867Z knex:bindings [] trx4
2020-11-10T11:44:35.868Z knex:query ALTER TABLE "user_course_service_progress" RENAME "user" TO "user_id"; trx4
2020-11-10T11:44:35.868Z knex:bindings [] trx4
2020-11-10T11:44:35.869Z knex:query ALTER TABLE "user_course_service_progress" RENAME "service" TO "service_id"; trx4
2020-11-10T11:44:35.869Z knex:bindings [] trx4
2020-11-10T11:44:35.869Z knex:query ALTER TABLE "user_course_service_progress" RENAME "user_course_progress" TO "user_course_progress_id"; trx4
2020-11-10T11:44:35.869Z knex:bindings [] trx4
2020-11-10T11:44:35.870Z knex:query ALTER TABLE "user_course_service_progress" RENAME "user" TO "user_id"; trx4
2020-11-10T11:44:35.870Z knex:bindings [] trx4
2020-11-10T11:44:35.871Z knex:query ALTER TABLE "user_course_service_progress" RENAME "user_course_progress" TO "user_course_progress_id"; trx4
2020-11-10T11:44:35.871Z knex:bindings [] trx4
2020-11-10T11:44:35.873Z knex:query ALTER TABLE "UserCourseSettings" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.873Z knex:bindings [] trx4
2020-11-10T11:44:35.874Z knex:query ALTER TABLE "UserCourseSettings" RENAME "user" TO "user_id"; trx4
2020-11-10T11:44:35.874Z knex:bindings [] trx4
2020-11-10T11:44:35.874Z knex:query ALTER TABLE "UserCourseSettings" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.874Z knex:bindings [] trx4
2020-11-10T11:44:35.876Z knex:query ALTER TABLE "UserCourseSettings" RENAME "user" TO "user_id"; trx4
2020-11-10T11:44:35.876Z knex:bindings [] trx4
2020-11-10T11:44:35.876Z knex:query ALTER TABLE "user_course_settings_visibility" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.876Z knex:bindings [] trx4
2020-11-10T11:44:35.877Z knex:query ALTER TABLE "user_course_settings_visibility" RENAME "course" TO "course_id"; trx4
2020-11-10T11:44:35.877Z knex:bindings [] trx4
2020-11-10T11:44:35.878Z knex:query ALTER TABLE "user_organization" RENAME "organization" TO "organization_id"; trx4
2020-11-10T11:44:35.878Z knex:bindings [] trx4
2020-11-10T11:44:35.879Z knex:query ALTER TABLE "user_organization" RENAME "organization" TO "organization_id"; trx4
2020-11-10T11:44:35.879Z knex:bindings [] trx4
2020-11-10T11:44:35.880Z knex:query ALTER TABLE "user_organization" RENAME "user" TO "user_id"; trx4
2020-11-10T11:44:35.881Z knex:bindings [] trx4
2020-11-10T11:44:35.881Z knex:query ALTER TABLE "user_organization" RENAME "user" TO "user_id"; trx4
2020-11-10T11:44:35.881Z knex:bindings [] trx4
2020-11-10T11:44:35.882Z knex:query ALTER TABLE "verified_user" RENAME "organization" TO "organization_id"; trx4
2020-11-10T11:44:35.882Z knex:bindings [] trx4
2020-11-10T11:44:35.883Z knex:query ALTER TABLE "verified_user" RENAME "organization" TO "organization_id"; trx4
2020-11-10T11:44:35.883Z knex:bindings [] trx4
2020-11-10T11:44:35.884Z knex:query ALTER TABLE "verified_user" RENAME "user" TO "user_id"; trx4
2020-11-10T11:44:35.884Z knex:bindings [] trx4
2020-11-10T11:44:35.885Z knex:query ALTER TABLE "verified_user" RENAME "user" TO "user_id"; trx4
2020-11-10T11:44:35.885Z knex:bindings [] trx4
2020-11-10T11:44:35.886Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.886Z knex:bindings [
  1,
  2020-11-10T11:44:35.885Z,
  '20200810142948_alter-tables-foreign-key-fields.ts'
] trx4
2020-11-10T11:44:35.888Z knex:query insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:35.888Z knex:bindings [
  1,
  2020-11-10T11:44:35.886Z,
  '20200810142948_alter-tables-foreign-key-fields.ts'
] trx4
2020-11-10T11:44:35.889Z knex:query ALTER TABLE "completion" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.889Z knex:bindings [] trx4
2020-11-10T11:44:35.890Z knex:query ALTER TABLE "completion_registered" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.891Z knex:bindings [] trx4
2020-11-10T11:44:35.892Z knex:query ALTER TABLE "course" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.892Z knex:bindings [] trx4
2020-11-10T11:44:35.894Z knex:query ALTER TABLE "course_alias" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.894Z knex:bindings [] trx4
2020-11-10T11:44:35.896Z knex:query ALTER TABLE "course_organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.896Z knex:bindings [] trx4
2020-11-10T11:44:35.897Z knex:query ALTER TABLE "completion" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.897Z knex:bindings [] trx4
2020-11-10T11:44:35.898Z knex:query ALTER TABLE "course_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.898Z knex:bindings [] trx4
2020-11-10T11:44:35.899Z knex:query ALTER TABLE "completion_registered" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.899Z knex:bindings [] trx4
2020-11-10T11:44:35.899Z knex:query ALTER TABLE "course_variant" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.899Z knex:bindings [] trx4
2020-11-10T11:44:35.900Z knex:query ALTER TABLE "course" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.900Z knex:bindings [] trx4
2020-11-10T11:44:35.902Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.902Z knex:bindings [] trx4
2020-11-10T11:44:35.902Z knex:query ALTER TABLE "course_alias" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.902Z knex:bindings [] trx4
2020-11-10T11:44:35.904Z knex:query ALTER TABLE "course_organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.904Z knex:bindings [] trx4
2020-11-10T11:44:35.904Z knex:query ALTER TABLE "email_template" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.904Z knex:bindings [] trx4
2020-11-10T11:44:35.905Z knex:query ALTER TABLE "course_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.905Z knex:bindings [] trx4
2020-11-10T11:44:35.906Z knex:query ALTER TABLE "course_variant" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.906Z knex:bindings [] trx4
2020-11-10T11:44:35.906Z knex:query ALTER TABLE "exercise" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.906Z knex:bindings [] trx4
2020-11-10T11:44:35.907Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.907Z knex:bindings [] trx4
2020-11-10T11:44:35.908Z knex:query ALTER TABLE "exercise_completion" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.908Z knex:bindings [] trx4
2020-11-10T11:44:35.910Z knex:query ALTER TABLE "email_template" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.910Z knex:bindings [] trx4
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "eligible_for_ects" SET DEFAULT true;',
      bindings: [],
      options: {},
      __knexQueryUid: '0X8JCJ7bhfaHUpismCGsY'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "completion_date" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'oQLpwrBv_QPdWvinI97WA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.809Z,
        '20200804112609_alter-table-completion-completion-date-default.ts'
      ],
      __knexQueryUid: 'c5011r27s_wjbAKNfxIfH',
      sql: 'insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '7cVot-MYkXj-kFR0EJyMj'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.812Z,
        '20200804112538_alter-table-completion-eligible-for-ects-default.ts'
      ],
      __knexQueryUid: 'OCeLhliTc6GjOVty9RKj3',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" RENAME "user" to "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'gS56HuoJXfghmBPDSHYds'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "automatic_completions_eligible_for_ects" SET DEFAULT true;',
      bindings: [],
      options: {},
      __knexQueryUid: '08C1jf8Iw7zbRgE1SQ875'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" RENAME "completion" TO "completion_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'JTAr7HNTCQlCODgoNFCrY'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.815Z,
        '20200804112601_alter-table-course-automatic-completions-eligible-for-ects-default.ts'
      ],
      __knexQueryUid: 'y3qZqRhJ9jwx5ILx1M_b0',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "completion_date" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'OnUixffXf0SURPyRfqFG1'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'ch6Aj0IxLEY4h9Kfjxpua'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.818Z,
        '20200804112609_alter-table-completion-completion-date-default.ts'
      ],
      __knexQueryUid: 'ZcbLu_zpS77kGNqiIavHt',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" RENAME "organization" TO "organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '7f7kC856KsDuAc8esjlf5'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'gxyMhm6SbXyzSKk7qHHjP'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" RENAME "user" to "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'kGftsP0M2W1wiXEJvYfQe'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'mG5zty5XcVzk3pE4cDAyh'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" RENAME "completion" TO "completion_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '-1sZ_SEKr4aFTWInF9MSu'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" RENAME "completion_email" TO "completion_email_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'yTkIB_L1gGaRUmKglKrnr'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'vcrKEoUOWaE8VtAXO4VUM'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" RENAME "completions_handled_by" TO "completions_handled_by_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '2Oilg9yVEXhd8rcJaX7aC'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" RENAME "organization" TO "organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '2C6hEpUBV9sF1zCepqTps'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" RENAME "inherit_settings_from" TO "inherit_settings_from_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'yTBZeayS1z0VWVKOCLa9D'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'joWXkw0xghY0HGQ8-lCgb'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" RENAME "owner_organization" TO "owner_organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'yb3SsvSCyg2VlpU-4JJi0'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" RENAME "completion_email" TO "completion_email_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'dlwxUR07ELHfRYnPW9v3g'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" RENAME "photo" TO "photo_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '7E2iYhhaeZt583byXXxJF'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" RENAME "completions_handled_by" TO "completions_handled_by_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'Dt11XRA3BQpnMFSnNrYwa'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_alias" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'Z1j5nbsg2MeNfM8dPlEGa'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '_JM4V62zhpzVCf1do6upy'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" RENAME "inherit_settings_from" TO "inherit_settings_from_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'SpScY6g2CUIlBhqr8kxda'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" RENAME "owner_organization" TO "owner_organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '4cS2WynjzlsR1zqrQh-Qv'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" RENAME "organization" TO "organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'qcHwVTtldlQFKHVkrkaCc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" RENAME "photo" TO "photo_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'lwtQR1C8TM3zPJ4nYSgah'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_translation" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'OfYA9uO2RwADsqKZvJYse'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_alias" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'AHOinLtdqjg9UJn4878Gh'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'VxE8vO_7RkAz9CppjxtHA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_variant" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'nQtju4rMyaf-ZyN1-bR8S'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" RENAME "organization" TO "organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'DDNQRjo6h_jp-7xi1p5Mf'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_translation" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '8eP-bBiRR6gFbeAnMibpH'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" RENAME "email_template" TO "email_template_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'QQA4zfhkZSWKr2n_BvY7a'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_variant" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'JMxJ2WvqELzQcHK3EpeQV'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" RENAME "email_template" TO "email_template_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'Ts0x3PNAM0hZosBxOttuD'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'F4Up8P7sceqZvl1O8LXlC'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'romiAbO8etyEmzeznJngs'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '3BXJK1U3U_SIV96Iwl6sR'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'fD8Z2KybhazRv1o0HYK6I'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" RENAME "service" TO "service_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'sjOD0YVDPXuLa2qTs_208'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" RENAME "exercise" TO "exercise_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '2xDn_aUdF0Hgn3yy_cI6l'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" RENAME "user" to "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'QJha_yUg0wQBJqGN2VIWb'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" RENAME "service" TO "service_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'abVbU0VBBmOaPiPtBsCQN'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion_required_actions" RENAME "exercise_completion" TO "exercise_completion_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'T0LCxJyAIPrrWTV5Cd-Ay'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" RENAME "exercise" TO "exercise_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'N5K87pZkMy_HVubaMkvtD'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "open_university_registration_link" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'c4-p3vg-TB9vqh6j7fhxJ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" RENAME "user" to "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'yWBtO_dZg-i_96qIxaM-w'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization" RENAME "creator" TO "creator_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '_0MimNx2gx7yYm7uHnbeV'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion_required_actions" RENAME "exercise_completion" TO "exercise_completion_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '56e2l95I4H6XgsScMe3Bz'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization_translation" RENAME "organization" TO "organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'P4L1qKnzHMmk8cP2NNPPG'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "open_university_registration_link" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '4kPbLaHBNrdeUhXGkiepk'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization" RENAME "creator" TO "creator_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'xvpyQewGnKmeR5FwKKRx2'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module_translation" RENAME "study_module" TO "study_module_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'LqpKn3WyKqG9Fp5rpV2na'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization_translation" RENAME "organization" TO "organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'AqKPK5N_L4SqEw5pjEtXo'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module_translation" RENAME "study_module" TO "study_module_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'v8Iw1VDucqP9Qy_-RL9Nn'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'HiLV5LzhPSxxdd1yXqJ8I'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'v_R3G-daEa6ysT5M3mR4D'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'QEuNm86OAxU8pFhSYMs6-'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '1_whHUXCG9YhYHpMY9AVN'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '_nfbh2y_6WfLB3dvnlNxA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" RENAME "service" TO "service_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'MHjc430wNzFBPbJCu74rf'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'VsjuwNLf9-nrByHJ85DyM'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'WGSyv3fd8KNbXr7lfcSZI'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" RENAME "service" TO "service_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'ZIapFOxhiwlbiZ5TQ0Kxm'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" RENAME "user_course_progress" TO "user_course_progress_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'wTjbpgQ9CtQekqaHgJmhP'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'w0GOpgtJ9dK3N1VEE8anG'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" RENAME "user_course_progress" TO "user_course_progress_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'sGPK7VqdBAFFBZdDpRJXY'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'CWKI0CGSB5iZdvl5qLv_H'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'WBh9FqXbeXe8cORagOe28'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '92rhcsZae-C7lk3mD6Y2S'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'qxb4tmh5qtaK0GYo4lUf0'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_settings_visibility" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '8HQcN-q_TQVMPPRIzCO-g'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_settings_visibility" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'khM5FU8-4J3XWLO9owCpr'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" RENAME "organization" TO "organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'zslW9dP1zanIbm6GVDZZL'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" RENAME "organization" TO "organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'OIcGIT-XrEjROTnKwqdZW'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'vEKltyqr4bd_adXbD3-f3'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'XvsJchAkaBEzcttyjPJm0'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" RENAME "organization" TO "organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'E6Rh5ws5SQ7z8ZZ3kXqvy'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" RENAME "organization" TO "organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'pZOHdLLaPRO7E3vEXmiZw'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'NcwRjqifC1stfcISXs1w8'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'Rxts5PWHXzXdVexykOy8h'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.885Z,
        '20200810142948_alter-tables-foreign-key-fields.ts'
      ],
      __knexQueryUid: 'awXRTniHUfsV36Q7x0kXy',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:35.886Z,
        '20200810142948_alter-tables-foreign-key-fields.ts'
      ],
      __knexQueryUid: 'KkBUS7a7w2MxrnE7Bns5X',
      sql: 'insert into "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'UHEktPWi8ZHGJpbJTRLu-'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Wkm1VgSRLsjE6rb9fMfIR'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'fb8cwzx0lxssShOBY4Xt5'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_alias" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '9YuYmkpSqCnKOM3FkDKHD'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'b8ev0bajU26fqzKin7xQX'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'sI618WNeQJfqh5YwI7J0i'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '5AClN9O9opei4GSE11NGf'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'hVfTfVw5E89osQQjIghc_'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_variant" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ekNuAFnD4lzGT8U9hCX2f'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'e2pSo0OwWVeoaB2nKdD0_'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'tkczq_gOvveyOMMdWtoaN'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_alias" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ujv6c3fEbs_nUfcszoOxT'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '6rAEaB1ftTSAR1yBWDnU2'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_template" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'NgeunARcQeZPVm5SspmxX'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'sw4rOju7bXkHbiPx6OAsc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_variant" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'RGiuu_Huy2xAepmfbQBSb'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '5b6mxzf_cQ92NotpsehXy'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'zNYkXX3gTWFaQ1s9L5C9a'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '8jc2_AXsbDzcTG8eZdY-K'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_template" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '0T-ddOMESOLqj7FjhDlME'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "image" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'rvefS9QO3ikFuqKaCWnDt'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:35.911Z knex:query ALTER TABLE "image" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.912Z knex:bindings [] trx4
2020-11-10T11:44:35.912Z knex:query ALTER TABLE "exercise" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.912Z knex:bindings [] trx4
2020-11-10T11:44:35.914Z knex:query ALTER TABLE "open_university_registration_link" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.914Z knex:bindings [] trx4
2020-11-10T11:44:35.914Z knex:query ALTER TABLE "exercise_completion" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.914Z knex:bindings [] trx4
2020-11-10T11:44:35.916Z knex:query ALTER TABLE "image" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.916Z knex:bindings [] trx4
2020-11-10T11:44:35.916Z knex:query ALTER TABLE "organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.916Z knex:bindings [] trx4
2020-11-10T11:44:35.918Z knex:query ALTER TABLE "open_university_registration_link" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.918Z knex:bindings [] trx4
2020-11-10T11:44:35.918Z knex:query ALTER TABLE "organization_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.918Z knex:bindings [] trx4
2020-11-10T11:44:35.919Z knex:query ALTER TABLE "service" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.919Z knex:bindings [] trx4
2020-11-10T11:44:35.920Z knex:query ALTER TABLE "organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.920Z knex:bindings [] trx4
2020-11-10T11:44:35.921Z knex:query ALTER TABLE "study_module" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.921Z knex:bindings [] trx4
2020-11-10T11:44:35.922Z knex:query ALTER TABLE "organization_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.922Z knex:bindings [] trx4
2020-11-10T11:44:35.922Z knex:query ALTER TABLE "study_module_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.922Z knex:bindings [] trx4
2020-11-10T11:44:35.924Z knex:query ALTER TABLE "user" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.924Z knex:bindings [] trx4
2020-11-10T11:44:35.924Z knex:query ALTER TABLE "service" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.924Z knex:bindings [] trx4
2020-11-10T11:44:35.925Z knex:query ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.925Z knex:bindings [] trx4
2020-11-10T11:44:35.926Z knex:query ALTER TABLE "study_module" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.926Z knex:bindings [] trx4
2020-11-10T11:44:35.927Z knex:query ALTER TABLE "user_course_progress" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.927Z knex:bindings [] trx4
2020-11-10T11:44:35.928Z knex:query ALTER TABLE "study_module_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.928Z knex:bindings [] trx4
2020-11-10T11:44:35.930Z knex:query ALTER TABLE "user_course_service_progress" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.930Z knex:bindings [] trx4
2020-11-10T11:44:35.931Z knex:query ALTER TABLE "user" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.931Z knex:bindings [] trx4
2020-11-10T11:44:35.932Z knex:query ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.932Z knex:bindings [] trx4
2020-11-10T11:44:35.933Z knex:query ALTER TABLE "UserCourseSettings" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.933Z knex:bindings [] trx4
2020-11-10T11:44:35.934Z knex:query ALTER TABLE "user_course_progress" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.934Z knex:bindings [] trx4
2020-11-10T11:44:35.935Z knex:query ALTER TABLE "user_course_service_progress" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.935Z knex:bindings [] trx4
2020-11-10T11:44:35.935Z knex:query ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.935Z knex:bindings [] trx4
2020-11-10T11:44:35.937Z knex:query ALTER TABLE "UserCourseSettings" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.937Z knex:bindings [] trx4
2020-11-10T11:44:35.938Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.938Z knex:bindings [] trx4
2020-11-10T11:44:35.939Z knex:query ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.939Z knex:bindings [] trx4
2020-11-10T11:44:35.940Z knex:query ALTER TABLE "verified_user" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.940Z knex:bindings [] trx4
2020-11-10T11:44:35.941Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.941Z knex:bindings [] trx4
2020-11-10T11:44:35.942Z knex:query CREATE EXTENSION IF NOT EXISTS "uuid-ossp"; trx4
2020-11-10T11:44:35.942Z knex:bindings [] trx4
2020-11-10T11:44:35.943Z knex:query ALTER TABLE "verified_user" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx4
2020-11-10T11:44:35.944Z knex:bindings [] trx4
2020-11-10T11:44:35.944Z knex:query ALTER TABLE "completion" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.944Z knex:bindings [] trx4
2020-11-10T11:44:35.945Z knex:query ALTER TABLE "completion_registered" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.945Z knex:bindings [] trx4
2020-11-10T11:44:35.946Z knex:query CREATE EXTENSION IF NOT EXISTS "uuid-ossp"; trx4
2020-11-10T11:44:35.946Z knex:bindings [] trx4
2020-11-10T11:44:35.947Z knex:query ALTER TABLE "course" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.947Z knex:bindings [] trx4
2020-11-10T11:44:35.948Z knex:query ALTER TABLE "completion" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.948Z knex:bindings [] trx4
2020-11-10T11:44:35.948Z knex:query ALTER TABLE "course_alias" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.948Z knex:bindings [] trx4
2020-11-10T11:44:35.949Z knex:query ALTER TABLE "course_organization" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.949Z knex:bindings [] trx4
2020-11-10T11:44:35.951Z knex:query ALTER TABLE "course_translation" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.951Z knex:bindings [] trx4
2020-11-10T11:44:35.951Z knex:query update "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations_lock" set "is_locked" = ? trx4
2020-11-10T11:44:35.951Z knex:bindings [ 0 ] trx4
2020-11-10T11:44:35.953Z knex:query ALTER TABLE "course_variant" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.953Z knex:bindings [] trx4
2020-11-10T11:44:35.953Z knex:query ROLLBACK trx4
2020-11-10T11:44:35.953Z knex:bindings undefined trx4
2020-11-10T11:44:35.954Z knex:tx trx2: releasing connection
2020-11-10T11:44:35.954Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.955Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.955Z knex:bindings [] trx4
2020-11-10T11:44:35.958Z knex:query ALTER TABLE "email_template" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.958Z knex:bindings [] trx4
2020-11-10T11:44:35.960Z knex:query ALTER TABLE "exercise" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.960Z knex:bindings [] trx4
2020-11-10T11:44:35.963Z knex:query ALTER TABLE "exercise_completion" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.963Z knex:bindings [] trx4
2020-11-10T11:44:35.965Z knex:query ALTER TABLE "exercise_completion_required_actions" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.965Z knex:bindings [] trx4
2020-11-10T11:44:35.967Z knex:query ALTER TABLE "image" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.967Z knex:bindings [] trx4
2020-11-10T11:44:35.970Z knex:query ALTER TABLE "open_university_registration_link" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.970Z knex:bindings [] trx4
2020-11-10T11:44:35.972Z knex:query ALTER TABLE "organization" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.972Z knex:bindings [] trx4
2020-11-10T11:44:35.974Z knex:query ALTER TABLE "organization_translation" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.974Z knex:bindings [] trx4
2020-11-10T11:44:35.976Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:35.976Z knex:query ALTER TABLE "service" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.977Z knex:query DROP SCHEMA IF EXISTS "" CASCADE; trx4
2020-11-10T11:44:35.977Z knex:bindings [] trx4
2020-11-10T11:44:35.977Z knex:bindings [] trx4
2020-11-10T11:44:35.979Z knex:query ALTER TABLE "study_module" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.979Z knex:bindings [] trx4
2020-11-10T11:44:35.981Z knex:query ALTER TABLE "study_module_translation" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.981Z knex:bindings [] trx4
2020-11-10T11:44:35.983Z knex:query ALTER TABLE "user" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.983Z knex:bindings [] trx4
2020-11-10T11:44:35.986Z knex:query ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.986Z knex:bindings [] trx4
FAIL tests/Course.test.ts
  course queries
    course
      ✕ returns course on id (962 ms)

  ● course queries › course › returns course on id

    error: ALTER TABLE "completion" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); - function uuid_generate_v4() does not exist

      at Parser.parseErrorMessage (node_modules/pg-protocol/src/parser.ts:357:11)
      at Parser.handlePacket (node_modules/pg-protocol/src/parser.ts:186:21)
      at Parser.parse (node_modules/pg-protocol/src/parser.ts:101:30)
      at Socket.<anonymous> (node_modules/pg-protocol/src/index.ts:7:48)

  ● course queries › course › returns course on id

    TypeError: Cannot read property 'course' of undefined

      33 |         await new Promise((resolve) => setTimeout(resolve, 100))
      34 |       }*/
    > 35 |       const newCourse = await ctx.prisma.course.create({
         |                                          ^
      36 |         data: course,
      37 |       })
      38 |       courseId = newCourse.id

      at Object.<anonymous> (tests/Course.test.ts:35:42)

  ● course queries › course › returns course on id

    TypeError: Cannot read property 'setHeader' of undefined

      43 |         .spyOn(TmcClient.prototype, "getCurrentUserDetails")
      44 |         .mockImplementation(async () => normalUserDetails)
    > 45 |       ctx!.client.setHeader("Authorization", "Bearer 12345")
         |                   ^
      46 | 
      47 |       const res = await ctx.client.request(courseQuery, {
      48 |         id: courseId,

      at Object.<anonymous> (tests/Course.test.ts:45:19)

2020-11-10T11:44:35.987Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:35.988Z knex:query ALTER TABLE "user_course_progress" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.988Z knex:bindings [] trx4
2020-11-10T11:44:35.990Z knex:query ALTER TABLE "user_course_service_progress" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.990Z knex:bindings [] trx4
2020-11-10T11:44:35.991Z knex:query ALTER TABLE "UserCourseSettings" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.991Z knex:bindings [] trx4
2020-11-10T11:44:35.992Z knex:query ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.992Z knex:bindings [] trx4
2020-11-10T11:44:35.994Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.994Z knex:bindings [] trx4
2020-11-10T11:44:35.995Z knex:query ALTER TABLE "verified_user" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx4
2020-11-10T11:44:35.995Z knex:bindings [] trx4
2020-11-10T11:44:35.997Z knex:query ALTER TABLE "completion" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:35.997Z knex:bindings [] trx4
2020-11-10T11:44:35.998Z knex:query ALTER TABLE "completion_registered" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:35.998Z knex:bindings [] trx4
2020-11-10T11:44:36.000Z knex:query ALTER TABLE "course" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.001Z knex:bindings [] trx4
2020-11-10T11:44:36.002Z knex:query ALTER TABLE "course_alias" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.002Z knex:bindings [] trx4
2020-11-10T11:44:36.004Z knex:query ALTER TABLE "course_organization" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.004Z knex:bindings [] trx4
2020-11-10T11:44:36.006Z knex:query ALTER TABLE "course_translation" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.007Z knex:bindings [] trx4
2020-11-10T11:44:36.008Z knex:query ALTER TABLE "course_variant" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.008Z knex:bindings [] trx4
2020-11-10T11:44:36.009Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.009Z knex:bindings [] trx4
2020-11-10T11:44:36.010Z knex:query ALTER TABLE "email_template" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.010Z knex:bindings [] trx4
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'FyizP11uA_66TtC9-nWWB'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "open_university_registration_link" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Pgb13VkcKWfwP-X_OPuv2'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'TubASXMO-FD16IDdYocqV'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "image" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'cw6JoJbHNcevn6MpHE3Cv'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'wLKPsGW5ZGbAF4X3QNetd'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "open_university_registration_link" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'mU8N9MxmdWu70AVyy0MED'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'xlHiWESH7SYz_GRQ197GC'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "service" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '5_qerXl6ORkN_BxR4x009'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ywjm6KYmvGn4TxwqDdanU'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '58gJWJPv1bE9R2cmwJ8pV'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'd_AgR2YeljPwYeal-pcuS'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '7KebslqJgR1dwdA7AsEpF'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'UQrVI5EavJpyo5xgEodvt'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "service" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'L7PVxsdiYksAWL9I5-NTW'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'IQ6gcs5NmwU9aHUdxuGIE'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ypUnEsX4hfg8QM32OetKP'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'd5z0Wf4W4u2ekcj64mo-E'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'tQYuy5gWNi9_Q4-nNjdXj'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'y0WEWkDoaOqF6VDWE1bzb'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'uFGkEvCcAEKABS6fRCSnk'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'T-wnaaw5L5fAM2XBtb1js'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '4OKNbXMUDb_2tdMTY_lVJ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'tif1wPD405jR7X5wLTnY-'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'mZF713t_0eFmEUZiVAw9o'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'KPm6xGqoYP6VMc9A328tE'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'g3LHlWiv0jVhraNIEZCt5'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'f1EuUhkEKF4KdIphMBaPv'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'x6NNLAE2wFil8jxdmS2wk'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'tLt0Uvbn4CcnpXdroNa_7'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'JH7wlTNhKPsNnLMxFaPXa'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp";',
      bindings: [],
      options: {},
      __knexQueryUid: 'Ayne2Mkap_vkJkScC41SX'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'O5FpvM-nJ-jYXJdcUKR-R'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'BttNyTG6pe6lBrGuHRcYG'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'unw3aQ7P0XQmY7yMz4Abe'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp";',
      bindings: [],
      options: {},
      __knexQueryUid: 'HOWoUJmTQ3tnY87pG7F7j'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'jP8GrcH7oGWzVEd97exgi'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: '7HoWF_4CPhFaO48-2LbVb'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_alias" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'C-aXD-nUYzuzbrJqilAeP'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'SyOzUOVa0JAjMndSZPYue'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    migration file "20200811114359_alter-tables-default-values.ts" failed

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    migration failed with error: ALTER TABLE "completion" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); - function uuid_generate_v4() does not exist

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_translation" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'y0EFjhYY21c8QZ2pJRRGL'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'update',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [ 0 ],
      __knexQueryUid: 'EHn7MobE1rs5rSxdVCNsP',
      sql: 'update "test_F_Cotnn4h_diKPMk3l-OU"."knex_migrations_lock" set "is_locked" = ?',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_variant" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'MIObGtztlr_fb0Cu8Pf_c'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'jI9x29raPRF3bIlCua31W'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_template" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'x5jhcG1WMlR1imX0OVKzg'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'CT0AfBezLX_cmt24pvdrN'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'KSV9z8mOfjGahtSZKLG15'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion_required_actions" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'NyYuEiauPLZWvBluU0KEt'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "image" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'HrXPBf32M-l8VyXBHm6ok'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "open_university_registration_link" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: '5jhqpqPsJ9EUr5j3mOBmn'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'uBkWromvQhE27woh_eAbh'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    course beforeEach undefined

      at Object.<anonymous> (tests/Course.test.ts:31:15)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization_translation" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'V3bu-xTKbGiq4ufwQh_aQ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    testcontext after each

      at Object.<anonymous> (tests/__helpers.ts:71:13)

  console.log
    dropping schema

      at Object.after (tests/__helpers.ts:166:15)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "service" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'K78XYHwCLHHcgHdycijKH'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'DROP SCHEMA IF EXISTS "" CASCADE;',
      bindings: [],
      options: {},
      __knexQueryUid: '-RswVpMgMn9T9MgBBESws'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: '6crqCt0G6U9aVAXZ-a8VG'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module_translation" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'iZi8kdGW5PVF32yqOUPhE'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'N5wHsrp_Z4ivbCiGoJldA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: '2HTtiKUC6m7MxH-Ug_ER2'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'aeal5UY3K5eZqJjnVn_ay'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'kEwFOJLoeL07DGe1waSNI'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'aByta0NL_MvvKAsRBUxKg'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'gOqAH6otG8Bh10GwW7BYP'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'e7bDFL2jx0yiMhois6noV'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.warn
    This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason:

      at node_modules/@sentry/node/src/integrations/onunhandledrejection.ts:94:17
      at Object.consoleSandbox (node_modules/@sentry/utils/src/misc.ts:174:18)
      at OnUnhandledRejection.Object.<anonymous>.OnUnhandledRejection._handleRejection (node_modules/@sentry/node/src/integrations/onunhandledrejection.ts:93:7)
      at OnUnhandledRejection.Object.<anonymous>.OnUnhandledRejection.sendUnhandledPromise (node_modules/@sentry/node/src/integrations/onunhandledrejection.ts:76:10)

  console.error
    error: Caught error after test environment was torn down
    
    DROP SCHEMA IF EXISTS "" CASCADE; - zero-length delimited identifier at or near """"
        at Parser.parseErrorMessage (/home/pyykkomi/duuni/mooc.fi/backend/node_modules/pg-protocol/src/parser.ts:357:11)
        at Parser.handlePacket (/home/pyykkomi/duuni/mooc.fi/backend/node_modules/pg-protocol/src/parser.ts:186:21)
        at Parser.parse (/home/pyykkomi/duuni/mooc.fi/backend/node_modules/pg-protocol/src/parser.ts:101:30)
        at Socket.<anonymous> (/home/pyykkomi/duuni/mooc.fi/backend/node_modules/pg-protocol/src/index.ts:7:48)
        at Socket.emit (events.js:315:20)
        at Socket.EventEmitter.emit (domain.js:483:12)
        at addChunk (_stream_readable.js:295:12)
        at readableAddChunk (_stream_readable.js:271:9)
        at Socket.Readable.push (_stream_readable.js:212:10)
        at TCP.onStreamRead (internal/stream_base_commons.js:186:23)

      at node_modules/@sentry/node/src/integrations/onunhandledrejection.ts:96:17
      at Object.consoleSandbox (node_modules/@sentry/utils/src/misc.ts:174:18)
      at OnUnhandledRejection.Object.<anonymous>.OnUnhandledRejection._handleRejection (node_modules/@sentry/node/src/integrations/onunhandledrejection.ts:93:7)
      at OnUnhandledRejection.Object.<anonymous>.OnUnhandledRejection.sendUnhandledPromise (node_modules/@sentry/node/src/integrations/onunhandledrejection.ts:76:10)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'VjYOGwZlzIvFDD_m3OrI7'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'bpfJMjDa0xrwWYWKFkhUi'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'cXvSkK96F3AGb3N0njfON'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'KQ5glb912fO9H6gGN705e'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_alias" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'pxDhGFqCPmoy0H_TMU5bH'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'eaAx0xAZEAlvQPwZExPYE'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_translation" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '0G87Uz3VWW-LrXm30UDbW'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_variant" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'tVeI36fLFKIY95XTgCEPW'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'vAzkJQC6puuOKBsQGOq8K'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_template" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'u_zdHZhGtEOj_nTrTGv4y'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'akCr6_pgbTBWNyGIjYafF'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:36.011Z knex:query ALTER TABLE "exercise" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.011Z knex:bindings [] trx4
2020-11-10T11:44:36.013Z knex:query ALTER TABLE "exercise_completion" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.013Z knex:bindings [] trx4
2020-11-10T11:44:36.014Z knex:query ALTER TABLE "image" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.014Z knex:bindings [] trx4
2020-11-10T11:44:36.015Z knex:query ALTER TABLE "open_university_registration_link" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.015Z knex:bindings [] trx4
2020-11-10T11:44:36.018Z knex:query ALTER TABLE "organization" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.018Z knex:bindings [] trx4
2020-11-10T11:44:36.020Z knex:query ALTER TABLE "organization_translation" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.020Z knex:bindings [] trx4
2020-11-10T11:44:36.022Z knex:query ALTER TABLE "service" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.022Z knex:bindings [] trx4
2020-11-10T11:44:36.024Z knex:query ALTER TABLE "study_module" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.024Z knex:bindings [] trx4
2020-11-10T11:44:36.025Z knex:query ALTER TABLE "study_module_translation" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.025Z knex:bindings [] trx4
2020-11-10T11:44:36.027Z knex:query ALTER TABLE "user" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.027Z knex:bindings [] trx4
2020-11-10T11:44:36.028Z knex:query ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.028Z knex:bindings [] trx4
2020-11-10T11:44:36.029Z knex:query ALTER TABLE "user_course_progress" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.029Z knex:bindings [] trx4
2020-11-10T11:44:36.030Z knex:query ALTER TABLE "user_course_service_progress" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.030Z knex:bindings [] trx4
2020-11-10T11:44:36.032Z knex:query ALTER TABLE "UserCourseSettings" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.032Z knex:bindings [] trx4
2020-11-10T11:44:36.033Z knex:query ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.033Z knex:bindings [] trx4
2020-11-10T11:44:36.035Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.035Z knex:bindings [] trx4
2020-11-10T11:44:36.036Z knex:query ALTER TABLE "verified_user" ALTER COLUMN "created_at" SET NOT NULL; trx4
2020-11-10T11:44:36.036Z knex:bindings [] trx4
2020-11-10T11:44:36.037Z knex:query ALTER TABLE "completion" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.037Z knex:bindings [] trx4
2020-11-10T11:44:36.039Z knex:query ALTER TABLE "completion_registered" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.039Z knex:bindings [] trx4
2020-11-10T11:44:36.040Z knex:query ALTER TABLE "course" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.040Z knex:bindings [] trx4
2020-11-10T11:44:36.041Z knex:query ALTER TABLE "course_alias" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.041Z knex:bindings [] trx4
2020-11-10T11:44:36.042Z knex:query ALTER TABLE "course_organization" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.042Z knex:bindings [] trx4
2020-11-10T11:44:36.043Z knex:query ALTER TABLE "course_translation" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.043Z knex:bindings [] trx4
2020-11-10T11:44:36.044Z knex:query ALTER TABLE "course_variant" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.044Z knex:bindings [] trx4
2020-11-10T11:44:36.045Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.045Z knex:bindings [] trx4
2020-11-10T11:44:36.046Z knex:query ALTER TABLE "email_template" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.047Z knex:bindings [] trx4
2020-11-10T11:44:36.048Z knex:query ALTER TABLE "exercise" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.048Z knex:bindings [] trx4
2020-11-10T11:44:36.049Z knex:query ALTER TABLE "exercise_completion" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.049Z knex:bindings [] trx4
2020-11-10T11:44:36.050Z knex:query ALTER TABLE "image" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.050Z knex:bindings [] trx4
2020-11-10T11:44:36.051Z knex:query ALTER TABLE "open_university_registration_link" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.051Z knex:bindings [] trx4
2020-11-10T11:44:36.052Z knex:query ALTER TABLE "organization" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.052Z knex:bindings [] trx4
2020-11-10T11:44:36.053Z knex:query ALTER TABLE "organization_translation" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.054Z knex:bindings [] trx4
2020-11-10T11:44:36.055Z knex:query ALTER TABLE "service" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.055Z knex:bindings [] trx4
2020-11-10T11:44:36.058Z knex:query ALTER TABLE "study_module" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.058Z knex:bindings [] trx4
2020-11-10T11:44:36.060Z knex:query ALTER TABLE "study_module_translation" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.060Z knex:bindings [] trx4
2020-11-10T11:44:36.061Z knex:query ALTER TABLE "user" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.061Z knex:bindings [] trx4
2020-11-10T11:44:36.062Z knex:query ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.062Z knex:bindings [] trx4
2020-11-10T11:44:36.064Z knex:query ALTER TABLE "user_course_progress" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.064Z knex:bindings [] trx4
2020-11-10T11:44:36.065Z knex:query ALTER TABLE "user_course_service_progress" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.065Z knex:bindings [] trx4
2020-11-10T11:44:36.066Z knex:query ALTER TABLE "UserCourseSettings" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.066Z knex:bindings [] trx4
2020-11-10T11:44:36.067Z knex:query ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.067Z knex:bindings [] trx4
2020-11-10T11:44:36.069Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.069Z knex:bindings [] trx4
2020-11-10T11:44:36.070Z knex:query ALTER TABLE "verified_user" ALTER COLUMN "updated_at" SET NOT NULL; trx4
2020-11-10T11:44:36.070Z knex:bindings [] trx4
2020-11-10T11:44:36.072Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:36.072Z knex:bindings [
  1,
  2020-11-10T11:44:36.071Z,
  '20200811114359_alter-tables-default-values.ts'
] trx4
2020-11-10T11:44:36.073Z knex:query ALTER TABLE "course" ALTER COLUMN "status" DROP DEFAULT; trx4
2020-11-10T11:44:36.073Z knex:bindings [] trx4
2020-11-10T11:44:36.075Z knex:query ALTER TABLE "course" ALTER COLUMN "status" TYPE "CourseStatus" USING "status"::text::"CourseStatus"; trx4
2020-11-10T11:44:36.075Z knex:bindings [] trx4
2020-11-10T11:44:36.085Z knex:query ALTER TABLE "course" ALTER COLUMN "status" SET DEFAULT 'Upcoming'; trx4
2020-11-10T11:44:36.085Z knex:bindings [] trx4
2020-11-10T11:44:36.087Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "role" DROP DEFAULT; trx4
2020-11-10T11:44:36.087Z knex:bindings [] trx4
2020-11-10T11:44:36.090Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "role" TYPE "OrganizationRole" USING "role"::text::"OrganizationRole"; trx4
2020-11-10T11:44:36.090Z knex:bindings [] trx4
2020-11-10T11:44:36.094Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "role" SET DEFAULT 'Student'; trx4
2020-11-10T11:44:36.095Z knex:bindings [] trx4
2020-11-10T11:44:36.097Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:36.097Z knex:bindings [
  1,
  2020-11-10T11:44:36.095Z,
  '20200811120715_alter-tables-convert-to-enums.ts'
] trx4
2020-11-10T11:44:36.100Z knex:query ALTER TABLE "_CourseToService" RENAME TO "_course_to_service"; trx4
2020-11-10T11:44:36.100Z knex:bindings [] trx4
2020-11-10T11:44:36.102Z knex:query ALTER TABLE "_StudyModuleToCourse" RENAME TO "_study_module_to_course"; trx4
2020-11-10T11:44:36.102Z knex:bindings [] trx4
2020-11-10T11:44:36.104Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:36.104Z knex:bindings [
  1,
  2020-11-10T11:44:36.103Z,
  '20200811152243_alter-tables-rename-join-tables.ts'
] trx4
2020-11-10T11:44:36.107Z knex:query ALTER TABLE "user_course_progress" ALTER COLUMN progress TYPE JSON USING "progress"::json; trx4
2020-11-10T11:44:36.107Z knex:bindings [] trx4
2020-11-10T11:44:36.108Z knex:query ALTER TABLE "user_course_service_progress" ALTER COLUMN progress TYPE JSON USING "progress"::json; trx4
2020-11-10T11:44:36.108Z knex:bindings [] trx4
2020-11-10T11:44:36.110Z knex:query ALTER TABLE "UserCourseSettings" ALTER COLUMN other TYPE JSON using "other"::json; trx4
2020-11-10T11:44:36.110Z knex:bindings [] trx4
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'tso5Vn0UDDLCiCanPOELB'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "image" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'wsiQAUd8pEAfFOG6xAd8i'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "open_university_registration_link" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '38OSts0b6CqUtnExuUxzY'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'qMbadfmYQv7Q-2QZi4u87'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization_translation" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '3n_McJv0QgWd75hvdyeSQ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "service" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'CqiqK-RY2bFXGjAQr0pJa'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'DvIreSyZw3IpoXiNIDrXd'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module_translation" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '_3RpHQiB3hjOEeOeOHohc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'fFTNar8k5JLiIU7_dVMkJ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'g2Bux77fng6zplS3dpT3G'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Gew43O1mLYTTCmNeIhXEt'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '6k924Lkf8hqP1n5XuIoDm'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'TjiMt5smR1fabU9KoGpAI'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'YAx3aTksDZXfvltlttprU'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'mmagUa644zfeJPYVHQ2rC'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'JkANfNoX4cL7IwJzM5eOj'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'sj4TtiZ0G8nV7pyO8qqAm'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'kOmqU8CCmpJHtPrWiYjqb'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '0rajSHg1B9xVoNzQHsC-l'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_alias" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ExuUTFHW60IKBDXEjZylE'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'cnsjvSo8M6bwwtjEMTHb3'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_translation" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'sobIM_MOndQS6Lw_8RVEc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_variant" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'hnmK_y7ORQHdEaogFWV4J'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'm7OcuUShYREi7lDacTZT1'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_template" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'tfOrUeghD13mOwIWKxNfs'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'aq09juAo2QnvyYkpwtWpM'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'BQYtJg2e5mt2reGFxWh00'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "image" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'gLo671GN3GFtTGbg7FLOo'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "open_university_registration_link" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'FP9QqI96rML8RzgJOebgn'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'KOSJg3jDEkAsLg_pkce48'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization_translation" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'JYHiUun-4iBMf6ziCNMVl'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "service" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'LyPSRfRaclelTyhIbpiWl'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '-0tWIfi2NjWZtI3YqV2uW'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module_translation" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'lEZJOlAf23jZx-c4c3JXL'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'PuurOmYIFsADDKXCodYwL'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'DZTcjiSP8q7jg4_-Zpi5f'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'XIxD8ctn9ajnaPltE2E3M'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'wnl38bMack-vxlAFJ73Io'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'hXrU0LjlH7HVrkOPOWPsZ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Q7-kwSndcvLC86kDEq3Qo'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ryIZWaDyWnUwg2bDODFzl'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'yMNQKQ9QcN1CBEEg0IPyP'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:36.071Z,
        '20200811114359_alter-tables-default-values.ts'
      ],
      __knexQueryUid: 'J6wDWfpz6dpjpMjTMgO73',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "status" DROP DEFAULT;',
      bindings: [],
      options: {},
      __knexQueryUid: '55uCY55LtoZLcafpf2G6n'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "status" TYPE "CourseStatus" USING "status"::text::"CourseStatus";',
      bindings: [],
      options: {},
      __knexQueryUid: '3-nQpkex48Rsu9amfxTjn'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: `ALTER TABLE "course" ALTER COLUMN "status" SET DEFAULT 'Upcoming';`,
      bindings: [],
      options: {},
      __knexQueryUid: '4DdePYJT3_jgGf0HOO49d'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" ALTER COLUMN "role" DROP DEFAULT;',
      bindings: [],
      options: {},
      __knexQueryUid: 'llnkXr7SxisTdkt7E89AX'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" ALTER COLUMN "role" TYPE "OrganizationRole" USING "role"::text::"OrganizationRole";',
      bindings: [],
      options: {},
      __knexQueryUid: '_d-IT63SSdKbvKYbCyKVK'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: `ALTER TABLE "user_organization" ALTER COLUMN "role" SET DEFAULT 'Student';`,
      bindings: [],
      options: {},
      __knexQueryUid: 'gbx0aF4JcH7Iti6Fios0v'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:36.095Z,
        '20200811120715_alter-tables-convert-to-enums.ts'
      ],
      __knexQueryUid: 'JXOfaXjYsIXmpa3JLkzeb',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "_CourseToService" RENAME TO "_course_to_service";',
      bindings: [],
      options: {},
      __knexQueryUid: 'eIUtxDolIKmb_zShBiqrk'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "_StudyModuleToCourse" RENAME TO "_study_module_to_course";',
      bindings: [],
      options: {},
      __knexQueryUid: '6HF7CxkFZl3Ui8J1nep6B'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:36.103Z,
        '20200811152243_alter-tables-rename-join-tables.ts'
      ],
      __knexQueryUid: 'hTCE-kbji1onzmXu1pc21',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" ALTER COLUMN progress TYPE JSON USING "progress"::json;',
      bindings: [],
      options: {},
      __knexQueryUid: '0hV6jEhvmZmxXyUxIOqLO'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" ALTER COLUMN progress TYPE JSON USING "progress"::json;',
      bindings: [],
      options: {},
      __knexQueryUid: 'A5zXwh1KpVmOT5LF3NIOr'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" ALTER COLUMN other TYPE JSON using "other"::json;',
      bindings: [],
      options: {},
      __knexQueryUid: 'H8K-RJT-DYdnptiIHsGIF'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:36.115Z knex:query ALTER TABLE "UserCourseSettings" RENAME TO "user_course_setting"; trx4
2020-11-10T11:44:36.115Z knex:bindings [] trx4
2020-11-10T11:44:36.117Z knex:query ALTER TABLE "UserAppDatumConfig" RENAME TO "user_app_datum_config"; trx4
2020-11-10T11:44:36.117Z knex:bindings [] trx4
2020-11-10T11:44:36.119Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:36.119Z knex:bindings [
  1,
  2020-11-10T11:44:36.118Z,
  '20200813150438_alter-tables-convert-to-json-rename-camelcase-drop-recreate-view.ts'
] trx4
2020-11-10T11:44:36.121Z knex:query select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema() trx4
2020-11-10T11:44:36.122Z knex:bindings [ 'course', 'upcoming_active_link' ] trx4
2020-11-10T11:44:36.130Z knex:query alter table "course" add column "upcoming_active_link" boolean default '0' trx4
2020-11-10T11:44:36.130Z knex:bindings [] trx4
2020-11-10T11:44:36.133Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:36.133Z knex:bindings [
  1,
  2020-11-10T11:44:36.131Z,
  '20200818134829_alter-table-course-add-upcoming-active-link.ts'
] trx4
2020-11-10T11:44:36.135Z knex:query ALTER TABLE course
    ADD COLUMN IF NOT EXISTS tier INTEGER;
   trx4
2020-11-10T11:44:36.135Z knex:bindings [] trx4
2020-11-10T11:44:36.138Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:36.138Z knex:bindings [
  1,
  2020-11-10T11:44:36.136Z,
  '20200918114920_alter-table-course-add-tier.ts'
] trx4
2020-11-10T11:44:36.140Z knex:query select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema() trx4
2020-11-10T11:44:36.140Z knex:bindings [ 'exercise_completion', 'attempted' ] trx4
2020-11-10T11:44:36.149Z knex:query alter table "exercise_completion" add column "attempted" boolean null default null trx4
2020-11-10T11:44:36.149Z knex:bindings [] trx4
2020-11-10T11:44:36.152Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:36.152Z knex:bindings [
  1,
  2020-11-10T11:44:36.150Z,
  '20200924133928_alter-table-exercise-completion-add-attempted.ts'
] trx4
2020-11-10T11:44:36.154Z knex:query 
    ALTER TABLE user_course_progress 
      ADD COLUMN IF NOT EXISTS extra JSON;  
   trx4
2020-11-10T11:44:36.154Z knex:bindings [] trx4
2020-11-10T11:44:36.157Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:36.157Z knex:bindings [
  1,
  2020-11-10T11:44:36.155Z,
  '20200929115223_alter-table-user-course-progress-extra.ts'
] trx4
2020-11-10T11:44:36.159Z knex:query ALTER TABLE completion
    ADD COLUMN IF NOT EXISTS tier INTEGER;
   trx4
2020-11-10T11:44:36.159Z knex:bindings [] trx4
2020-11-10T11:44:36.161Z knex:query insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx4
2020-11-10T11:44:36.161Z knex:bindings [
  1,
  2020-11-10T11:44:36.160Z,
  '20201026102610_alter-table-completion-add-tier.ts'
] trx4
2020-11-10T11:44:36.162Z knex:query update "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations_lock" set "is_locked" = ? trx4
2020-11-10T11:44:36.162Z knex:bindings [ 0 ] trx4
2020-11-10T11:44:36.163Z knex:query COMMIT; trx4
2020-11-10T11:44:36.163Z knex:bindings undefined trx4
2020-11-10T11:44:36.166Z knex:tx trx2: releasing connection
2020-11-10T11:44:36.166Z knex:client releasing connection to pool: __knexUid1
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" RENAME TO "user_course_setting";',
      bindings: [],
      options: {},
      __knexQueryUid: '7ino3ynYMR5ocJlefLTtZ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserAppDatumConfig" RENAME TO "user_app_datum_config";',
      bindings: [],
      options: {},
      __knexQueryUid: '3sMhidVVXE-jaDQt5DnwX'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:36.118Z,
        '20200813150438_alter-tables-convert-to-json-rename-camelcase-drop-recreate-view.ts'
      ],
      __knexQueryUid: 'LVGvtNnsJR__QOSiaa0tF',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema()',
        bindings: [ 'course', 'upcoming_active_link' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: `alter table "course" add column "upcoming_active_link" boolean default '0'`,
        bindings: []
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:36.131Z,
        '20200818134829_alter-table-course-add-upcoming-active-link.ts'
      ],
      __knexQueryUid: 'Jjo1BTvwCZNc0G0Vu1Fjh',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE course\n    ADD COLUMN IF NOT EXISTS tier INTEGER;\n  ',
      bindings: [],
      options: {},
      __knexQueryUid: 'IxdWfdDyeNqovZLHZrUJK'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:36.136Z,
        '20200918114920_alter-table-course-add-tier.ts'
      ],
      __knexQueryUid: 'qgPOCU-uxVnW4wzYxqNZ0',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema()',
        bindings: [ 'exercise_completion', 'attempted' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'alter table "exercise_completion" add column "attempted" boolean null default null',
        bindings: []
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:36.150Z,
        '20200924133928_alter-table-exercise-completion-add-attempted.ts'
      ],
      __knexQueryUid: 'pAViffvD_MK1GT9XSyUnP',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: '\n' +
        '    ALTER TABLE user_course_progress \n' +
        '      ADD COLUMN IF NOT EXISTS extra JSON;  \n' +
        '  ',
      bindings: [],
      options: {},
      __knexQueryUid: 'UsSjstNLfUHdQ4vrTeITG'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:36.155Z,
        '20200929115223_alter-table-user-course-progress-extra.ts'
      ],
      __knexQueryUid: 'fH5iGAeqHm05kTynDF1pU',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE completion\n    ADD COLUMN IF NOT EXISTS tier INTEGER;\n  ',
      bindings: [],
      options: {},
      __knexQueryUid: 'ZfjHcVJ80Sh-csudlZiqa'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:36.160Z,
        '20201026102610_alter-table-completion-add-tier.ts'
      ],
      __knexQueryUid: 'M7mn6cusGyDRw2C2rAvFm',
      sql: 'insert into "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'update',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [ 0 ],
      __knexQueryUid: 'XWSUZjHO2VHb3M6HmgSpm',
      sql: 'update "test_y6sDYwhImGMFNT-c8ZnZe"."knex_migrations_lock" set "is_locked" = ?',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    creating prisma postgres://postgres:postgres@localhost:5432/testing?schema=test_y6sDYwhImGMFNT-c8ZnZe

      at Object.before (tests/__helpers.ts:154:15)

  console.error
    2020-11-10T11:44:36.180Z prisma-client {
      engineConfig: {
        cwd: '/home/pyykkomi/duuni/mooc.fi/backend/prisma',
        enableDebugLogs: false,
        enableEngineDebugMode: undefined,
        datamodelPath: '/home/pyykkomi/duuni/mooc.fi/backend/node_modules/.prisma/client/schema.prisma',
        prismaPath: undefined,
        engineEndpoint: undefined,
        generator: {
          name: 'client',
          provider: 'prisma-client-js',
          output: '/home/pyykkomi/duuni/mooc.fi/backend/node_modules/@prisma/client',
          binaryTargets: [],
          previewFeatures: [],
          config: {}
        },
        showColors: false,
        logLevel: undefined,
        logQueries: undefined,
        flags: [],
        clientVersion: '2.10.0',
        enableExperimental: [],
        useUds: undefined
      }
    }

      153 |       // Construct a new Prisma Client connected to the generated Postgres schema
      154 |       console.log(`creating prisma ${databaseUrl}`)
    > 155 |       prisma = new PrismaClient({
          |                ^
      156 |         datasources: { db: { url: databaseUrl } },
      157 |       })
      158 |       return {

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at new NewPrismaClient (node_modules/@prisma/client/runtime/index.js:15063:9)
      at Object.before (tests/__helpers.ts:155:16)
      at Object.before (tests/__helpers.ts:88:63)

Tue, 10 Nov 2020 11:44:36 GMT express:application set "x-powered-by" to true
Tue, 10 Nov 2020 11:44:36 GMT express:application set "etag" to 'weak'
Tue, 10 Nov 2020 11:44:36 GMT express:application set "etag fn" to [Function: generateETag]
Tue, 10 Nov 2020 11:44:36 GMT express:application set "env" to 'test'
Tue, 10 Nov 2020 11:44:36 GMT express:application set "query parser" to 'extended'
Tue, 10 Nov 2020 11:44:36 GMT express:application set "query parser fn" to [Function: parseExtendedQueryString]
Tue, 10 Nov 2020 11:44:36 GMT express:application set "subdomain offset" to 2
Tue, 10 Nov 2020 11:44:36 GMT express:application set "trust proxy" to false
Tue, 10 Nov 2020 11:44:36 GMT express:application set "trust proxy fn" to [Function: trustNone]
Tue, 10 Nov 2020 11:44:36 GMT express:application booting in test mode
Tue, 10 Nov 2020 11:44:36 GMT express:application set "view" to [Function: View]
Tue, 10 Nov 2020 11:44:36 GMT express:application set "views" to '/home/pyykkomi/duuni/mooc.fi/backend/views'
Tue, 10 Nov 2020 11:44:36 GMT express:application set "jsonp callback name" to 'callback'
Tue, 10 Nov 2020 11:44:36 GMT express:router use '/' query
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:36 GMT express:router use '/' expressInit
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:36 GMT express:router use '/' corsMiddleware
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:36 GMT express:router:route new '/api/completions/:course'
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/api/completions/:course'
Tue, 10 Nov 2020 11:44:36 GMT express:router:route get '/api/completions/:course'
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:36 GMT express:router:route new '/api/usercoursesettingscount/:course/:language'
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/api/usercoursesettingscount/:course/:language'
Tue, 10 Nov 2020 11:44:36 GMT express:router:route get '/api/usercoursesettingscount/:course/:language'
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:36 GMT express:router:route new '/api/progress/:id'
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/api/progress/:id'
Tue, 10 Nov 2020 11:44:36 GMT express:router:route get '/api/progress/:id'
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:36 GMT express:router:route new '/api/progressv2/:id'
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/api/progressv2/:id'
Tue, 10 Nov 2020 11:44:36 GMT express:router:route get '/api/progressv2/:id'
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:36 GMT express:router:route new '/api/tierprogress/:id'
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/api/tierprogress/:id'
Tue, 10 Nov 2020 11:44:36 GMT express:router:route get '/api/tierprogress/:id'
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:36 GMT express:router use '/' <anonymous>
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:36 GMT express:router use '/.well-known/apollo/server-health' <anonymous>
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/.well-known/apollo/server-health'
Tue, 10 Nov 2020 11:44:36 GMT express:router use '/' corsMiddleware
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:36 GMT express:router use '/' jsonParser
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:36 GMT express:router use '/' <anonymous>
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:36 GMT express:router use '/' <anonymous>
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:36 GMT express:router use '/' router
Tue, 10 Nov 2020 11:44:36 GMT express:router:layer new '/'
2020-11-10T11:44:36.307Z engine { cwd: '/home/pyykkomi/duuni/mooc.fi/backend/prisma' }
2020-11-10T11:44:36.311Z engine {
  dotPrismaPath: '/home/pyykkomi/duuni/mooc.fi/backend/node_modules/.prisma/client/query-engine-debian-openssl-1.1.x'
}
2020-11-10T11:44:36.312Z engine { flags: [ '--enable-raw-queries' ] }
2020-11-10T11:44:36.313Z engine port: 37541
  console.log
    _schemaName test_y6sDYwhImGMFNT-c8ZnZe

      at Object.before (tests/__helpers.ts:89:15)

  console.log
    testcontext before each 2

      at Object.<anonymous> (tests/__helpers.ts:61:13)

  console.error
    2020-11-10T11:44:36.299Z prisma-client Prisma Client call:

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at NewPrismaClient._executeRequest (node_modules/@prisma/client/runtime/index.js:15496:9)
      at node_modules/@prisma/client/runtime/index.js:15431:52
      at NewPrismaClient._request (node_modules/@prisma/client/runtime/index.js:15431:25)

  console.error
    2020-11-10T11:44:36.302Z prisma-client prisma.user.create({
      data: {
        upstream_id: 1,
        administrator: false,
        email: 'e@mail.com',
        first_name: 'first',
        last_name: 'last',
        username: 'user'
      }
    })

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at NewPrismaClient._executeRequest (node_modules/@prisma/client/runtime/index.js:15497:9)
      at node_modules/@prisma/client/runtime/index.js:15431:52
      at NewPrismaClient._request (node_modules/@prisma/client/runtime/index.js:15431:25)

  console.error
    2020-11-10T11:44:36.303Z prisma-client Generated request:

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at NewPrismaClient._executeRequest (node_modules/@prisma/client/runtime/index.js:15503:9)
      at node_modules/@prisma/client/runtime/index.js:15431:52
      at NewPrismaClient._request (node_modules/@prisma/client/runtime/index.js:15431:25)

  console.error
    2020-11-10T11:44:36.305Z prisma-client mutation {
      createOneUser(data: {
        upstream_id: 1
        administrator: false
        email: "e@mail.com"
        first_name: "first"
        last_name: "last"
        username: "user"
      }) {
        administrator
        created_at
        email
        first_name
        id
        last_name
        real_student_number
        research_consent
        student_number
        updated_at
        upstream_id
        username
      }
    }

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at NewPrismaClient._executeRequest (node_modules/@prisma/client/runtime/index.js:15504:9)
      at node_modules/@prisma/client/runtime/index.js:15431:52
      at NewPrismaClient._request (node_modules/@prisma/client/runtime/index.js:15431:25)

  console.error
    2020-11-10T11:44:36.311Z plusX Execution permissions of /home/pyykkomi/duuni/mooc.fi/backend/node_modules/.prisma/client/query-engine-debian-openssl-1.1.x are fine

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at Object.plusX (node_modules/@prisma/client/runtime/index.js:4148:7)
      at NodeEngine3.getPrismaPath (node_modules/@prisma/client/runtime/index.js:9315:16)
      at node_modules/@prisma/client/runtime/index.js:9394:30

2020-11-10T11:44:36.365Z engine stdout {
  timestamp: 'Nov 10 13:44:36.363',
  level: 'INFO',
  fields: { message: 'Starting a postgresql pool with 17 connections.' },
  target: 'quaint::pooled'
}
2020-11-10T11:44:36.394Z engine stdout {
  timestamp: 'Nov 10 13:44:36.393',
  level: 'INFO',
  fields: { message: 'Started http server' },
  target: 'query_engine::server'
}
2020-11-10T11:44:36.403Z engine {
  dotPrismaPath: '/home/pyykkomi/duuni/mooc.fi/backend/node_modules/.prisma/client/query-engine-debian-openssl-1.1.x'
}
2020-11-10T11:44:36.427Z engine Client Version 2.10.0
2020-11-10T11:44:36.427Z engine Engine Version query-engine af1ae11a423edfb5d24092a85be11fa77c5e499c
Tue, 10 Nov 2020 11:44:36 GMT express:router dispatching POST /
Tue, 10 Nov 2020 11:44:36 GMT express:router query  : /
Tue, 10 Nov 2020 11:44:36 GMT express:router expressInit  : /
Tue, 10 Nov 2020 11:44:36 GMT express:router corsMiddleware  : /
Tue, 10 Nov 2020 11:44:36 GMT express:router router  : /
Tue, 10 Nov 2020 11:44:36 GMT express:router dispatching POST /
Tue, 10 Nov 2020 11:44:36 GMT express:router <anonymous>  : /
Tue, 10 Nov 2020 11:44:36 GMT express:router corsMiddleware  : /
Tue, 10 Nov 2020 11:44:36 GMT express:router jsonParser  : /
Tue, 10 Nov 2020 11:44:36 GMT body-parser:json content-type "application/json"
Tue, 10 Nov 2020 11:44:36 GMT body-parser:json content-encoding "identity"
Tue, 10 Nov 2020 11:44:36 GMT body-parser:json read body
Tue, 10 Nov 2020 11:44:36 GMT body-parser:json parse body
Tue, 10 Nov 2020 11:44:36 GMT body-parser:json parse json
Tue, 10 Nov 2020 11:44:36 GMT express:router <anonymous>  : /
Tue, 10 Nov 2020 11:44:36 GMT express:router <anonymous>  : /
  console.error
    2020-11-10T11:44:36.404Z plusX Execution permissions of /home/pyykkomi/duuni/mooc.fi/backend/node_modules/.prisma/client/query-engine-debian-openssl-1.1.x are fine

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at Object.plusX (node_modules/@prisma/client/runtime/index.js:4148:7)
      at NodeEngine3.getPrismaPath (node_modules/@prisma/client/runtime/index.js:9315:16)
      at NodeEngine3.version (node_modules/@prisma/client/runtime/index.js:9694:26)
      at node_modules/@prisma/client/runtime/index.js:9589:35

  console.error
    2020-11-10T11:44:36.478Z prisma-client Prisma Client call:

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at NewPrismaClient._executeRequest (node_modules/@prisma/client/runtime/index.js:15496:9)
      at node_modules/@prisma/client/runtime/index.js:15431:52
      at NewPrismaClient._request (node_modules/@prisma/client/runtime/index.js:15431:25)

  console.error
    2020-11-10T11:44:36.479Z prisma-client prisma.user.upsert({
      where: {
        upstream_id: 1
      },
      create: {
        upstream_id: 1,
        administrator: false,
        email: 'e@mail.com',
        first_name: 'first',
        last_name: 'last',
        username: 'user'
      },
      update: {
        upstream_id: {
          set: 1
        },
        administrator: {
          set: false
        },
        email: {
          set: 'e@mail.com'
        },
        first_name: {
          set: 'first'
        },
        last_name: {
          set: 'last'
        },
        username: {
          set: 'user'
        }
      }
    })

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at NewPrismaClient._executeRequest (node_modules/@prisma/client/runtime/index.js:15497:9)
      at node_modules/@prisma/client/runtime/index.js:15431:52
      at NewPrismaClient._request (node_modules/@prisma/client/runtime/index.js:15431:25)

  console.error
    2020-11-10T11:44:36.481Z prisma-client Generated request:

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at NewPrismaClient._executeRequest (node_modules/@prisma/client/runtime/index.js:15503:9)
      at node_modules/@prisma/client/runtime/index.js:15431:52
      at NewPrismaClient._request (node_modules/@prisma/client/runtime/index.js:15431:25)

  console.error
    2020-11-10T11:44:36.482Z prisma-client mutation {
      upsertOneUser(
        where: {
          upstream_id: 1
        }
        create: {
          upstream_id: 1
          administrator: false
          email: "e@mail.com"
          first_name: "first"
          last_name: "last"
          username: "user"
        }
        update: {
          upstream_id: {
            set: 1
          }
          administrator: {
            set: false
          }
          email: {
            set: "e@mail.com"
          }
          first_name: {
            set: "first"
          }
          last_name: {
            set: "last"
          }
          username: {
            set: "user"
          }
        }
      ) {
        administrator
        created_at
        email
        first_name
        id
        last_name
        real_student_number
        research_consent
        student_number
        updated_at
        upstream_id
        username
      }
    }

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at NewPrismaClient._executeRequest (node_modules/@prisma/client/runtime/index.js:15504:9)
      at node_modules/@prisma/client/runtime/index.js:15431:52
      at NewPrismaClient._request (node_modules/@prisma/client/runtime/index.js:15431:25)

  console.log
    testcontext after each

      at Object.<anonymous> (tests/__helpers.ts:71:13)

  console.log
    dropping schema test_y6sDYwhImGMFNT-c8ZnZe

      at Object.after (tests/__helpers.ts:166:15)

2020-11-10T11:44:36.506Z knex:client acquired connection from pool: __knexUid1
2020-11-10T11:44:36.507Z knex:query DROP SCHEMA IF EXISTS "test_y6sDYwhImGMFNT-c8ZnZe" CASCADE; trx4
2020-11-10T11:44:36.507Z knex:bindings [] trx4
2020-11-10T11:44:36.547Z knex:client releasing connection to pool: __knexUid1
2020-11-10T11:44:36.552Z engine Stopping Prisma engine4
2020-11-10T11:44:36.553Z engine Waiting for start promise
2020-11-10T11:44:36.553Z engine Done waiting for start promise
2020-11-10T11:44:36.573Z knex:client acquired connection from pool: __knexUid5
2020-11-10T11:44:36.574Z knex:query CREATE SCHEMA IF NOT EXISTS "test_Guilmt1fizhMAJDjsS69a"; undefined
2020-11-10T11:44:36.574Z knex:bindings [] undefined
2020-11-10T11:44:36.576Z knex:client releasing connection to pool: __knexUid5
2020-11-10T11:44:36.576Z knex:client acquired connection from pool: __knexUid5
2020-11-10T11:44:36.577Z knex:query SET SEARCH_PATH TO "test_Guilmt1fizhMAJDjsS69a"; undefined
2020-11-10T11:44:36.577Z knex:bindings [] undefined
2020-11-10T11:44:36.578Z knex:client releasing connection to pool: __knexUid5
2020-11-10T11:44:36.578Z knex:client acquired connection from pool: __knexUid5
2020-11-10T11:44:36.580Z knex:query CREATE EXTENSION IF NOT EXISTS "uuid-ossp" SCHEMA "test_Guilmt1fizhMAJDjsS69a"; undefined
2020-11-10T11:44:36.580Z knex:bindings [] undefined
2020-11-10T11:44:36.584Z knex:client releasing connection to pool: __knexUid5
2020-11-10T11:44:36.586Z knex:client acquired connection from pool: __knexUid5
2020-11-10T11:44:36.588Z knex:query select * from information_schema.tables where table_name = ? and table_schema = ? undefined
2020-11-10T11:44:36.588Z knex:bindings [ 'knex_migrations', 'test_Guilmt1fizhMAJDjsS69a' ] undefined
2020-11-10T11:44:36.593Z knex:client releasing connection to pool: __knexUid5
2020-11-10T11:44:36.594Z knex:client acquired connection from pool: __knexUid5
2020-11-10T11:44:36.596Z knex:query create table "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("id" serial primary key, "name" varchar(255), "batch" integer, "migration_time" timestamptz) undefined
2020-11-10T11:44:36.596Z knex:bindings [] undefined
2020-11-10T11:44:36.602Z knex:client releasing connection to pool: __knexUid5
2020-11-10T11:44:36.603Z knex:client acquired connection from pool: __knexUid5
2020-11-10T11:44:36.605Z knex:query select * from information_schema.tables where table_name = ? and table_schema = ? undefined
2020-11-10T11:44:36.605Z knex:bindings [ 'knex_migrations_lock', 'test_Guilmt1fizhMAJDjsS69a' ] undefined
  console.log
    {
      method: 'raw',
      sql: 'DROP SCHEMA IF EXISTS "test_y6sDYwhImGMFNT-c8ZnZe" CASCADE;',
      bindings: [],
      options: {},
      __knexQueryUid: 'H4KiEKWWI13F4guYKiwF0'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    creating knex postgres://postgres:postgres@localhost:5432/testing?schema=test_Guilmt1fizhMAJDjsS69a

      at Object.before (tests/__helpers.ts:134:15)

  console.log
    running migrations test_Guilmt1fizhMAJDjsS69a

      at Object.before (tests/__helpers.ts:141:15)

  console.log
    {
      method: 'raw',
      sql: 'CREATE SCHEMA IF NOT EXISTS "test_Guilmt1fizhMAJDjsS69a";',
      bindings: [],
      options: {},
      __knexQueryUid: 'qxsOPkQNHcfL3_mOWFCLC'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'SET SEARCH_PATH TO "test_Guilmt1fizhMAJDjsS69a";',
      bindings: [],
      options: {},
      __knexQueryUid: '5TNEe1mfvVFMY9QEHHZto'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp" SCHEMA "test_Guilmt1fizhMAJDjsS69a";',
      bindings: [],
      options: {},
      __knexQueryUid: '72jcK0WPqdIMneEdKB21n'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.tables where table_name = ? and table_schema = ?',
        bindings: [ 'knex_migrations', 'test_Guilmt1fizhMAJDjsS69a' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    [
      {
        sql: 'create table "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("id" serial primary key, "name" varchar(255), "batch" integer, "migration_time" timestamptz)',
        bindings: []
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    [
      {
        sql: 'select * from information_schema.tables where table_name = ? and table_schema = ?',
        bindings: [ 'knex_migrations_lock', 'test_Guilmt1fizhMAJDjsS69a' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

2020-11-10T11:44:36.607Z knex:client releasing connection to pool: __knexUid5
2020-11-10T11:44:36.608Z knex:client acquired connection from pool: __knexUid5
2020-11-10T11:44:36.610Z knex:query create table "test_Guilmt1fizhMAJDjsS69a"."knex_migrations_lock" ("index" serial primary key, "is_locked" integer) undefined
2020-11-10T11:44:36.610Z knex:bindings [] undefined
2020-11-10T11:44:36.615Z knex:client releasing connection to pool: __knexUid5
2020-11-10T11:44:36.615Z knex:client acquired connection from pool: __knexUid5
2020-11-10T11:44:36.617Z knex:query select * from "test_Guilmt1fizhMAJDjsS69a"."knex_migrations_lock" undefined
2020-11-10T11:44:36.617Z knex:bindings [] undefined
2020-11-10T11:44:36.618Z knex:client releasing connection to pool: __knexUid5
2020-11-10T11:44:36.618Z knex:client acquired connection from pool: __knexUid5
2020-11-10T11:44:36.620Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations_lock" ("is_locked") values (?) undefined
2020-11-10T11:44:36.620Z knex:bindings [ 0 ] undefined
2020-11-10T11:44:36.622Z knex:client releasing connection to pool: __knexUid5
2020-11-10T11:44:36.623Z knex:client acquired connection from pool: __knexUid5
2020-11-10T11:44:36.624Z knex:query select "name" from "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" order by "id" asc undefined
2020-11-10T11:44:36.624Z knex:bindings [] undefined
2020-11-10T11:44:36.626Z knex:client releasing connection to pool: __knexUid5
2020-11-10T11:44:36.627Z knex:tx trx6: Starting top level transaction
2020-11-10T11:44:36.627Z knex:client acquired connection from pool: __knexUid5
2020-11-10T11:44:36.627Z knex:query BEGIN; trx6
2020-11-10T11:44:36.627Z knex:bindings undefined trx6
2020-11-10T11:44:36.630Z knex:query update "test_Guilmt1fizhMAJDjsS69a"."knex_migrations_lock" set "is_locked" = ? where "is_locked" = ? trx6
2020-11-10T11:44:36.630Z knex:bindings [ 1, 0 ] trx6
2020-11-10T11:44:36.632Z knex:query select * from information_schema.tables where table_name = ? and table_schema = ? trx6
2020-11-10T11:44:36.632Z knex:bindings [ 'knex_migrations', 'test_Guilmt1fizhMAJDjsS69a' ] trx6
2020-11-10T11:44:36.637Z knex:query select * from information_schema.tables where table_name = ? and table_schema = ? trx6
2020-11-10T11:44:36.637Z knex:bindings [ 'knex_migrations_lock', 'test_Guilmt1fizhMAJDjsS69a' ] trx6
2020-11-10T11:44:36.641Z knex:query select * from "test_Guilmt1fizhMAJDjsS69a"."knex_migrations_lock" trx6
2020-11-10T11:44:36.641Z knex:bindings [] trx6
2020-11-10T11:44:36.644Z knex:query select "name" from "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" order by "id" asc trx6
2020-11-10T11:44:36.644Z knex:bindings [] trx6
2020-11-10T11:44:36.647Z knex:query select max("batch") as "max_batch" from "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" trx6
2020-11-10T11:44:36.647Z knex:bindings [] trx6
2020-11-10T11:44:36.650Z knex:query CREATE TYPE course_status AS ENUM (
    'Active',
    'Ended',
    'Upcoming'
  ); trx6
2020-11-10T11:44:36.650Z knex:bindings [] trx6
2020-11-10T11:44:36.658Z knex:query CREATE TYPE organization_role AS ENUM (
    'Teacher',
    'Student',
    'OrganizationAdmin'
  ); trx6
2020-11-10T11:44:36.658Z knex:bindings [] trx6
2020-11-10T11:44:36.660Z knex:query CREATE TABLE IF NOT EXISTS "UserAppDatumConfig" (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    name text,
    "timestamp" timestamp(3) without time zone
  ); trx6
2020-11-10T11:44:36.660Z knex:bindings [] trx6
2020-11-10T11:44:36.666Z knex:query CREATE TABLE IF NOT EXISTS "UserCourseSettings" (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    language text,
    country text,
    research boolean,
    marketing boolean,
    course_variant text,
    other text,
    "user" uuid,
    course uuid
  ); trx6
2020-11-10T11:44:36.666Z knex:bindings [] trx6
2020-11-10T11:44:36.671Z knex:query CREATE TABLE IF NOT EXISTS "_CourseToService" (
    "A" uuid NOT NULL,
    "B" uuid NOT NULL
  ); trx6
2020-11-10T11:44:36.671Z knex:bindings [] trx6
2020-11-10T11:44:36.674Z knex:query CREATE TABLE IF NOT EXISTS "_StudyModuleToCourse" (
    "A" uuid NOT NULL,
    "B" uuid NOT NULL
  ); trx6
2020-11-10T11:44:36.674Z knex:bindings [] trx6
2020-11-10T11:44:36.677Z knex:query CREATE TABLE IF NOT EXISTS completion (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    user_upstream_id integer,
    email text NOT NULL,
    student_number text,
    completion_language text,
    grade text,
    certificate_id text,
    course uuid,
    "user" uuid,
    eligible_for_ects boolean DEFAULT true
  ); trx6
2020-11-10T11:44:36.677Z knex:bindings [] trx6
2020-11-10T11:44:36.682Z knex:query CREATE TABLE IF NOT EXISTS completion_registered (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    real_student_number text NOT NULL,
    "user" uuid,
    completion uuid,
    course uuid,
    organization uuid
  ); trx6
2020-11-10T11:44:36.683Z knex:bindings [] trx6
2020-11-10T11:44:36.688Z knex:query CREATE TABLE IF NOT EXISTS course (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    teacher_in_charge_name text NOT NULL,
    teacher_in_charge_email text NOT NULL,
    support_email text,
    start_date text NOT NULL,
    end_date text,
    name text NOT NULL,
    slug text NOT NULL,
    ects text,
    promote boolean,
    status course_status DEFAULT 'Upcoming'::course_status,
    start_point boolean,
    hidden boolean,
    study_module_start_point boolean,
    "order" integer,
    study_module_order integer,
    automatic_completions boolean DEFAULT false,
    points_needed integer,
    exercise_completions_needed integer,
    has_certificate boolean DEFAULT false,
    owner_organization uuid,
    completion_email uuid,
    inherit_settings_from uuid,
    completions_handled_by uuid,
    photo uuid,
    automatic_completions_eligible_for_ects boolean DEFAULT true
  ); trx6
2020-11-10T11:44:36.688Z knex:bindings [] trx6
2020-11-10T11:44:36.695Z knex:query CREATE TABLE IF NOT EXISTS course_alias (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    course_code text NOT NULL,
    course uuid
  ); trx6
2020-11-10T11:44:36.695Z knex:bindings [] trx6
2020-11-10T11:44:36.700Z knex:query CREATE TABLE IF NOT EXISTS course_organization (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    creator boolean,
    course uuid,
    organization uuid
  ); trx6
2020-11-10T11:44:36.700Z knex:bindings [] trx6
2020-11-10T11:44:36.705Z knex:query CREATE TABLE IF NOT EXISTS course_translation (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    name text NOT NULL,
    language text NOT NULL,
    description text NOT NULL,
    link text,
    course uuid
  ); trx6
2020-11-10T11:44:36.705Z knex:bindings [] trx6
  console.log
    [
      {
        sql: 'create table "test_Guilmt1fizhMAJDjsS69a"."knex_migrations_lock" ("index" serial primary key, "is_locked" integer)',
        bindings: []
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    {
      method: 'select',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [],
      __knexQueryUid: '34XDDOAk063naxQpYq2gS',
      sql: 'select * from "test_Guilmt1fizhMAJDjsS69a"."knex_migrations_lock"'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [ 0 ],
      __knexQueryUid: 'lZAtZTebhTkrU_d2Lm41f',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations_lock" ("is_locked") values (?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    {
      method: 'select',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [],
      __knexQueryUid: 'SXUJSe3-5n5h9pCgu5v_t',
      sql: 'select "name" from "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" order by "id" asc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at async Promise.all (index 1)

  console.log
    {
      method: 'update',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [ 1, 0 ],
      __knexQueryUid: 'eo-B2lb9SFpBEZb7FQJrs',
      sql: 'update "test_Guilmt1fizhMAJDjsS69a"."knex_migrations_lock" set "is_locked" = ? where "is_locked" = ?',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.tables where table_name = ? and table_schema = ?',
        bindings: [ 'knex_migrations', 'test_Guilmt1fizhMAJDjsS69a' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.tables where table_name = ? and table_schema = ?',
        bindings: [ 'knex_migrations_lock', 'test_Guilmt1fizhMAJDjsS69a' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'select',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [],
      __knexQueryUid: 'C_FmIow-q0KIZOumSAhbU',
      sql: 'select * from "test_Guilmt1fizhMAJDjsS69a"."knex_migrations_lock"'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'select',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [],
      __knexQueryUid: 'NmM9egZWU6O6bmf158D8p',
      sql: 'select "name" from "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" order by "id" asc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'select',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [],
      __knexQueryUid: 'gxbUqVz8aCnFZWPezvnxf',
      sql: 'select max("batch") as "max_batch" from "test_Guilmt1fizhMAJDjsS69a"."knex_migrations"'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TYPE course_status AS ENUM (\n' +
        "    'Active',\n" +
        "    'Ended',\n" +
        "    'Upcoming'\n" +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'kfBtFMszSg6oXq_z8GK0X'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TYPE organization_role AS ENUM (\n' +
        "    'Teacher',\n" +
        "    'Student',\n" +
        "    'OrganizationAdmin'\n" +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'U8yzlsw677UnJUskSxUZ8'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS "UserAppDatumConfig" (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    name text,\n' +
        '    "timestamp" timestamp(3) without time zone\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '1DiXl4WabIXqa-cB0-Gfn'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS "UserCourseSettings" (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    language text,\n' +
        '    country text,\n' +
        '    research boolean,\n' +
        '    marketing boolean,\n' +
        '    course_variant text,\n' +
        '    other text,\n' +
        '    "user" uuid,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'oRl1i_QzhoDJCgDprKxQz'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS "_CourseToService" (\n' +
        '    "A" uuid NOT NULL,\n' +
        '    "B" uuid NOT NULL\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'ikyRBFWKw6caVjkaNgL3S'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS "_StudyModuleToCourse" (\n' +
        '    "A" uuid NOT NULL,\n' +
        '    "B" uuid NOT NULL\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'Hzqr-OuIklpIGcOEUgERd'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS completion (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    user_upstream_id integer,\n' +
        '    email text NOT NULL,\n' +
        '    student_number text,\n' +
        '    completion_language text,\n' +
        '    grade text,\n' +
        '    certificate_id text,\n' +
        '    course uuid,\n' +
        '    "user" uuid,\n' +
        '    eligible_for_ects boolean DEFAULT true\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '8P2gTckDYZ0mWQUTTDAZO'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS completion_registered (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    real_student_number text NOT NULL,\n' +
        '    "user" uuid,\n' +
        '    completion uuid,\n' +
        '    course uuid,\n' +
        '    organization uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'qqD2QzcA4SqTI_suCaBm6'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS course (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    teacher_in_charge_name text NOT NULL,\n' +
        '    teacher_in_charge_email text NOT NULL,\n' +
        '    support_email text,\n' +
        '    start_date text NOT NULL,\n' +
        '    end_date text,\n' +
        '    name text NOT NULL,\n' +
        '    slug text NOT NULL,\n' +
        '    ects text,\n' +
        '    promote boolean,\n' +
        "    status course_status DEFAULT 'Upcoming'::course_status,\n" +
        '    start_point boolean,\n' +
        '    hidden boolean,\n' +
        '    study_module_start_point boolean,\n' +
        '    "order" integer,\n' +
        '    study_module_order integer,\n' +
        '    automatic_completions boolean DEFAULT false,\n' +
        '    points_needed integer,\n' +
        '    exercise_completions_needed integer,\n' +
        '    has_certificate boolean DEFAULT false,\n' +
        '    owner_organization uuid,\n' +
        '    completion_email uuid,\n' +
        '    inherit_settings_from uuid,\n' +
        '    completions_handled_by uuid,\n' +
        '    photo uuid,\n' +
        '    automatic_completions_eligible_for_ects boolean DEFAULT true\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'XByuXaO8Pwp1ksm2QwWAU'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS course_alias (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    course_code text NOT NULL,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'sVnPGrQ7PhSU2TcBHqpPl'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS course_organization (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    creator boolean,\n' +
        '    course uuid,\n' +
        '    organization uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'OWLfQnMU2h8VAjWBkjyfO'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS course_translation (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    name text NOT NULL,\n' +
        '    language text NOT NULL,\n' +
        '    description text NOT NULL,\n' +
        '    link text,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '_Smi83ZCDmJTVsp7Rfer2'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:36.711Z knex:query CREATE TABLE IF NOT EXISTS course_variant (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    slug text NOT NULL,
    description text,
    course uuid
  ); trx6
2020-11-10T11:44:36.711Z knex:bindings [] trx6
2020-11-10T11:44:36.716Z knex:query CREATE TABLE IF NOT EXISTS email_delivery (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    sent boolean DEFAULT false NOT NULL,
    error boolean DEFAULT false NOT NULL,
    error_message text,
    "user" uuid,
    email_template uuid
  ); trx6
2020-11-10T11:44:36.716Z knex:bindings [] trx6
2020-11-10T11:44:36.722Z knex:query CREATE TABLE IF NOT EXISTS email_template (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    name text,
    txt_body text,
    html_body text,
    title text
  ); trx6
2020-11-10T11:44:36.722Z knex:bindings [] trx6
2020-11-10T11:44:36.727Z knex:query CREATE TABLE IF NOT EXISTS exercise (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    custom_id text NOT NULL,
    name text,
    part integer,
    section integer,
    max_points integer,
    "timestamp" timestamp(3) without time zone,
    deleted boolean DEFAULT false,
    service uuid,
    course uuid
  ); trx6
2020-11-10T11:44:36.727Z knex:bindings [] trx6
2020-11-10T11:44:36.733Z knex:query CREATE TABLE IF NOT EXISTS exercise_completion (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    n_points numeric(65,30),
    "timestamp" timestamp(3) without time zone NOT NULL,
    completed boolean DEFAULT false,
    "user" uuid,
    exercise uuid
  ); trx6
2020-11-10T11:44:36.733Z knex:bindings [] trx6
2020-11-10T11:44:36.738Z knex:query CREATE TABLE IF NOT EXISTS exercise_completion_required_actions (
    id uuid NOT NULL,
    value text NOT NULL,
    exercise_completion uuid
  ); trx6
2020-11-10T11:44:36.738Z knex:bindings [] trx6
2020-11-10T11:44:36.742Z knex:query CREATE TABLE IF NOT EXISTS image (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    name text,
    original text NOT NULL,
    original_mimetype text NOT NULL,
    uncompressed text NOT NULL,
    uncompressed_mimetype text NOT NULL,
    compressed text,
    compressed_mimetype text,
    encoding text,
    "default" boolean
  ); trx6
2020-11-10T11:44:36.743Z knex:bindings [] trx6
2020-11-10T11:44:36.747Z knex:query CREATE TABLE IF NOT EXISTS open_university_registration_link (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    course_code text NOT NULL,
    language text NOT NULL,
    link text,
    start_date timestamp(3) without time zone,
    stop_date timestamp(3) without time zone,
    course uuid
  ); trx6
2020-11-10T11:44:36.747Z knex:bindings [] trx6
2020-11-10T11:44:36.755Z knex:query CREATE TABLE IF NOT EXISTS organization (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    slug text NOT NULL,
    verified_at timestamp(3) without time zone,
    verified boolean,
    disabled boolean,
    hidden boolean,
    tmc_created_at timestamp(3) without time zone,
    tmc_updated_at timestamp(3) without time zone,
    logo_file_name text,
    logo_content_type text,
    logo_file_size integer,
    logo_updated_at timestamp(3) without time zone,
    phone text,
    contact_information text,
    email text,
    website text,
    pinned boolean,
    secret_key text NOT NULL,
    creator uuid
  ); trx6
2020-11-10T11:44:36.755Z knex:bindings [] trx6
2020-11-10T11:44:36.761Z knex:query CREATE TABLE IF NOT EXISTS organization_translation (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    language text NOT NULL,
    name text NOT NULL,
    disabled_reason text,
    information text,
    organization uuid
  ); trx6
2020-11-10T11:44:36.761Z knex:bindings [] trx6
2020-11-10T11:44:36.767Z knex:query CREATE TABLE IF NOT EXISTS service (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    url text NOT NULL,
    name text NOT NULL
  ); trx6
2020-11-10T11:44:36.767Z knex:bindings [] trx6
2020-11-10T11:44:36.772Z knex:query CREATE TABLE IF NOT EXISTS study_module (
    id uuid NOT NULL,
    slug text NOT NULL,
    name text NOT NULL,
    image text,
    "order" integer,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone
  ); trx6
2020-11-10T11:44:36.772Z knex:bindings [] trx6
2020-11-10T11:44:36.777Z knex:query CREATE TABLE IF NOT EXISTS study_module_translation (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    name text NOT NULL,
    language text NOT NULL,
    description text NOT NULL,
    study_module uuid
  ); trx6
2020-11-10T11:44:36.778Z knex:bindings [] trx6
2020-11-10T11:44:36.783Z knex:query CREATE TABLE IF NOT EXISTS "user" (
    id uuid NOT NULL,
    upstream_id integer NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    first_name text,
    last_name text,
    username text NOT NULL,
    email text NOT NULL,
    administrator boolean NOT NULL,
    student_number text,
    real_student_number text,
    research_consent boolean
  ); trx6
2020-11-10T11:44:36.783Z knex:bindings [] trx6
2020-11-10T11:44:36.789Z knex:query CREATE TABLE IF NOT EXISTS user_course_progress (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    progress json NOT NULL,
    max_points numeric(65,30),
    n_points numeric(65,30),
    "user" uuid,
    course uuid
  ); trx6
2020-11-10T11:44:36.789Z knex:bindings [] trx6
2020-11-10T11:44:36.794Z knex:query CREATE TABLE IF NOT EXISTS user_course_service_progress (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    progress json NOT NULL,
    "timestamp" timestamp(3) without time zone,
    service uuid,
    "user" uuid,
    course uuid,
    user_course_progress uuid
  ); trx6
2020-11-10T11:44:36.794Z knex:bindings [] trx6
2020-11-10T11:44:36.799Z knex:query CREATE TABLE IF NOT EXISTS user_course_settings_visibility (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    language text NOT NULL,
    course uuid
  ); trx6
2020-11-10T11:44:36.799Z knex:bindings [] trx6
2020-11-10T11:44:36.804Z knex:query CREATE TABLE IF NOT EXISTS user_organization (
    id uuid NOT NULL,
    role organization_role DEFAULT 'Student'::organization_role,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    organization uuid,
    "user" uuid
  ); trx6
2020-11-10T11:44:36.804Z knex:bindings [] trx6
2020-11-10T11:44:36.808Z knex:query CREATE TABLE IF NOT EXISTS verified_user (
    id uuid NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp(3) without time zone,
    display_name text,
    personal_unique_code text NOT NULL,
    organization uuid,
    "user" uuid
  ); trx6
2020-11-10T11:44:36.808Z knex:bindings [] trx6
2020-11-10T11:44:36.812Z knex:tx trx7: Starting nested transaction
  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS course_variant (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    slug text NOT NULL,\n' +
        '    description text,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'QPtkq9314Tf-OiV47EYB0'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS email_delivery (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    sent boolean DEFAULT false NOT NULL,\n' +
        '    error boolean DEFAULT false NOT NULL,\n' +
        '    error_message text,\n' +
        '    "user" uuid,\n' +
        '    email_template uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '-sUtPMhXD3GYoUVjIwuUz'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS email_template (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    name text,\n' +
        '    txt_body text,\n' +
        '    html_body text,\n' +
        '    title text\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'KwfEq9PiENx-Xl3rwWM2R'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS exercise (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    custom_id text NOT NULL,\n' +
        '    name text,\n' +
        '    part integer,\n' +
        '    section integer,\n' +
        '    max_points integer,\n' +
        '    "timestamp" timestamp(3) without time zone,\n' +
        '    deleted boolean DEFAULT false,\n' +
        '    service uuid,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'JQuCx7oBcOpvfqAoweDDg'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS exercise_completion (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    n_points numeric(65,30),\n' +
        '    "timestamp" timestamp(3) without time zone NOT NULL,\n' +
        '    completed boolean DEFAULT false,\n' +
        '    "user" uuid,\n' +
        '    exercise uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'noXkDjP_vI4zEKEshxRc1'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS exercise_completion_required_actions (\n' +
        '    id uuid NOT NULL,\n' +
        '    value text NOT NULL,\n' +
        '    exercise_completion uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'vNVx7tXdoJV-3bdSwDanD'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS image (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    name text,\n' +
        '    original text NOT NULL,\n' +
        '    original_mimetype text NOT NULL,\n' +
        '    uncompressed text NOT NULL,\n' +
        '    uncompressed_mimetype text NOT NULL,\n' +
        '    compressed text,\n' +
        '    compressed_mimetype text,\n' +
        '    encoding text,\n' +
        '    "default" boolean\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'TURCAsSeT3JNY30lv3hW_'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS open_university_registration_link (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    course_code text NOT NULL,\n' +
        '    language text NOT NULL,\n' +
        '    link text,\n' +
        '    start_date timestamp(3) without time zone,\n' +
        '    stop_date timestamp(3) without time zone,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'LFAKUphZlWhQRO9Y1DlLo'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS organization (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    slug text NOT NULL,\n' +
        '    verified_at timestamp(3) without time zone,\n' +
        '    verified boolean,\n' +
        '    disabled boolean,\n' +
        '    hidden boolean,\n' +
        '    tmc_created_at timestamp(3) without time zone,\n' +
        '    tmc_updated_at timestamp(3) without time zone,\n' +
        '    logo_file_name text,\n' +
        '    logo_content_type text,\n' +
        '    logo_file_size integer,\n' +
        '    logo_updated_at timestamp(3) without time zone,\n' +
        '    phone text,\n' +
        '    contact_information text,\n' +
        '    email text,\n' +
        '    website text,\n' +
        '    pinned boolean,\n' +
        '    secret_key text NOT NULL,\n' +
        '    creator uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'XWu3VYXzxX49lPRlMXOeR'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS organization_translation (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    language text NOT NULL,\n' +
        '    name text NOT NULL,\n' +
        '    disabled_reason text,\n' +
        '    information text,\n' +
        '    organization uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'SBp2D2Nh9eE8CAWVvOwdw'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS service (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    url text NOT NULL,\n' +
        '    name text NOT NULL\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: '3SrhAq0-WH74qPQiru8Ic'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS study_module (\n' +
        '    id uuid NOT NULL,\n' +
        '    slug text NOT NULL,\n' +
        '    name text NOT NULL,\n' +
        '    image text,\n' +
        '    "order" integer,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'v35ljCNkt-7uQ157ClRpc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS study_module_translation (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    name text NOT NULL,\n' +
        '    language text NOT NULL,\n' +
        '    description text NOT NULL,\n' +
        '    study_module uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'aP_H-BzvOo_U39ioPiYwJ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS "user" (\n' +
        '    id uuid NOT NULL,\n' +
        '    upstream_id integer NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    first_name text,\n' +
        '    last_name text,\n' +
        '    username text NOT NULL,\n' +
        '    email text NOT NULL,\n' +
        '    administrator boolean NOT NULL,\n' +
        '    student_number text,\n' +
        '    real_student_number text,\n' +
        '    research_consent boolean\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'K1V61ci1IYJbrJGYw8WC2'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS user_course_progress (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    progress json NOT NULL,\n' +
        '    max_points numeric(65,30),\n' +
        '    n_points numeric(65,30),\n' +
        '    "user" uuid,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'ZSqouRwb-0Ip_p-57hdfj'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS user_course_service_progress (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    progress json NOT NULL,\n' +
        '    "timestamp" timestamp(3) without time zone,\n' +
        '    service uuid,\n' +
        '    "user" uuid,\n' +
        '    course uuid,\n' +
        '    user_course_progress uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'FFWZdWt2ZbbxbgtVyvUuG'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS user_course_settings_visibility (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    language text NOT NULL,\n' +
        '    course uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'i80Cyv_z0N489xFJHhzTh'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS user_organization (\n' +
        '    id uuid NOT NULL,\n' +
        "    role organization_role DEFAULT 'Student'::organization_role,\n" +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    organization uuid,\n' +
        '    "user" uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'WEzE_d_AobhtzFVtZd-Tp'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE TABLE IF NOT EXISTS verified_user (\n' +
        '    id uuid NOT NULL,\n' +
        '    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP,\n' +
        '    updated_at timestamp(3) without time zone,\n' +
        '    display_name text,\n' +
        '    personal_unique_code text NOT NULL,\n' +
        '    organization uuid,\n' +
        '    "user" uuid\n' +
        '  );',
      bindings: [],
      options: {},
      __knexQueryUid: 'VPlpgz47d2BDXlPVsPEbo'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:36.812Z knex:query SAVEPOINT trx7; trx7
2020-11-10T11:44:36.812Z knex:bindings undefined trx7
2020-11-10T11:44:36.814Z knex:query ALTER TABLE ONLY "UserAppDatumConfig" 
        ADD CONSTRAINT "UserAppDatumConfig_pkey" PRIMARY KEY (id); trx7
2020-11-10T11:44:36.815Z knex:bindings [] trx7
2020-11-10T11:44:36.819Z knex:query ALTER TABLE ONLY "UserCourseSettings"
        ADD CONSTRAINT "UserCourseSettings_pkey" PRIMARY KEY (id); trx7
2020-11-10T11:44:36.819Z knex:bindings [] trx7
2020-11-10T11:44:36.823Z knex:query ALTER TABLE ONLY completion
        ADD CONSTRAINT completion_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.823Z knex:bindings [] trx7
2020-11-10T11:44:36.828Z knex:query ALTER TABLE ONLY completion_registered
        ADD CONSTRAINT completion_registered_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.828Z knex:bindings [] trx7
2020-11-10T11:44:36.832Z knex:query ALTER TABLE ONLY course_alias
        ADD CONSTRAINT course_alias_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.832Z knex:bindings [] trx7
2020-11-10T11:44:36.836Z knex:query ALTER TABLE ONLY course_organization
        ADD CONSTRAINT course_organization_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.836Z knex:bindings [] trx7
2020-11-10T11:44:36.841Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.841Z knex:bindings [] trx7
2020-11-10T11:44:36.845Z knex:query ALTER TABLE ONLY course_translation
        ADD CONSTRAINT course_translation_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.845Z knex:bindings [] trx7
2020-11-10T11:44:36.850Z knex:query ALTER TABLE ONLY course_variant
        ADD CONSTRAINT course_variant_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.850Z knex:bindings [] trx7
2020-11-10T11:44:36.855Z knex:query ALTER TABLE ONLY email_template
        ADD CONSTRAINT email_template_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.855Z knex:bindings [] trx7
2020-11-10T11:44:36.860Z knex:query ALTER TABLE ONLY exercise_completion
        ADD CONSTRAINT exercise_completion_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.860Z knex:bindings [] trx7
2020-11-10T11:44:36.864Z knex:query ALTER TABLE ONLY exercise_completion_required_actions
        ADD CONSTRAINT exercise_completion_required_actions_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.864Z knex:bindings [] trx7
2020-11-10T11:44:36.870Z knex:query ALTER TABLE ONLY exercise
        ADD CONSTRAINT exercise_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.870Z knex:bindings [] trx7
2020-11-10T11:44:36.874Z knex:query ALTER TABLE ONLY image
        ADD CONSTRAINT image_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.874Z knex:bindings [] trx7
2020-11-10T11:44:36.878Z knex:query ALTER TABLE ONLY open_university_registration_link
        ADD CONSTRAINT open_university_registration_link_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.878Z knex:bindings [] trx7
2020-11-10T11:44:36.882Z knex:query ALTER TABLE ONLY organization
        ADD CONSTRAINT organization_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.882Z knex:bindings [] trx7
2020-11-10T11:44:36.886Z knex:query ALTER TABLE ONLY organization_translation
        ADD CONSTRAINT organization_translation_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.886Z knex:bindings [] trx7
2020-11-10T11:44:36.891Z knex:query ALTER TABLE ONLY service
        ADD CONSTRAINT service_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.891Z knex:bindings [] trx7
2020-11-10T11:44:36.896Z knex:query ALTER TABLE ONLY study_module
        ADD CONSTRAINT study_module_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.896Z knex:bindings [] trx7
2020-11-10T11:44:36.900Z knex:query ALTER TABLE ONLY study_module_translation
        ADD CONSTRAINT study_module_translation_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.901Z knex:bindings [] trx7
2020-11-10T11:44:36.905Z knex:query ALTER TABLE ONLY user_course_progress
        ADD CONSTRAINT user_course_progress_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.905Z knex:bindings [] trx7
2020-11-10T11:44:36.909Z knex:query ALTER TABLE ONLY user_course_service_progress
        ADD CONSTRAINT user_course_service_progress_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.909Z knex:bindings [] trx7
2020-11-10T11:44:36.913Z knex:query ALTER TABLE ONLY user_course_settings_visibility
        ADD CONSTRAINT user_course_settings_visibility_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.913Z knex:bindings [] trx7
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "UserAppDatumConfig" \n' +
        '        ADD CONSTRAINT "UserAppDatumConfig_pkey" PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'hgr54lnazmBgY3Rpwrb2x'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "UserCourseSettings"\n' +
        '        ADD CONSTRAINT "UserCourseSettings_pkey" PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'sB16hOxoCdDpD_qKvKjDI'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion\n' +
        '        ADD CONSTRAINT completion_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'ys-TqjwGuk44PdKWF7_b_'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion_registered\n' +
        '        ADD CONSTRAINT completion_registered_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: '9fJvrzxpJWoNnzLJcmX_n'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_alias\n' +
        '        ADD CONSTRAINT course_alias_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'c_srCovHOJhxVaREjvw6x'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_organization\n' +
        '        ADD CONSTRAINT course_organization_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'Penv4Dc1e8XeTHm5JfpoH'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'ce_qv7cHhk3ir065pLJmY'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_translation\n' +
        '        ADD CONSTRAINT course_translation_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'f-wTzBW5qCe6UsKk8Laaw'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_variant\n' +
        '        ADD CONSTRAINT course_variant_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'HV6hlamaZZ8bpV1n2D4ID'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY email_template\n' +
        '        ADD CONSTRAINT email_template_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'JQQ9JzkWNzAIS3zsZScVw'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise_completion\n' +
        '        ADD CONSTRAINT exercise_completion_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: '06ozz_6xhPEj1I6jUrDdM'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise_completion_required_actions\n' +
        '        ADD CONSTRAINT exercise_completion_required_actions_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'y8yrHoBeDLQJBEvHEbaig'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise\n' +
        '        ADD CONSTRAINT exercise_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'SdNhxFB2Ft_Sxne-yKKAz'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY image\n        ADD CONSTRAINT image_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'QcVzooiAP1gvcFQmuQGIq'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY open_university_registration_link\n' +
        '        ADD CONSTRAINT open_university_registration_link_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: '1L610J2BRIBRIQhfB6bWB'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY organization\n' +
        '        ADD CONSTRAINT organization_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: '6LmnxcwuG7wukW23UtY6O'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY organization_translation\n' +
        '        ADD CONSTRAINT organization_translation_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'Ctna0LMIYPQWG38UGRz7_'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY service\n' +
        '        ADD CONSTRAINT service_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'dY2oNcOWsPaGsKqNS87vG'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY study_module\n' +
        '        ADD CONSTRAINT study_module_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'rZ22QyHyvZ6nv5wNxJX7J'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY study_module_translation\n' +
        '        ADD CONSTRAINT study_module_translation_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'f6QLI4NA8ny5AO_uNsrQv'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_progress\n' +
        '        ADD CONSTRAINT user_course_progress_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'fbSwStX_DD9GHcofre_cD'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_service_progress\n' +
        '        ADD CONSTRAINT user_course_service_progress_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'pS7pwQiUyD-1BZIrmFyym'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_settings_visibility\n' +
        '        ADD CONSTRAINT user_course_settings_visibility_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'Kk68N7g-eewvD83D6VxPv'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:36.917Z knex:query ALTER TABLE ONLY user_organization
        ADD CONSTRAINT user_organization_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.917Z knex:bindings [] trx7
2020-11-10T11:44:36.922Z knex:query ALTER TABLE ONLY "user"
        ADD CONSTRAINT user_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.922Z knex:bindings [] trx7
2020-11-10T11:44:36.926Z knex:query ALTER TABLE ONLY verified_user
        ADD CONSTRAINT verified_user_pkey PRIMARY KEY (id); trx7
2020-11-10T11:44:36.926Z knex:bindings [] trx7
2020-11-10T11:44:36.929Z knex:query RELEASE SAVEPOINT trx7; trx7
2020-11-10T11:44:36.929Z knex:bindings undefined trx7
2020-11-10T11:44:36.930Z knex:tx trx7: releasing connection
2020-11-10T11:44:36.931Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "_CourseToService_AB_unique" ON "_CourseToService" USING btree ("A", "B"); trx7
2020-11-10T11:44:36.931Z knex:bindings [] trx7
2020-11-10T11:44:36.936Z knex:query CREATE INDEX IF NOT EXISTS "_CourseToService_B" ON "_CourseToService" USING btree ("B"); trx7
2020-11-10T11:44:36.937Z knex:bindings [] trx7
2020-11-10T11:44:36.940Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "_StudyModuleToCourse_AB_unique" ON "_StudyModuleToCourse" USING btree ("A", "B"); trx7
2020-11-10T11:44:36.940Z knex:bindings [] trx7
2020-11-10T11:44:36.944Z knex:query CREATE INDEX IF NOT EXISTS "_StudyModuleToCourse_B" ON "_StudyModuleToCourse" USING btree ("B"); trx7
2020-11-10T11:44:36.944Z knex:bindings [] trx7
2020-11-10T11:44:36.948Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "UserAppDatumConfig.name._UNIQUE" ON "UserAppDatumConfig" USING btree (name); trx7
2020-11-10T11:44:36.948Z knex:bindings [] trx7
2020-11-10T11:44:36.952Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "course.slug._UNIQUE" ON course USING btree (slug); trx7
2020-11-10T11:44:36.953Z knex:bindings [] trx7
2020-11-10T11:44:36.957Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "course_alias.course_code._UNIQUE" ON course_alias USING btree (course_code); trx7
2020-11-10T11:44:36.957Z knex:bindings [] trx7
2020-11-10T11:44:36.961Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "organization.secret_key._UNIQUE" ON organization USING btree (secret_key); trx7
2020-11-10T11:44:36.962Z knex:bindings [] trx7
2020-11-10T11:44:36.966Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "organization.slug._UNIQUE" ON organization USING btree (slug); trx7
2020-11-10T11:44:36.966Z knex:bindings [] trx7
2020-11-10T11:44:36.970Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "study_module.slug._UNIQUE" ON study_module USING btree (slug); trx7
2020-11-10T11:44:36.970Z knex:bindings [] trx7
2020-11-10T11:44:36.975Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "user.upstream_id._UNIQUE" ON "user" USING btree (upstream_id); trx7
2020-11-10T11:44:36.975Z knex:bindings [] trx7
2020-11-10T11:44:36.979Z knex:query CREATE UNIQUE INDEX IF NOT EXISTS "user.username._UNIQUE" ON "user" USING btree (username); trx7
2020-11-10T11:44:36.979Z knex:bindings [] trx7
2020-11-10T11:44:36.982Z knex:tx trx8: Starting nested transaction
2020-11-10T11:44:36.982Z knex:query SAVEPOINT trx8; trx8
2020-11-10T11:44:36.982Z knex:bindings undefined trx8
2020-11-10T11:44:36.984Z knex:query ALTER TABLE ONLY "UserCourseSettings"
        ADD CONSTRAINT "UserCourseSettings_course_fkey" FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:36.984Z knex:bindings [] trx8
2020-11-10T11:44:36.989Z knex:query ALTER TABLE ONLY "UserCourseSettings"
        ADD CONSTRAINT "UserCourseSettings_user_fkey" FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:36.989Z knex:bindings [] trx8
2020-11-10T11:44:36.993Z knex:query ALTER TABLE ONLY "_CourseToService"
        ADD CONSTRAINT "_CourseToService_A_fkey" FOREIGN KEY ("A") REFERENCES course(id) ON DELETE CASCADE; trx8
2020-11-10T11:44:36.993Z knex:bindings [] trx8
2020-11-10T11:44:36.996Z knex:query ALTER TABLE ONLY "_CourseToService"
        ADD CONSTRAINT "_CourseToService_B_fkey" FOREIGN KEY ("B") REFERENCES service(id) ON DELETE CASCADE; trx8
2020-11-10T11:44:36.997Z knex:bindings [] trx8
2020-11-10T11:44:37.000Z knex:query ALTER TABLE ONLY "_StudyModuleToCourse"
        ADD CONSTRAINT "_StudyModuleToCourse_A_fkey" FOREIGN KEY ("A") REFERENCES course(id) ON DELETE CASCADE; trx8
2020-11-10T11:44:37.000Z knex:bindings [] trx8
2020-11-10T11:44:37.003Z knex:query ALTER TABLE ONLY "_StudyModuleToCourse"
        ADD CONSTRAINT "_StudyModuleToCourse_B_fkey" FOREIGN KEY ("B") REFERENCES study_module(id) ON DELETE CASCADE; trx8
2020-11-10T11:44:37.003Z knex:bindings [] trx8
2020-11-10T11:44:37.007Z knex:query ALTER TABLE ONLY completion
        ADD CONSTRAINT completion_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.007Z knex:bindings [] trx8
2020-11-10T11:44:37.010Z knex:query ALTER TABLE ONLY completion_registered
        ADD CONSTRAINT completion_registered_completion_fkey FOREIGN KEY (completion) REFERENCES completion(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.010Z knex:bindings [] trx8
2020-11-10T11:44:37.013Z knex:query ALTER TABLE ONLY completion_registered
        ADD CONSTRAINT completion_registered_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.014Z knex:bindings [] trx8
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_organization\n' +
        '        ADD CONSTRAINT user_organization_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'yPImNKHQzv4LrCSfDDly-'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "user"\n        ADD CONSTRAINT user_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'qwLSas-3dZEiGlFKDpeb2'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY verified_user\n' +
        '        ADD CONSTRAINT verified_user_pkey PRIMARY KEY (id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'j-LnFSPvR0aEkYcIRGQgg'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "_CourseToService_AB_unique" ON "_CourseToService" USING btree ("A", "B");',
      bindings: [],
      options: {},
      __knexQueryUid: '9u4h4KXPGHqE1DNVJjRK5'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE INDEX IF NOT EXISTS "_CourseToService_B" ON "_CourseToService" USING btree ("B");',
      bindings: [],
      options: {},
      __knexQueryUid: 'xyfR_L1rfUKdV3VGvWYwF'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "_StudyModuleToCourse_AB_unique" ON "_StudyModuleToCourse" USING btree ("A", "B");',
      bindings: [],
      options: {},
      __knexQueryUid: 'Y_uHTsKHigrC6mtIiSw52'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE INDEX IF NOT EXISTS "_StudyModuleToCourse_B" ON "_StudyModuleToCourse" USING btree ("B");',
      bindings: [],
      options: {},
      __knexQueryUid: '4s9Pd8ywZ4Igik2aWthNg'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "UserAppDatumConfig.name._UNIQUE" ON "UserAppDatumConfig" USING btree (name);',
      bindings: [],
      options: {},
      __knexQueryUid: 'tVuIuenUN9SMCu_bUaJMO'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "course.slug._UNIQUE" ON course USING btree (slug);',
      bindings: [],
      options: {},
      __knexQueryUid: 'vZ39nfJko29OtIvFr4ABa'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "course_alias.course_code._UNIQUE" ON course_alias USING btree (course_code);',
      bindings: [],
      options: {},
      __knexQueryUid: 'oScawiBbmSRUPmpphIc5_'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "organization.secret_key._UNIQUE" ON organization USING btree (secret_key);',
      bindings: [],
      options: {},
      __knexQueryUid: '-3BVTEiA0Lf5lhvF6zJt3'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "organization.slug._UNIQUE" ON organization USING btree (slug);',
      bindings: [],
      options: {},
      __knexQueryUid: 'My6Z1nKAR_dbx1gaGPks9'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "study_module.slug._UNIQUE" ON study_module USING btree (slug);',
      bindings: [],
      options: {},
      __knexQueryUid: 'urvbpj1gOdwRId6E5DkUA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "user.upstream_id._UNIQUE" ON "user" USING btree (upstream_id);',
      bindings: [],
      options: {},
      __knexQueryUid: 'RUt6MO94beOaFg5g7MVWj'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE UNIQUE INDEX IF NOT EXISTS "user.username._UNIQUE" ON "user" USING btree (username);',
      bindings: [],
      options: {},
      __knexQueryUid: 'atZxKfFUPtRbwm9clbiN3'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "UserCourseSettings"\n' +
        '        ADD CONSTRAINT "UserCourseSettings_course_fkey" FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'HjsyavJoTjc3dLyjHbyYi'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "UserCourseSettings"\n' +
        '        ADD CONSTRAINT "UserCourseSettings_user_fkey" FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'PWzzeWYGzms-wyojTsT8r'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "_CourseToService"\n' +
        '        ADD CONSTRAINT "_CourseToService_A_fkey" FOREIGN KEY ("A") REFERENCES course(id) ON DELETE CASCADE;',
      bindings: [],
      options: {},
      __knexQueryUid: '6R_nmKt20e-f1eiFzOWia'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "_CourseToService"\n' +
        '        ADD CONSTRAINT "_CourseToService_B_fkey" FOREIGN KEY ("B") REFERENCES service(id) ON DELETE CASCADE;',
      bindings: [],
      options: {},
      __knexQueryUid: 'YlAIIKDCs6VTG-FbdvU6k'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "_StudyModuleToCourse"\n' +
        '        ADD CONSTRAINT "_StudyModuleToCourse_A_fkey" FOREIGN KEY ("A") REFERENCES course(id) ON DELETE CASCADE;',
      bindings: [],
      options: {},
      __knexQueryUid: 'wd6SW4euSe7jPqbmbPEM3'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY "_StudyModuleToCourse"\n' +
        '        ADD CONSTRAINT "_StudyModuleToCourse_B_fkey" FOREIGN KEY ("B") REFERENCES study_module(id) ON DELETE CASCADE;',
      bindings: [],
      options: {},
      __knexQueryUid: 'mT9NmIBcBLQQC5LPP3UYY'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion\n' +
        '        ADD CONSTRAINT completion_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Sv7HTKFov0Rnfan6ljJgx'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion_registered\n' +
        '        ADD CONSTRAINT completion_registered_completion_fkey FOREIGN KEY (completion) REFERENCES completion(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'M16IHiDTLWlu_3EqUX2LZ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion_registered\n' +
        '        ADD CONSTRAINT completion_registered_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'PelBDeYq7erysAOGjNHB9'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:37.017Z knex:query ALTER TABLE ONLY completion_registered
        ADD CONSTRAINT completion_registered_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.017Z knex:bindings [] trx8
2020-11-10T11:44:37.021Z knex:query ALTER TABLE ONLY completion_registered
        ADD CONSTRAINT completion_registered_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.021Z knex:bindings [] trx8
2020-11-10T11:44:37.025Z knex:query ALTER TABLE ONLY completion
        ADD CONSTRAINT completion_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.025Z knex:bindings [] trx8
2020-11-10T11:44:37.031Z knex:query ALTER TABLE ONLY course_alias
        ADD CONSTRAINT course_alias_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.031Z knex:bindings [] trx8
2020-11-10T11:44:37.035Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_completion_email_fkey FOREIGN KEY (completion_email) REFERENCES email_template(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.035Z knex:bindings [] trx8
2020-11-10T11:44:37.040Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_completions_handled_by_fkey FOREIGN KEY (completions_handled_by) REFERENCES course(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.040Z knex:bindings [] trx8
2020-11-10T11:44:37.043Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_inherit_settings_from_fkey FOREIGN KEY (inherit_settings_from) REFERENCES course(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.043Z knex:bindings [] trx8
2020-11-10T11:44:37.046Z knex:query ALTER TABLE ONLY course_organization
        ADD CONSTRAINT course_organization_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.046Z knex:bindings [] trx8
2020-11-10T11:44:37.050Z knex:query ALTER TABLE ONLY course_organization
        ADD CONSTRAINT course_organization_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.050Z knex:bindings [] trx8
2020-11-10T11:44:37.053Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_owner_organization_fkey FOREIGN KEY (owner_organization) REFERENCES organization(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.053Z knex:bindings [] trx8
2020-11-10T11:44:37.060Z knex:query ALTER TABLE ONLY course
        ADD CONSTRAINT course_photo_fkey FOREIGN KEY (photo) REFERENCES image(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.060Z knex:bindings [] trx8
2020-11-10T11:44:37.065Z knex:query ALTER TABLE ONLY course_translation
        ADD CONSTRAINT course_translation_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.065Z knex:bindings [] trx8
2020-11-10T11:44:37.068Z knex:query ALTER TABLE ONLY course_variant
        ADD CONSTRAINT course_variant_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.068Z knex:bindings [] trx8
2020-11-10T11:44:37.072Z knex:query ALTER TABLE ONLY email_delivery
        ADD CONSTRAINT email_delivery_email_template_fkey FOREIGN KEY (email_template) REFERENCES email_template(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.073Z knex:bindings [] trx8
2020-11-10T11:44:37.077Z knex:query ALTER TABLE ONLY email_delivery
        ADD CONSTRAINT email_delivery_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.078Z knex:bindings [] trx8
2020-11-10T11:44:37.081Z knex:query ALTER TABLE ONLY exercise_completion
        ADD CONSTRAINT exercise_completion_exercise_fkey FOREIGN KEY (exercise) REFERENCES exercise(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.081Z knex:bindings [] trx8
2020-11-10T11:44:37.085Z knex:query ALTER TABLE ONLY exercise_completion_required_actions
        ADD CONSTRAINT exercise_completion_required_actions_exercise_completion_fkey FOREIGN KEY (exercise_completion) REFERENCES exercise_completion(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.085Z knex:bindings [] trx8
2020-11-10T11:44:37.089Z knex:query ALTER TABLE ONLY exercise_completion
        ADD CONSTRAINT exercise_completion_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.089Z knex:bindings [] trx8
2020-11-10T11:44:37.092Z knex:query ALTER TABLE ONLY exercise
        ADD CONSTRAINT exercise_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.093Z knex:bindings [] trx8
2020-11-10T11:44:37.096Z knex:query ALTER TABLE ONLY exercise
        ADD CONSTRAINT exercise_service_fkey FOREIGN KEY (service) REFERENCES service(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.096Z knex:bindings [] trx8
2020-11-10T11:44:37.099Z knex:query ALTER TABLE ONLY open_university_registration_link
        ADD CONSTRAINT open_university_registration_link_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.099Z knex:bindings [] trx8
2020-11-10T11:44:37.103Z knex:query ALTER TABLE ONLY organization
        ADD CONSTRAINT organization_creator_fkey FOREIGN KEY (creator) REFERENCES "user"(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.103Z knex:bindings [] trx8
2020-11-10T11:44:37.107Z knex:query ALTER TABLE ONLY organization_translation
        ADD CONSTRAINT organization_translation_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.107Z knex:bindings [] trx8
2020-11-10T11:44:37.110Z knex:query ALTER TABLE ONLY study_module_translation
        ADD CONSTRAINT study_module_translation_study_module_fkey FOREIGN KEY (study_module) REFERENCES study_module(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.110Z knex:bindings [] trx8
2020-11-10T11:44:37.113Z knex:query ALTER TABLE ONLY user_course_progress
        ADD CONSTRAINT user_course_progress_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.114Z knex:bindings [] trx8
2020-11-10T11:44:37.117Z knex:query ALTER TABLE ONLY user_course_progress
        ADD CONSTRAINT user_course_progress_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.117Z knex:bindings [] trx8
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion_registered\n' +
        '        ADD CONSTRAINT completion_registered_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'USa0LREkTe8a1386FyKK0'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion_registered\n' +
        '        ADD CONSTRAINT completion_registered_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Yf1S16HvlgDEhQPP9MEHE'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY completion\n' +
        '        ADD CONSTRAINT completion_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'CPRpkkVpnvgKYgwut9ynT'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_alias\n' +
        '        ADD CONSTRAINT course_alias_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '_PZZgy6oHlLxigs2MUht7'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_completion_email_fkey FOREIGN KEY (completion_email) REFERENCES email_template(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'pjCuw7fVBBrds4efBsbag'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_completions_handled_by_fkey FOREIGN KEY (completions_handled_by) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'oQJnZFYdayqFijWbSEbdY'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_inherit_settings_from_fkey FOREIGN KEY (inherit_settings_from) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'GIvwj6gMQpkCq6QBoqHK9'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_organization\n' +
        '        ADD CONSTRAINT course_organization_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'fQOUgjVQhILd5JqV1D0BV'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_organization\n' +
        '        ADD CONSTRAINT course_organization_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'C8hlL-LErgN2gT1E91cAB'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_owner_organization_fkey FOREIGN KEY (owner_organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'YxvG8pg0N6SPtKcMIQVB9'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course\n' +
        '        ADD CONSTRAINT course_photo_fkey FOREIGN KEY (photo) REFERENCES image(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'qSlE8BX9FIoeytr3iTTbK'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_translation\n' +
        '        ADD CONSTRAINT course_translation_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'FzYs1pbYhBA8GrqpPsV9_'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY course_variant\n' +
        '        ADD CONSTRAINT course_variant_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'wxiGSpH8hv-6MUvdR1Ana'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY email_delivery\n' +
        '        ADD CONSTRAINT email_delivery_email_template_fkey FOREIGN KEY (email_template) REFERENCES email_template(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '7VaqFFa2zxtzLqf48U10Q'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY email_delivery\n' +
        '        ADD CONSTRAINT email_delivery_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'zRYPWQQWhb53u4TNsaY6K'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise_completion\n' +
        '        ADD CONSTRAINT exercise_completion_exercise_fkey FOREIGN KEY (exercise) REFERENCES exercise(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'JGOrLfbsNt0wlividu6XF'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise_completion_required_actions\n' +
        '        ADD CONSTRAINT exercise_completion_required_actions_exercise_completion_fkey FOREIGN KEY (exercise_completion) REFERENCES exercise_completion(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ZGA5NCWwOQz7bCTZNsjju'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise_completion\n' +
        '        ADD CONSTRAINT exercise_completion_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'GqhnKSjQ_4FirR_9gKjuG'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise\n' +
        '        ADD CONSTRAINT exercise_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '16NJd5TUsm-AgvTsNT5GX'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY exercise\n' +
        '        ADD CONSTRAINT exercise_service_fkey FOREIGN KEY (service) REFERENCES service(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'xtdTLehqo5l1Oh-f0IbZY'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY open_university_registration_link\n' +
        '        ADD CONSTRAINT open_university_registration_link_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'FNNirewzOH4_qeH-1Lk7c'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY organization\n' +
        '        ADD CONSTRAINT organization_creator_fkey FOREIGN KEY (creator) REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '6qOzeZDe6qAK9qprB7pn7'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY organization_translation\n' +
        '        ADD CONSTRAINT organization_translation_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'D2C8l5k8EN_3mz17a3gy5'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY study_module_translation\n' +
        '        ADD CONSTRAINT study_module_translation_study_module_fkey FOREIGN KEY (study_module) REFERENCES study_module(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Gfg3o0RMT6ZxTo5ITmLoX'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_progress\n' +
        '        ADD CONSTRAINT user_course_progress_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '9wtQoLVXQf33pbXyO-Fdx'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_progress\n' +
        '        ADD CONSTRAINT user_course_progress_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Uopj5fxGfnWgYl6BgJJKW'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:37.120Z knex:query ALTER TABLE ONLY user_course_service_progress
        ADD CONSTRAINT user_course_service_progress_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.120Z knex:bindings [] trx8
2020-11-10T11:44:37.124Z knex:query ALTER TABLE ONLY user_course_service_progress
        ADD CONSTRAINT user_course_service_progress_service_fkey FOREIGN KEY (service) REFERENCES service(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.124Z knex:bindings [] trx8
2020-11-10T11:44:37.128Z knex:query ALTER TABLE ONLY user_course_service_progress
        ADD CONSTRAINT user_course_service_progress_user_course_progress_fkey FOREIGN KEY (user_course_progress) REFERENCES user_course_progress(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.128Z knex:bindings [] trx8
2020-11-10T11:44:37.133Z knex:query ALTER TABLE ONLY user_course_service_progress
        ADD CONSTRAINT user_course_service_progress_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.133Z knex:bindings [] trx8
2020-11-10T11:44:37.137Z knex:query ALTER TABLE ONLY user_course_settings_visibility
        ADD CONSTRAINT user_course_settings_visibility_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.137Z knex:bindings [] trx8
2020-11-10T11:44:37.141Z knex:query ALTER TABLE ONLY user_organization
        ADD CONSTRAINT user_organization_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.141Z knex:bindings [] trx8
2020-11-10T11:44:37.146Z knex:query ALTER TABLE ONLY user_organization
        ADD CONSTRAINT user_organization_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.146Z knex:bindings [] trx8
2020-11-10T11:44:37.152Z knex:query ALTER TABLE ONLY verified_user
        ADD CONSTRAINT verified_user_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.152Z knex:bindings [] trx8
2020-11-10T11:44:37.156Z knex:query ALTER TABLE ONLY verified_user
        ADD CONSTRAINT verified_user_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL; trx8
2020-11-10T11:44:37.156Z knex:bindings [] trx8
2020-11-10T11:44:37.158Z knex:query RELEASE SAVEPOINT trx8; trx8
2020-11-10T11:44:37.159Z knex:bindings undefined trx8
2020-11-10T11:44:37.159Z knex:tx trx8: releasing connection
2020-11-10T11:44:37.162Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.162Z knex:bindings [
  1,
  2020-11-10T11:44:37.159Z,
  '19000101114728_create-table-schema.ts'
] trx8
2020-11-10T11:44:37.164Z knex:query CREATE TYPE "CourseStatus" AS ENUM ('Active', 'Ended', 'Upcoming'); trx8
2020-11-10T11:44:37.165Z knex:bindings [] trx8
2020-11-10T11:44:37.167Z knex:query CREATE TYPE "OrganizationRole" AS ENUM ('OrganizationAdmin', 'Student', 'Teacher'); trx8
2020-11-10T11:44:37.167Z knex:bindings [] trx8
2020-11-10T11:44:37.169Z knex:query ALTER TABLE "course" ALTER COLUMN automatic_completions SET DEFAULT false; trx8
2020-11-10T11:44:37.169Z knex:bindings [] trx8
2020-11-10T11:44:37.171Z knex:query ALTER TABLE "course" ALTER COLUMN has_certificate SET DEFAULT false; trx8
2020-11-10T11:44:37.171Z knex:bindings [] trx8
2020-11-10T11:44:37.174Z knex:query ALTER TABLE "course" ALTER COLUMN status SET DEFAULT 'Upcoming'; trx8
2020-11-10T11:44:37.174Z knex:bindings [] trx8
2020-11-10T11:44:37.177Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN error SET DEFAULT false; trx8
2020-11-10T11:44:37.177Z knex:bindings [] trx8
2020-11-10T11:44:37.180Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN sent SET DEFAULT false; trx8
2020-11-10T11:44:37.180Z knex:bindings [] trx8
2020-11-10T11:44:37.183Z knex:query ALTER TABLE "exercise" ALTER COLUMN deleted SET DEFAULT false; trx8
2020-11-10T11:44:37.183Z knex:bindings [] trx8
2020-11-10T11:44:37.185Z knex:query ALTER TABLE "exercise_completion" ALTER COLUMN completed SET DEFAULT false; trx8
2020-11-10T11:44:37.185Z knex:bindings [] trx8
2020-11-10T11:44:37.188Z knex:query ALTER TABLE "user_organization" ALTER COLUMN role SET DEFAULT 'Student'; trx8
2020-11-10T11:44:37.188Z knex:bindings [] trx8
2020-11-10T11:44:37.191Z knex:query ALTER TABLE "completion" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.191Z knex:bindings [] trx8
2020-11-10T11:44:37.193Z knex:query ALTER TABLE "completion_registered" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.194Z knex:bindings [] trx8
2020-11-10T11:44:37.196Z knex:query ALTER TABLE "course" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.196Z knex:bindings [] trx8
2020-11-10T11:44:37.199Z knex:query ALTER TABLE "course_alias" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.199Z knex:bindings [] trx8
2020-11-10T11:44:37.201Z knex:query ALTER TABLE "course_organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.201Z knex:bindings [] trx8
2020-11-10T11:44:37.203Z knex:query ALTER TABLE "course_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.203Z knex:bindings [] trx8
2020-11-10T11:44:37.205Z knex:query ALTER TABLE "course_variant" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.205Z knex:bindings [] trx8
2020-11-10T11:44:37.207Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.207Z knex:bindings [] trx8
2020-11-10T11:44:37.210Z knex:query ALTER TABLE "email_template" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.210Z knex:bindings [] trx8
2020-11-10T11:44:37.213Z knex:query ALTER TABLE "exercise" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.213Z knex:bindings [] trx8
2020-11-10T11:44:37.215Z knex:query ALTER TABLE "exercise_completion" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.216Z knex:bindings [] trx8
2020-11-10T11:44:37.218Z knex:query ALTER TABLE "image" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.218Z knex:bindings [] trx8
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_service_progress\n' +
        '        ADD CONSTRAINT user_course_service_progress_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'WUbCS_mTjDEXZco57KXIm'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_service_progress\n' +
        '        ADD CONSTRAINT user_course_service_progress_service_fkey FOREIGN KEY (service) REFERENCES service(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'nW2l9z4vfXv6XSpwoTLD5'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_service_progress\n' +
        '        ADD CONSTRAINT user_course_service_progress_user_course_progress_fkey FOREIGN KEY (user_course_progress) REFERENCES user_course_progress(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'hb8CiKAQifIlyOu5n3ZRO'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_service_progress\n' +
        '        ADD CONSTRAINT user_course_service_progress_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '3A5i08i3p15JvnckY7_lc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_course_settings_visibility\n' +
        '        ADD CONSTRAINT user_course_settings_visibility_course_fkey FOREIGN KEY (course) REFERENCES course(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'R5da3Km7FcHMDtCapHYTe'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_organization\n' +
        '        ADD CONSTRAINT user_organization_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '-GjRJ_sDxySFPnDTjaFca'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY user_organization\n' +
        '        ADD CONSTRAINT user_organization_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'I8xntDbZP_3W3T1e6FaYs'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY verified_user\n' +
        '        ADD CONSTRAINT verified_user_organization_fkey FOREIGN KEY (organization) REFERENCES organization(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'eFL8JzevbIa459nbP1PBg'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE ONLY verified_user\n' +
        '        ADD CONSTRAINT verified_user_user_fkey FOREIGN KEY ("user") REFERENCES "user"(id) ON DELETE SET NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'epSUM6VY3XZtXI7XgqSLf'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.159Z,
        '19000101114728_create-table-schema.ts'
      ],
      __knexQueryUid: 'IpmLI8wsnpieT0LbtFd23',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: `CREATE TYPE "CourseStatus" AS ENUM ('Active', 'Ended', 'Upcoming');`,
      bindings: [],
      options: {},
      __knexQueryUid: 'OPKNFOJSnsZAJTI1fUT_b'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: `CREATE TYPE "OrganizationRole" AS ENUM ('OrganizationAdmin', 'Student', 'Teacher');`,
      bindings: [],
      options: {},
      __knexQueryUid: 'PGHRsG1myxOBjWK4LLOSz'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN automatic_completions SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Tn7x0yOKPMfcL3ZJWAzHn'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN has_certificate SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: 'GD-dEky9nwKNu_oe1umos'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: `ALTER TABLE "course" ALTER COLUMN status SET DEFAULT 'Upcoming';`,
      bindings: [],
      options: {},
      __knexQueryUid: '58N_XzhmeCg6zA-k50ik0'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN error SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: 'p6Zl5Lh59WVr7dw4NqLcU'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN sent SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: 'TakkBaPPCo6NAUJGF-mgE'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" ALTER COLUMN deleted SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: 'BNry2T2RcF9LYmqDJG2Ti'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" ALTER COLUMN completed SET DEFAULT false;',
      bindings: [],
      options: {},
      __knexQueryUid: 'WKQmdVSLLcs_y6qIxiKIr'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: `ALTER TABLE "user_organization" ALTER COLUMN role SET DEFAULT 'Student';`,
      bindings: [],
      options: {},
      __knexQueryUid: 'UyEJ2z1dofrG0OK31KtDU'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '5I4QKeS2ugQpC3AM-CcZr'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'bgMNvUuYsCDPh7hr6wkdn'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '32IKa1zZIxBPtAf43Wkxi'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_alias" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '2fr7rR7idgFiz_vUs9_RT'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'n39Z5i6ZSvIoNXlAC6FeR'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '8lZbWoeg2CVcgjOF7d_fx'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_variant" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'BZRBR7L_OGcKHGpxCRNsv'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'GaA9f1xrB0HmDNT_0X8ek'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_template" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'oyvRT18C2Oayceidlw37h'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'BpHE5RD60TUkEQqJNT8X4'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'piTqlHcg3lHUAqanMOxTR'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "image" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'c8qXIX0LGqivNJOJJ9rCF'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:37.221Z knex:query ALTER TABLE "open_university_registration_link" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.221Z knex:bindings [] trx8
2020-11-10T11:44:37.224Z knex:query ALTER TABLE "organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.224Z knex:bindings [] trx8
2020-11-10T11:44:37.226Z knex:query ALTER TABLE "organization_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.226Z knex:bindings [] trx8
2020-11-10T11:44:37.227Z knex:query ALTER TABLE "service" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.227Z knex:bindings [] trx8
2020-11-10T11:44:37.229Z knex:query ALTER TABLE "study_module" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.229Z knex:bindings [] trx8
2020-11-10T11:44:37.231Z knex:query ALTER TABLE "study_module_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.231Z knex:bindings [] trx8
2020-11-10T11:44:37.233Z knex:query ALTER TABLE "user" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.233Z knex:bindings [] trx8
2020-11-10T11:44:37.235Z knex:query ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.235Z knex:bindings [] trx8
2020-11-10T11:44:37.237Z knex:query ALTER TABLE "user_course_progress" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.237Z knex:bindings [] trx8
2020-11-10T11:44:37.240Z knex:query ALTER TABLE "user_course_service_progress" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.240Z knex:bindings [] trx8
2020-11-10T11:44:37.242Z knex:query ALTER TABLE "UserCourseSettings" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.243Z knex:bindings [] trx8
2020-11-10T11:44:37.245Z knex:query ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.245Z knex:bindings [] trx8
2020-11-10T11:44:37.249Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.249Z knex:bindings [] trx8
2020-11-10T11:44:37.252Z knex:query ALTER TABLE "verified_user" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.252Z knex:bindings [] trx8
2020-11-10T11:44:37.255Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.255Z knex:bindings [
  1,
  2020-11-10T11:44:37.253Z,
  '20200601113530_prisma-upgrade-alter-tables.ts'
] trx8
2020-11-10T11:44:37.256Z knex:query select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema() trx8
2020-11-10T11:44:37.257Z knex:bindings [ 'user', 'research_consent' ] trx8
2020-11-10T11:44:37.271Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.272Z knex:bindings [
  1,
  2020-11-10T11:44:37.269Z,
  '20200626140343_alter-table-user-research_consent.ts'
] trx8
2020-11-10T11:44:37.275Z knex:query select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema() trx8
2020-11-10T11:44:37.275Z knex:bindings [ 'completion', 'eligible_for_ects' ] trx8
2020-11-10T11:44:37.285Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.285Z knex:bindings [
  1,
  2020-11-10T11:44:37.283Z,
  '20200626141004_alter-table-completion-eligible_for_ects.ts'
] trx8
2020-11-10T11:44:37.288Z knex:query select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema() trx8
2020-11-10T11:44:37.288Z knex:bindings [ 'course', 'automatic_completions_eligible_for_ects' ] trx8
2020-11-10T11:44:37.298Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.298Z knex:bindings [
  1,
  2020-11-10T11:44:37.296Z,
  '20200626141225_alter-table-course-automatic_completions_eligible_for_ects.ts'
] trx8
2020-11-10T11:44:37.301Z knex:query select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema() trx8
2020-11-10T11:44:37.301Z knex:bindings [ 'completion', 'completion_date' ] trx8
2020-11-10T11:44:37.310Z knex:query alter table "completion" add column "completion_date" timestamptz trx8
2020-11-10T11:44:37.310Z knex:bindings [] trx8
2020-11-10T11:44:37.313Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.313Z knex:bindings [
  1,
  2020-11-10T11:44:37.311Z,
  '20200723120702_alter-table-completion-completion-date.ts'
] trx8
2020-11-10T11:44:37.316Z knex:query ALTER TABLE "completion" ALTER COLUMN "eligible_for_ects" SET DEFAULT true; trx8
2020-11-10T11:44:37.316Z knex:bindings [] trx8
2020-11-10T11:44:37.318Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.318Z knex:bindings [
  1,
  2020-11-10T11:44:37.317Z,
  '20200804112538_alter-table-completion-eligible-for-ects-default.ts'
] trx8
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "open_university_registration_link" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'OTaBEKs4YkVup83J6vpmR'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'C4FhgXO147JYQzGGYV0oe'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'x0p3rPL5SxJ4x2aI-CYt9'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "service" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'IbqF7zirkqxHyNmCQIijd'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'NLzLf0q_KhE5lhq8FMZ3N'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module_translation" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '3fkCVa_WxO9bKTj0QfLSb'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'doiOVVQbUXDPhjQN3PEbv'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '24YofQ4LCNcv2tlH8zx-9'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'gQrVLR-kuZl7Z7IJeF8la'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '7KtScEHVcbN-6PrQJyIs6'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '3SRDBobmdcVVcov91yo_q'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'bFNyabxb-7B0H2yYgaLKR'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'nQ2InvImV488HGFo7D28x'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" ALTER COLUMN "created_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '7Zyxws_hTKXdsRwsBPvm6'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.253Z,
        '20200601113530_prisma-upgrade-alter-tables.ts'
      ],
      __knexQueryUid: 'GX06iESc9SMrm5EBiPWEa',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema()',
        bindings: [ 'user', 'research_consent' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.269Z,
        '20200626140343_alter-table-user-research_consent.ts'
      ],
      __knexQueryUid: '4gkVMRQdbMEOaISI9TnF0',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema()',
        bindings: [ 'completion', 'eligible_for_ects' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.283Z,
        '20200626141004_alter-table-completion-eligible_for_ects.ts'
      ],
      __knexQueryUid: 'CoNWyKvCH7EO54EHlu_d1',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema()',
        bindings: [ 'course', 'automatic_completions_eligible_for_ects' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.296Z,
        '20200626141225_alter-table-course-automatic_completions_eligible_for_ects.ts'
      ],
      __knexQueryUid: 'F8FzCZGKvovt4jR-fryoT',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema()',
        bindings: [ 'completion', 'completion_date' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'alter table "completion" add column "completion_date" timestamptz',
        bindings: []
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.311Z,
        '20200723120702_alter-table-completion-completion-date.ts'
      ],
      __knexQueryUid: 'zGMED6fwztx1Nb291l565',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "eligible_for_ects" SET DEFAULT true;',
      bindings: [],
      options: {},
      __knexQueryUid: 'bxBNkwJkQO9DSOSZd7_aw'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.317Z,
        '20200804112538_alter-table-completion-eligible-for-ects-default.ts'
      ],
      __knexQueryUid: 'HCDCL8c5Bq3TjiW_A8wQX',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:37.321Z knex:query ALTER TABLE "course" ALTER COLUMN "automatic_completions_eligible_for_ects" SET DEFAULT true; trx8
2020-11-10T11:44:37.321Z knex:bindings [] trx8
2020-11-10T11:44:37.323Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.323Z knex:bindings [
  1,
  2020-11-10T11:44:37.322Z,
  '20200804112601_alter-table-course-automatic-completions-eligible-for-ects-default.ts'
] trx8
2020-11-10T11:44:37.324Z knex:query ALTER TABLE "completion" ALTER COLUMN "completion_date" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.324Z knex:bindings [] trx8
2020-11-10T11:44:37.326Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.326Z knex:bindings [
  1,
  2020-11-10T11:44:37.325Z,
  '20200804112609_alter-table-completion-completion-date-default.ts'
] trx8
2020-11-10T11:44:37.327Z knex:query ALTER TABLE "completion" RENAME "course" TO "course_id"; trx8
2020-11-10T11:44:37.327Z knex:bindings [] trx8
2020-11-10T11:44:37.328Z knex:query ALTER TABLE "completion" RENAME "user" to "user_id"; trx8
2020-11-10T11:44:37.328Z knex:bindings [] trx8
2020-11-10T11:44:37.330Z knex:query ALTER TABLE "completion_registered" RENAME "completion" TO "completion_id"; trx8
2020-11-10T11:44:37.330Z knex:bindings [] trx8
2020-11-10T11:44:37.331Z knex:query ALTER TABLE "completion_registered" RENAME "course" TO "course_id"; trx8
2020-11-10T11:44:37.331Z knex:bindings [] trx8
2020-11-10T11:44:37.333Z knex:query ALTER TABLE "completion_registered" RENAME "organization" TO "organization_id"; trx8
2020-11-10T11:44:37.333Z knex:bindings [] trx8
2020-11-10T11:44:37.336Z knex:query ALTER TABLE "completion_registered" RENAME "user" TO "user_id"; trx8
2020-11-10T11:44:37.336Z knex:bindings [] trx8
2020-11-10T11:44:37.338Z knex:query ALTER TABLE "course" RENAME "completion_email" TO "completion_email_id"; trx8
2020-11-10T11:44:37.338Z knex:bindings [] trx8
2020-11-10T11:44:37.340Z knex:query ALTER TABLE "course" RENAME "completions_handled_by" TO "completions_handled_by_id"; trx8
2020-11-10T11:44:37.340Z knex:bindings [] trx8
2020-11-10T11:44:37.341Z knex:query ALTER TABLE "course" RENAME "inherit_settings_from" TO "inherit_settings_from_id"; trx8
2020-11-10T11:44:37.341Z knex:bindings [] trx8
2020-11-10T11:44:37.343Z knex:query ALTER TABLE "course" RENAME "owner_organization" TO "owner_organization_id"; trx8
2020-11-10T11:44:37.343Z knex:bindings [] trx8
2020-11-10T11:44:37.345Z knex:query ALTER TABLE "course" RENAME "photo" TO "photo_id"; trx8
2020-11-10T11:44:37.345Z knex:bindings [] trx8
2020-11-10T11:44:37.348Z knex:query ALTER TABLE "course_alias" RENAME "course" TO "course_id"; trx8
2020-11-10T11:44:37.348Z knex:bindings [] trx8
2020-11-10T11:44:37.350Z knex:query ALTER TABLE "course_organization" RENAME "course" TO "course_id"; trx8
2020-11-10T11:44:37.351Z knex:bindings [] trx8
2020-11-10T11:44:37.353Z knex:query ALTER TABLE "course_organization" RENAME "organization" TO "organization_id"; trx8
2020-11-10T11:44:37.353Z knex:bindings [] trx8
2020-11-10T11:44:37.356Z knex:query ALTER TABLE "course_translation" RENAME "course" TO "course_id"; trx8
2020-11-10T11:44:37.356Z knex:bindings [] trx8
2020-11-10T11:44:37.357Z knex:query ALTER TABLE "course_variant" RENAME "course" TO "course_id"; trx8
2020-11-10T11:44:37.357Z knex:bindings [] trx8
2020-11-10T11:44:37.358Z knex:query ALTER TABLE "email_delivery" RENAME "email_template" TO "email_template_id"; trx8
2020-11-10T11:44:37.358Z knex:bindings [] trx8
2020-11-10T11:44:37.360Z knex:query ALTER TABLE "email_delivery" RENAME "user" TO "user_id"; trx8
2020-11-10T11:44:37.360Z knex:bindings [] trx8
2020-11-10T11:44:37.362Z knex:query ALTER TABLE "exercise" RENAME "course" TO "course_id"; trx8
2020-11-10T11:44:37.362Z knex:bindings [] trx8
2020-11-10T11:44:37.363Z knex:query ALTER TABLE "exercise" RENAME "service" TO "service_id"; trx8
2020-11-10T11:44:37.363Z knex:bindings [] trx8
2020-11-10T11:44:37.366Z knex:query ALTER TABLE "exercise_completion" RENAME "exercise" TO "exercise_id"; trx8
2020-11-10T11:44:37.367Z knex:bindings [] trx8
2020-11-10T11:44:37.368Z knex:query ALTER TABLE "exercise_completion" RENAME "user" to "user_id"; trx8
2020-11-10T11:44:37.368Z knex:bindings [] trx8
2020-11-10T11:44:37.369Z knex:query ALTER TABLE "exercise_completion_required_actions" RENAME "exercise_completion" TO "exercise_completion_id"; trx8
2020-11-10T11:44:37.369Z knex:bindings [] trx8
2020-11-10T11:44:37.372Z knex:query ALTER TABLE "open_university_registration_link" RENAME "course" TO "course_id"; trx8
2020-11-10T11:44:37.372Z knex:bindings [] trx8
2020-11-10T11:44:37.374Z knex:query ALTER TABLE "organization" RENAME "creator" TO "creator_id"; trx8
2020-11-10T11:44:37.374Z knex:bindings [] trx8
2020-11-10T11:44:37.377Z knex:query ALTER TABLE "organization_translation" RENAME "organization" TO "organization_id"; trx8
2020-11-10T11:44:37.377Z knex:bindings [] trx8
2020-11-10T11:44:37.379Z knex:query ALTER TABLE "study_module_translation" RENAME "study_module" TO "study_module_id"; trx8
2020-11-10T11:44:37.379Z knex:bindings [] trx8
2020-11-10T11:44:37.382Z knex:query ALTER TABLE "user_course_progress" RENAME "course" TO "course_id"; trx8
2020-11-10T11:44:37.382Z knex:bindings [] trx8
2020-11-10T11:44:37.384Z knex:query ALTER TABLE "user_course_progress" RENAME "user" TO "user_id"; trx8
2020-11-10T11:44:37.384Z knex:bindings [] trx8
2020-11-10T11:44:37.386Z knex:query ALTER TABLE "user_course_service_progress" RENAME "course" TO "course_id"; trx8
2020-11-10T11:44:37.386Z knex:bindings [] trx8
2020-11-10T11:44:37.389Z knex:query ALTER TABLE "user_course_service_progress" RENAME "service" TO "service_id"; trx8
2020-11-10T11:44:37.389Z knex:bindings [] trx8
2020-11-10T11:44:37.391Z knex:query ALTER TABLE "user_course_service_progress" RENAME "user" TO "user_id"; trx8
2020-11-10T11:44:37.391Z knex:bindings [] trx8
2020-11-10T11:44:37.392Z knex:query ALTER TABLE "user_course_service_progress" RENAME "user_course_progress" TO "user_course_progress_id"; trx8
2020-11-10T11:44:37.392Z knex:bindings [] trx8
2020-11-10T11:44:37.393Z knex:query ALTER TABLE "UserCourseSettings" RENAME "course" TO "course_id"; trx8
2020-11-10T11:44:37.393Z knex:bindings [] trx8
2020-11-10T11:44:37.394Z knex:query ALTER TABLE "UserCourseSettings" RENAME "user" TO "user_id"; trx8
2020-11-10T11:44:37.394Z knex:bindings [] trx8
2020-11-10T11:44:37.395Z knex:query ALTER TABLE "user_course_settings_visibility" RENAME "course" TO "course_id"; trx8
2020-11-10T11:44:37.395Z knex:bindings [] trx8
2020-11-10T11:44:37.396Z knex:query ALTER TABLE "user_organization" RENAME "organization" TO "organization_id"; trx8
2020-11-10T11:44:37.396Z knex:bindings [] trx8
2020-11-10T11:44:37.398Z knex:query ALTER TABLE "user_organization" RENAME "user" TO "user_id"; trx8
2020-11-10T11:44:37.398Z knex:bindings [] trx8
2020-11-10T11:44:37.399Z knex:query ALTER TABLE "verified_user" RENAME "organization" TO "organization_id"; trx8
2020-11-10T11:44:37.399Z knex:bindings [] trx8
2020-11-10T11:44:37.400Z knex:query ALTER TABLE "verified_user" RENAME "user" TO "user_id"; trx8
2020-11-10T11:44:37.400Z knex:bindings [] trx8
2020-11-10T11:44:37.401Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.401Z knex:bindings [
  1,
  2020-11-10T11:44:37.401Z,
  '20200810142948_alter-tables-foreign-key-fields.ts'
] trx8
2020-11-10T11:44:37.403Z knex:query ALTER TABLE "completion" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.403Z knex:bindings [] trx8
2020-11-10T11:44:37.404Z knex:query ALTER TABLE "completion_registered" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.404Z knex:bindings [] trx8
2020-11-10T11:44:37.405Z knex:query ALTER TABLE "course" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.405Z knex:bindings [] trx8
2020-11-10T11:44:37.407Z knex:query ALTER TABLE "course_alias" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.407Z knex:bindings [] trx8
2020-11-10T11:44:37.411Z knex:query ALTER TABLE "course_organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.411Z knex:bindings [] trx8
2020-11-10T11:44:37.413Z knex:query ALTER TABLE "course_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.413Z knex:bindings [] trx8
2020-11-10T11:44:37.416Z knex:query ALTER TABLE "course_variant" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.416Z knex:bindings [] trx8
2020-11-10T11:44:37.420Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.420Z knex:bindings [] trx8
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "automatic_completions_eligible_for_ects" SET DEFAULT true;',
      bindings: [],
      options: {},
      __knexQueryUid: '4skFpIvynd1T-mXbXGipw'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.322Z,
        '20200804112601_alter-table-course-automatic-completions-eligible-for-ects-default.ts'
      ],
      __knexQueryUid: 'O4HUcwuQFWfI0aVJSuvEz',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "completion_date" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'AABuc-qwJH9KlAfr5F0Xf'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.325Z,
        '20200804112609_alter-table-completion-completion-date-default.ts'
      ],
      __knexQueryUid: 'v3JuNW7c3HWMyXof4n06u',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'Wc1-PBBRxLgqJGQz6JG-0'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" RENAME "user" to "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '6LsJkBZNycsSr76GlIov5'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" RENAME "completion" TO "completion_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'MX1YgRhQ2XaaWziEWJHsH'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'qZyHHfMD8FuElMxhovxNK'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" RENAME "organization" TO "organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'Up3lBXkus3O-q2v6r8HIr'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'IoDbXu3XkAIiEkMwDpLUT'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" RENAME "completion_email" TO "completion_email_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'k1FpGhQbaJe22Efo8Q78M'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" RENAME "completions_handled_by" TO "completions_handled_by_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '4EJpYx9kRf0dF_bWSZeFu'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" RENAME "inherit_settings_from" TO "inherit_settings_from_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'v2vnMjQlV9YdTbWpXNg_z'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" RENAME "owner_organization" TO "owner_organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '52d5TiLLdQf_Mz-Ks89LN'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" RENAME "photo" TO "photo_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'ezspFzYSibOqto4ZSISw2'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_alias" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'B65t6gzRqd4PltlJCrzxN'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'NZKTTfQAbpAEur9OjBYUp'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" RENAME "organization" TO "organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'NyL1BMQ-GgoNGSH1AJJLo'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_translation" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'SlemWwmpdLGKTo65xbSGr'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_variant" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'RyREIwl5a_dUq4M0aZ61H'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" RENAME "email_template" TO "email_template_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'dY7vNVhGO_Pciod4-wsGV'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'SOjGBTCA8hpwoB5gibAo6'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'ePDmeylKvEgdX5-aT0qKg'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" RENAME "service" TO "service_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '6Y6kMkpeIjVblSFMmwbsT'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" RENAME "exercise" TO "exercise_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '9gOLqA4qcv58MkuBuGetU'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" RENAME "user" to "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'PKTZJwVNJHkFQEaZQBNaV'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion_required_actions" RENAME "exercise_completion" TO "exercise_completion_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'p454jINlRZeUj8vxKAlTr'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "open_university_registration_link" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'eFDnfmCQLpyH0r2WwvrA0'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization" RENAME "creator" TO "creator_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'yqfsZ11yVWp3fD1eYhisA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization_translation" RENAME "organization" TO "organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'DH8ghs4XafBvUPLC6oILZ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module_translation" RENAME "study_module" TO "study_module_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'vXQW2507J6efHSDJc1yjS'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'kuFMV4gVg1a4MzvrEXBKH'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'LUzvrnQOC3km3qHvk2JLE'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'JRkp4mZGyWQLD7U9kOpNn'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" RENAME "service" TO "service_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'WZ9LHgGBFKvQRRU_eEvP4'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'OhEmZgosqsZGQvFv7YsIQ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" RENAME "user_course_progress" TO "user_course_progress_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'QunqbiMQX47c-K5lZbiSX'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'PLrqmEdxRnhdD7aBRW1ao'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'lJ4hfc87qM6QhzCiP7GKl'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_settings_visibility" RENAME "course" TO "course_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'qtVidn10Q2aRUict_dX7G'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" RENAME "organization" TO "organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'MYiMRBgrRjTgqI3MC7NRh'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'nLFxatOS8oF8wfDPpPVpx'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" RENAME "organization" TO "organization_id";',
      bindings: [],
      options: {},
      __knexQueryUid: '2VSDBZP_Fc49830khECxJ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" RENAME "user" TO "user_id";',
      bindings: [],
      options: {},
      __knexQueryUid: 'Yrc0-QqEyX1C4UnRZHwcH'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.401Z,
        '20200810142948_alter-tables-foreign-key-fields.ts'
      ],
      __knexQueryUid: 'HvyEA0F7D6DSWBJ3pNSVZ',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'zw9lNPr-vPkzRCAEx9CA-'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'wZUgHeBa-Ho526LOEkcKl'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Czow85k1OznahH2kkJitL'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_alias" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'RP1Ni89fRgpRtLuAXWeyv'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'vEpooBb10nDKGil77iEaA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'QAXg3D7LxRy0Hn9DLDwjF'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_variant" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'JGRi1UDEPHLpCnlQqkmSU'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'nBqK9Q8vUH0bQhcI0NK9e'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:37.422Z knex:query ALTER TABLE "email_template" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.422Z knex:bindings [] trx8
2020-11-10T11:44:37.423Z knex:query ALTER TABLE "exercise" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.423Z knex:bindings [] trx8
2020-11-10T11:44:37.425Z knex:query ALTER TABLE "exercise_completion" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.425Z knex:bindings [] trx8
2020-11-10T11:44:37.426Z knex:query ALTER TABLE "image" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.426Z knex:bindings [] trx8
2020-11-10T11:44:37.429Z knex:query ALTER TABLE "open_university_registration_link" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.429Z knex:bindings [] trx8
2020-11-10T11:44:37.431Z knex:query ALTER TABLE "organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.431Z knex:bindings [] trx8
2020-11-10T11:44:37.433Z knex:query ALTER TABLE "organization_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.433Z knex:bindings [] trx8
2020-11-10T11:44:37.437Z knex:query ALTER TABLE "service" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.437Z knex:bindings [] trx8
2020-11-10T11:44:37.439Z knex:query ALTER TABLE "study_module" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.439Z knex:bindings [] trx8
2020-11-10T11:44:37.440Z knex:query ALTER TABLE "study_module_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.440Z knex:bindings [] trx8
2020-11-10T11:44:37.442Z knex:query ALTER TABLE "user" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.442Z knex:bindings [] trx8
2020-11-10T11:44:37.443Z knex:query ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.443Z knex:bindings [] trx8
2020-11-10T11:44:37.445Z knex:query ALTER TABLE "user_course_progress" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.445Z knex:bindings [] trx8
2020-11-10T11:44:37.446Z knex:query ALTER TABLE "user_course_service_progress" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.446Z knex:bindings [] trx8
2020-11-10T11:44:37.449Z knex:query ALTER TABLE "UserCourseSettings" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.449Z knex:bindings [] trx8
2020-11-10T11:44:37.451Z knex:query ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.451Z knex:bindings [] trx8
2020-11-10T11:44:37.454Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.454Z knex:bindings [] trx8
2020-11-10T11:44:37.456Z knex:query ALTER TABLE "verified_user" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP; trx8
2020-11-10T11:44:37.456Z knex:bindings [] trx8
2020-11-10T11:44:37.457Z knex:query CREATE EXTENSION IF NOT EXISTS "uuid-ossp"; trx8
2020-11-10T11:44:37.457Z knex:bindings [] trx8
2020-11-10T11:44:37.458Z knex:query ALTER TABLE "completion" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.458Z knex:bindings [] trx8
2020-11-10T11:44:37.460Z knex:query ALTER TABLE "completion_registered" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.460Z knex:bindings [] trx8
2020-11-10T11:44:37.461Z knex:query ALTER TABLE "course" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.461Z knex:bindings [] trx8
2020-11-10T11:44:37.463Z knex:query ALTER TABLE "course_alias" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.463Z knex:bindings [] trx8
2020-11-10T11:44:37.465Z knex:query ALTER TABLE "course_organization" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.465Z knex:bindings [] trx8
2020-11-10T11:44:37.467Z knex:query ALTER TABLE "course_translation" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.467Z knex:bindings [] trx8
2020-11-10T11:44:37.470Z knex:query ALTER TABLE "course_variant" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.470Z knex:bindings [] trx8
2020-11-10T11:44:37.472Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.472Z knex:bindings [] trx8
2020-11-10T11:44:37.474Z knex:query ALTER TABLE "email_template" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.474Z knex:bindings [] trx8
2020-11-10T11:44:37.476Z knex:query ALTER TABLE "exercise" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.476Z knex:bindings [] trx8
2020-11-10T11:44:37.479Z knex:query ALTER TABLE "exercise_completion" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.479Z knex:bindings [] trx8
2020-11-10T11:44:37.481Z knex:query ALTER TABLE "exercise_completion_required_actions" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.481Z knex:bindings [] trx8
2020-11-10T11:44:37.483Z knex:query ALTER TABLE "image" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.483Z knex:bindings [] trx8
2020-11-10T11:44:37.484Z knex:query ALTER TABLE "open_university_registration_link" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.484Z knex:bindings [] trx8
2020-11-10T11:44:37.485Z knex:query ALTER TABLE "organization" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.485Z knex:bindings [] trx8
2020-11-10T11:44:37.487Z knex:query ALTER TABLE "organization_translation" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.487Z knex:bindings [] trx8
2020-11-10T11:44:37.488Z knex:query ALTER TABLE "service" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.488Z knex:bindings [] trx8
2020-11-10T11:44:37.489Z knex:query ALTER TABLE "study_module" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.489Z knex:bindings [] trx8
2020-11-10T11:44:37.490Z knex:query ALTER TABLE "study_module_translation" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.490Z knex:bindings [] trx8
2020-11-10T11:44:37.492Z knex:query ALTER TABLE "user" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.492Z knex:bindings [] trx8
2020-11-10T11:44:37.493Z knex:query ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.493Z knex:bindings [] trx8
2020-11-10T11:44:37.495Z knex:query ALTER TABLE "user_course_progress" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.495Z knex:bindings [] trx8
2020-11-10T11:44:37.498Z knex:query ALTER TABLE "user_course_service_progress" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.498Z knex:bindings [] trx8
2020-11-10T11:44:37.500Z knex:query ALTER TABLE "UserCourseSettings" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.500Z knex:bindings [] trx8
2020-11-10T11:44:37.503Z knex:query ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.503Z knex:bindings [] trx8
2020-11-10T11:44:37.505Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.505Z knex:bindings [] trx8
2020-11-10T11:44:37.508Z knex:query ALTER TABLE "verified_user" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4(); trx8
2020-11-10T11:44:37.509Z knex:bindings [] trx8
2020-11-10T11:44:37.514Z knex:query ALTER TABLE "completion" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.514Z knex:bindings [] trx8
2020-11-10T11:44:37.516Z knex:query ALTER TABLE "completion_registered" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.516Z knex:bindings [] trx8
2020-11-10T11:44:37.518Z knex:query ALTER TABLE "course" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.518Z knex:bindings [] trx8
2020-11-10T11:44:37.519Z knex:query ALTER TABLE "course_alias" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.519Z knex:bindings [] trx8
2020-11-10T11:44:37.520Z knex:query ALTER TABLE "course_organization" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.520Z knex:bindings [] trx8
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_template" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'KgsHDwk8k3-yR4Ta-j_GW'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'DGFS0gupaDkRl_OEXiEZl'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'fuqtXV2M_j2HUwHXHu-vQ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "image" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'nKgIucbETYKdGIG8xzx0H'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "open_university_registration_link" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'IACwz23LwcksUnzzmP7jz'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '_I5gIljXfuWJT1-p9VbWs'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'KzdfJncAHr9qfwpYduVcI'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "service" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'e9W0QWu-KLBh6iUb7thEX'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '7zQdqxmrbze7b4e4cfLsN'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module_translation" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'SfeLHUN7BAQ1yuPIeYVFf'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'XzglRh0ZOkH34jFCn1nj0'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: '3zB76aO5XbbOVtV3ibbQJ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'dV1rW7dyjeOVYHLSvjolp'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'SCpswl0cP1EHeqJ1aB5dZ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'oeGBuli5cAJWdC8XvuFcq'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'xFYelhm2VNqK9C2et4h79'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'haU9oOiGo0c0zxzbGv-dC'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" ALTER COLUMN "updated_at" SET DEFAULT CURRENT_TIMESTAMP;',
      bindings: [],
      options: {},
      __knexQueryUid: 'UNodPuoQv8LvldxPKA6ye'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp";',
      bindings: [],
      options: {},
      __knexQueryUid: 'n70hNIC-SdeEcqIgUpv-6'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'mleii8OwBKm1myVSzHgxS'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'OSFCFUJj92OBaqPaYl6X0'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'Jo_4v3eoKG3FjENiGunF9'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_alias" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'jyKJWO9K6XDg9WiEqFgYf'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: '0iNjB6_1wYkECizDwPP-Y'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_translation" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'x28NJ6sF0WCVU-dl09qVY'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_variant" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'L9B6jLiGOqRioauv6Zs_p'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: '-3eTpxEUQY7tYW9j4l1e8'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_template" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'lpXCoKfn4AL0SpIKeDSX6'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'DSjWc-zJ7N-m3ycMx8s6t'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'GTgLZrHc00gJMo_Yxv1ps'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion_required_actions" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'p8aa6k305-gq8VjlKJTJG'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "image" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'fb15CeJIsvu4l6mhFATpy'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "open_university_registration_link" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'vRkdbU-dKFtf-z_84fjmg'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'fj2ceLdtKLWQv9TriWKSf'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization_translation" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'pXYhNvLIUBYk7nbWCu1UU'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "service" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'f_FHrKudVft3OUMtFpdGn'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'zefoV4eSArOhkkNi4Pzka'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module_translation" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'AJHEnk3FbJJBz38LnJWuG'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'sOPmBat6B20SacWO4UvJ7'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: '3UF9rLZ6ZYze7I_B01599'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'iT4yWWqgX9B1pak8p4ZV_'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'BNIuC7-koF64KEyhg1_Px'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: '_TqcWk0AyTj7LHQVW6BEr'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'NZU8dTYlubHRqqx4CTeBJ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: '7etxcBaG7vhzRSQPRmQjE'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4();',
      bindings: [],
      options: {},
      __knexQueryUid: 'Xb2SXp3kpyovdS-FQsuvT'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Aml7B8t8DxIwFmHapiqXA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'wqHV4KbCTLh24oll2CWPT'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'u4OHWJ4wGuPCSHLTDL9xQ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_alias" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'iiGve6TiryUJaS5mF3tYn'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ot4JWrojaFeMwUeU_PO7z'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:37.522Z knex:query ALTER TABLE "course_translation" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.522Z knex:bindings [] trx8
2020-11-10T11:44:37.523Z knex:query ALTER TABLE "course_variant" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.523Z knex:bindings [] trx8
2020-11-10T11:44:37.524Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.524Z knex:bindings [] trx8
2020-11-10T11:44:37.526Z knex:query ALTER TABLE "email_template" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.526Z knex:bindings [] trx8
2020-11-10T11:44:37.528Z knex:query ALTER TABLE "exercise" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.528Z knex:bindings [] trx8
2020-11-10T11:44:37.530Z knex:query ALTER TABLE "exercise_completion" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.530Z knex:bindings [] trx8
2020-11-10T11:44:37.532Z knex:query ALTER TABLE "image" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.532Z knex:bindings [] trx8
2020-11-10T11:44:37.534Z knex:query ALTER TABLE "open_university_registration_link" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.534Z knex:bindings [] trx8
2020-11-10T11:44:37.536Z knex:query ALTER TABLE "organization" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.536Z knex:bindings [] trx8
2020-11-10T11:44:37.538Z knex:query ALTER TABLE "organization_translation" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.538Z knex:bindings [] trx8
2020-11-10T11:44:37.540Z knex:query ALTER TABLE "service" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.540Z knex:bindings [] trx8
2020-11-10T11:44:37.542Z knex:query ALTER TABLE "study_module" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.542Z knex:bindings [] trx8
2020-11-10T11:44:37.543Z knex:query ALTER TABLE "study_module_translation" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.544Z knex:bindings [] trx8
2020-11-10T11:44:37.545Z knex:query ALTER TABLE "user" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.545Z knex:bindings [] trx8
2020-11-10T11:44:37.546Z knex:query ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.546Z knex:bindings [] trx8
2020-11-10T11:44:37.548Z knex:query ALTER TABLE "user_course_progress" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.548Z knex:bindings [] trx8
2020-11-10T11:44:37.549Z knex:query ALTER TABLE "user_course_service_progress" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.549Z knex:bindings [] trx8
2020-11-10T11:44:37.549Z knex:query ALTER TABLE "UserCourseSettings" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.549Z knex:bindings [] trx8
2020-11-10T11:44:37.551Z knex:query ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.551Z knex:bindings [] trx8
2020-11-10T11:44:37.551Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.551Z knex:bindings [] trx8
2020-11-10T11:44:37.552Z knex:query ALTER TABLE "verified_user" ALTER COLUMN "created_at" SET NOT NULL; trx8
2020-11-10T11:44:37.552Z knex:bindings [] trx8
2020-11-10T11:44:37.553Z knex:query ALTER TABLE "completion" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.553Z knex:bindings [] trx8
2020-11-10T11:44:37.555Z knex:query ALTER TABLE "completion_registered" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.555Z knex:bindings [] trx8
2020-11-10T11:44:37.556Z knex:query ALTER TABLE "course" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.556Z knex:bindings [] trx8
2020-11-10T11:44:37.558Z knex:query ALTER TABLE "course_alias" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.558Z knex:bindings [] trx8
2020-11-10T11:44:37.559Z knex:query ALTER TABLE "course_organization" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.559Z knex:bindings [] trx8
2020-11-10T11:44:37.561Z knex:query ALTER TABLE "course_translation" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.561Z knex:bindings [] trx8
2020-11-10T11:44:37.563Z knex:query ALTER TABLE "course_variant" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.563Z knex:bindings [] trx8
2020-11-10T11:44:37.564Z knex:query ALTER TABLE "email_delivery" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.564Z knex:bindings [] trx8
2020-11-10T11:44:37.565Z knex:query ALTER TABLE "email_template" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.565Z knex:bindings [] trx8
2020-11-10T11:44:37.565Z knex:query ALTER TABLE "exercise" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.565Z knex:bindings [] trx8
2020-11-10T11:44:37.566Z knex:query ALTER TABLE "exercise_completion" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.566Z knex:bindings [] trx8
2020-11-10T11:44:37.568Z knex:query ALTER TABLE "image" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.568Z knex:bindings [] trx8
2020-11-10T11:44:37.569Z knex:query ALTER TABLE "open_university_registration_link" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.569Z knex:bindings [] trx8
2020-11-10T11:44:37.570Z knex:query ALTER TABLE "organization" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.570Z knex:bindings [] trx8
2020-11-10T11:44:37.571Z knex:query ALTER TABLE "organization_translation" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.571Z knex:bindings [] trx8
2020-11-10T11:44:37.573Z knex:query ALTER TABLE "service" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.573Z knex:bindings [] trx8
2020-11-10T11:44:37.575Z knex:query ALTER TABLE "study_module" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.575Z knex:bindings [] trx8
2020-11-10T11:44:37.577Z knex:query ALTER TABLE "study_module_translation" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.577Z knex:bindings [] trx8
2020-11-10T11:44:37.579Z knex:query ALTER TABLE "user" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.579Z knex:bindings [] trx8
2020-11-10T11:44:37.581Z knex:query ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.581Z knex:bindings [] trx8
2020-11-10T11:44:37.583Z knex:query ALTER TABLE "user_course_progress" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.583Z knex:bindings [] trx8
2020-11-10T11:44:37.585Z knex:query ALTER TABLE "user_course_service_progress" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.585Z knex:bindings [] trx8
2020-11-10T11:44:37.588Z knex:query ALTER TABLE "UserCourseSettings" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.588Z knex:bindings [] trx8
2020-11-10T11:44:37.590Z knex:query ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.590Z knex:bindings [] trx8
2020-11-10T11:44:37.592Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.592Z knex:bindings [] trx8
2020-11-10T11:44:37.594Z knex:query ALTER TABLE "verified_user" ALTER COLUMN "updated_at" SET NOT NULL; trx8
2020-11-10T11:44:37.594Z knex:bindings [] trx8
2020-11-10T11:44:37.595Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.595Z knex:bindings [
  1,
  2020-11-10T11:44:37.595Z,
  '20200811114359_alter-tables-default-values.ts'
] trx8
2020-11-10T11:44:37.597Z knex:query ALTER TABLE "course" ALTER COLUMN "status" DROP DEFAULT; trx8
2020-11-10T11:44:37.597Z knex:bindings [] trx8
2020-11-10T11:44:37.598Z knex:query ALTER TABLE "course" ALTER COLUMN "status" TYPE "CourseStatus" USING "status"::text::"CourseStatus"; trx8
2020-11-10T11:44:37.599Z knex:bindings [] trx8
2020-11-10T11:44:37.609Z knex:query ALTER TABLE "course" ALTER COLUMN "status" SET DEFAULT 'Upcoming'; trx8
2020-11-10T11:44:37.609Z knex:bindings [] trx8
2020-11-10T11:44:37.611Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "role" DROP DEFAULT; trx8
2020-11-10T11:44:37.611Z knex:bindings [] trx8
2020-11-10T11:44:37.613Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "role" TYPE "OrganizationRole" USING "role"::text::"OrganizationRole"; trx8
2020-11-10T11:44:37.613Z knex:bindings [] trx8
2020-11-10T11:44:37.618Z knex:query ALTER TABLE "user_organization" ALTER COLUMN "role" SET DEFAULT 'Student'; trx8
2020-11-10T11:44:37.618Z knex:bindings [] trx8
2020-11-10T11:44:37.620Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.620Z knex:bindings [
  1,
  2020-11-10T11:44:37.619Z,
  '20200811120715_alter-tables-convert-to-enums.ts'
] trx8
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_translation" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'AaSsKmCxTD7jeg113A4XM'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_variant" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'OwOQk_0Shz7dlp9mzvyd7'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '6PtLMTVOlno4eAsoWxeR7'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_template" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '5rvxqYFUcYeRluRoq9WF1'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'tcdaieMbWQyGZNpEut22a'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'lFBBQpQI7pOKcfz401fAI'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "image" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'yC1sHW5iXD3iLOLhafy1Z'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "open_university_registration_link" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'fF7Ba3CRWUhgjnHf7trmf'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'xmQLKo4Kxxgk6jOaYVT4E'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization_translation" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'bbd08b11IMyfEZ621fI-W'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "service" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '_iLus1Ga7cnbieqWZGND3'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Sg9nU9BxDkNR8K4x1ly72'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module_translation" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'fxEikbkJJw25vQIF6w-St'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'jzOaLAWPyyqvJk8M07qqu'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'OIbReMYz_VamioKHHFHvj'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'HP7ietOEPovp9NmCB4sky'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'aPb2Bv2ff-HN-LMbTiPXJ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'iAvX5kkqgkHhIhuoGs_Mc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'n9GGOUbtPZ0TlzeOGhLlA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'knM01tT6LlLHN-_8JTzz5'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" ALTER COLUMN "created_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'LoL-sEmLVgVrHjZDEYtdc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '3y-v4xlQKb31pU-pVctbW'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "completion_registered" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'vSh5jZXYoLSHB2gY98aNA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'PGysCczrJ_qjGPEM4XMix'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_alias" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'rBtKBl-3AG730UBgmclWR'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_organization" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'qOcT5srfrN6Em36CPqZSS'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_translation" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'BUSkUHxFGP9iAGscW5Ia5'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course_variant" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'qs20xe6ODRCgfi12SF6UA'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_delivery" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'ZCQRpZyirsPthJpLGQ3RY'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "email_template" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'OtyrDxprVBnlSyAMY4uEy'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'WiIiAxgpTdTbLe69rdfgm'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "exercise_completion" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'R6E5EDuYUdIHHDIW6TkPP'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "image" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '_DKzmfBpZrqXdlaTtoht8'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "open_university_registration_link" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'EoG4iUqu44sBrnX0h7jk_'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'A7Zz6FxWIv9h3-ltIc0X6'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "organization_translation" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'zpapgq-MeGdb_kPpPxhU4'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "service" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'YyF269J9w-pMwA92rm0pm'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Pekpw1liDaQO9o4ghu60E'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "study_module_translation" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '24R96hNfE9q1pw5D3B04a'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'f_C2-7cNGzVGYy1zfB9EU'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserAppDatumConfig" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '2OzfAbvYWfXn_faNc5U5E'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'wIORtq8TijuFTCNk6xn9J'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'L-dcDvXvqpoEgByaXH8oM'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'yabwyAPDQPVdMZOByC9eU'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_settings_visibility" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: '9HYbkC6AwPIqqIKFq1XZc'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'CvlLeTKidabPJm4oeYpFt'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "verified_user" ALTER COLUMN "updated_at" SET NOT NULL;',
      bindings: [],
      options: {},
      __knexQueryUid: 'UkSI8kc0JlHHJ0tdow-JT'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.595Z,
        '20200811114359_alter-tables-default-values.ts'
      ],
      __knexQueryUid: 'ITDV92k3JYfclsyU79YWt',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "status" DROP DEFAULT;',
      bindings: [],
      options: {},
      __knexQueryUid: 'BT47PmopPFXYadRW5JXlE'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "course" ALTER COLUMN "status" TYPE "CourseStatus" USING "status"::text::"CourseStatus";',
      bindings: [],
      options: {},
      __knexQueryUid: 'hDBQZHIw8OhBU4j-eHFhq'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: `ALTER TABLE "course" ALTER COLUMN "status" SET DEFAULT 'Upcoming';`,
      bindings: [],
      options: {},
      __knexQueryUid: '9pyGy1r5iXnoskvBzUQl6'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" ALTER COLUMN "role" DROP DEFAULT;',
      bindings: [],
      options: {},
      __knexQueryUid: 'WO-1KTlClEg7KzT1gAeTu'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_organization" ALTER COLUMN "role" TYPE "OrganizationRole" USING "role"::text::"OrganizationRole";',
      bindings: [],
      options: {},
      __knexQueryUid: '5YBPZ2sqJ79EQkOOyoceh'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: `ALTER TABLE "user_organization" ALTER COLUMN "role" SET DEFAULT 'Student';`,
      bindings: [],
      options: {},
      __knexQueryUid: 'ezuDBxlMoJ1Pw7GCG2DHC'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.619Z,
        '20200811120715_alter-tables-convert-to-enums.ts'
      ],
      __knexQueryUid: '2d7Xvbp4z-tYrWYRhdAA5',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

2020-11-10T11:44:37.622Z knex:query ALTER TABLE "_CourseToService" RENAME TO "_course_to_service"; trx8
2020-11-10T11:44:37.622Z knex:bindings [] trx8
2020-11-10T11:44:37.624Z knex:query ALTER TABLE "_StudyModuleToCourse" RENAME TO "_study_module_to_course"; trx8
2020-11-10T11:44:37.624Z knex:bindings [] trx8
2020-11-10T11:44:37.626Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.626Z knex:bindings [
  1,
  2020-11-10T11:44:37.624Z,
  '20200811152243_alter-tables-rename-join-tables.ts'
] trx8
2020-11-10T11:44:37.628Z knex:query ALTER TABLE "user_course_progress" ALTER COLUMN progress TYPE JSON USING "progress"::json; trx8
2020-11-10T11:44:37.628Z knex:bindings [] trx8
2020-11-10T11:44:37.630Z knex:query ALTER TABLE "user_course_service_progress" ALTER COLUMN progress TYPE JSON USING "progress"::json; trx8
2020-11-10T11:44:37.630Z knex:bindings [] trx8
2020-11-10T11:44:37.631Z knex:query ALTER TABLE "UserCourseSettings" ALTER COLUMN other TYPE JSON using "other"::json; trx8
2020-11-10T11:44:37.631Z knex:bindings [] trx8
2020-11-10T11:44:37.639Z knex:query ALTER TABLE "UserCourseSettings" RENAME TO "user_course_setting"; trx8
2020-11-10T11:44:37.639Z knex:bindings [] trx8
2020-11-10T11:44:37.641Z knex:query ALTER TABLE "UserAppDatumConfig" RENAME TO "user_app_datum_config"; trx8
2020-11-10T11:44:37.641Z knex:bindings [] trx8
2020-11-10T11:44:37.644Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.644Z knex:bindings [
  1,
  2020-11-10T11:44:37.642Z,
  '20200813150438_alter-tables-convert-to-json-rename-camelcase-drop-recreate-view.ts'
] trx8
2020-11-10T11:44:37.646Z knex:query select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema() trx8
2020-11-10T11:44:37.646Z knex:bindings [ 'course', 'upcoming_active_link' ] trx8
2020-11-10T11:44:37.654Z knex:query alter table "course" add column "upcoming_active_link" boolean default '0' trx8
2020-11-10T11:44:37.654Z knex:bindings [] trx8
2020-11-10T11:44:37.657Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.657Z knex:bindings [
  1,
  2020-11-10T11:44:37.655Z,
  '20200818134829_alter-table-course-add-upcoming-active-link.ts'
] trx8
2020-11-10T11:44:37.659Z knex:query ALTER TABLE course
    ADD COLUMN IF NOT EXISTS tier INTEGER;
   trx8
2020-11-10T11:44:37.659Z knex:bindings [] trx8
2020-11-10T11:44:37.662Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.662Z knex:bindings [
  1,
  2020-11-10T11:44:37.660Z,
  '20200918114920_alter-table-course-add-tier.ts'
] trx8
2020-11-10T11:44:37.664Z knex:query select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema() trx8
2020-11-10T11:44:37.664Z knex:bindings [ 'exercise_completion', 'attempted' ] trx8
2020-11-10T11:44:37.673Z knex:query alter table "exercise_completion" add column "attempted" boolean null default null trx8
2020-11-10T11:44:37.673Z knex:bindings [] trx8
2020-11-10T11:44:37.675Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.676Z knex:bindings [
  1,
  2020-11-10T11:44:37.674Z,
  '20200924133928_alter-table-exercise-completion-add-attempted.ts'
] trx8
2020-11-10T11:44:37.678Z knex:query 
    ALTER TABLE user_course_progress 
      ADD COLUMN IF NOT EXISTS extra JSON;  
   trx8
2020-11-10T11:44:37.678Z knex:bindings [] trx8
2020-11-10T11:44:37.681Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.681Z knex:bindings [
  1,
  2020-11-10T11:44:37.679Z,
  '20200929115223_alter-table-user-course-progress-extra.ts'
] trx8
2020-11-10T11:44:37.687Z knex:query ALTER TABLE completion
    ADD COLUMN IF NOT EXISTS tier INTEGER;
   trx8
2020-11-10T11:44:37.687Z knex:bindings [] trx8
2020-11-10T11:44:37.688Z knex:query insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?) trx8
2020-11-10T11:44:37.688Z knex:bindings [
  1,
  2020-11-10T11:44:37.688Z,
  '20201026102610_alter-table-completion-add-tier.ts'
] trx8
2020-11-10T11:44:37.690Z knex:query update "test_Guilmt1fizhMAJDjsS69a"."knex_migrations_lock" set "is_locked" = ? trx8
2020-11-10T11:44:37.690Z knex:bindings [ 0 ] trx8
2020-11-10T11:44:37.691Z knex:query COMMIT; trx8
2020-11-10T11:44:37.691Z knex:bindings undefined trx8
2020-11-10T11:44:37.694Z knex:tx trx6: releasing connection
2020-11-10T11:44:37.694Z knex:client releasing connection to pool: __knexUid5
  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "_CourseToService" RENAME TO "_course_to_service";',
      bindings: [],
      options: {},
      __knexQueryUid: 'VXThf0khNyOUhvJyxDFxy'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "_StudyModuleToCourse" RENAME TO "_study_module_to_course";',
      bindings: [],
      options: {},
      __knexQueryUid: 'i10e3k3fIgO_9Ua0vpgxE'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.624Z,
        '20200811152243_alter-tables-rename-join-tables.ts'
      ],
      __knexQueryUid: 'G9x0v1dw_4b8kNGoHr8oZ',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_progress" ALTER COLUMN progress TYPE JSON USING "progress"::json;',
      bindings: [],
      options: {},
      __knexQueryUid: 'Su5SQKYFUXHssCVMB1UYr'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "user_course_service_progress" ALTER COLUMN progress TYPE JSON USING "progress"::json;',
      bindings: [],
      options: {},
      __knexQueryUid: 'TtZNr-meb4JazNTA9-tBy'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" ALTER COLUMN other TYPE JSON using "other"::json;',
      bindings: [],
      options: {},
      __knexQueryUid: 'zQxI4IAaLrmkUWgYXrx-F'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserCourseSettings" RENAME TO "user_course_setting";',
      bindings: [],
      options: {},
      __knexQueryUid: '1XO_3nAuoshSGshqutaTi'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE "UserAppDatumConfig" RENAME TO "user_app_datum_config";',
      bindings: [],
      options: {},
      __knexQueryUid: '54mabZC_7xfIn0xVX7nbJ'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.642Z,
        '20200813150438_alter-tables-convert-to-json-rename-camelcase-drop-recreate-view.ts'
      ],
      __knexQueryUid: 'DBh69oDont-TZeGLjAh3C',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema()',
        bindings: [ 'course', 'upcoming_active_link' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: `alter table "course" add column "upcoming_active_link" boolean default '0'`,
        bindings: []
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.655Z,
        '20200818134829_alter-table-course-add-upcoming-active-link.ts'
      ],
      __knexQueryUid: 'AVx91zi-yYAxZupKrcH-k',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE course\n    ADD COLUMN IF NOT EXISTS tier INTEGER;\n  ',
      bindings: [],
      options: {},
      __knexQueryUid: 'MovxzTWpWVOWf_dBjDBYW'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.660Z,
        '20200918114920_alter-table-course-add-tier.ts'
      ],
      __knexQueryUid: 'biGr56Qs-xeZ4WnOsy5hU',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'select * from information_schema.columns where table_name = ? and column_name = ? and table_schema = current_schema()',
        bindings: [ 'exercise_completion', 'attempted' ],
        output: [Function: output]
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    [
      {
        sql: 'alter table "exercise_completion" add column "attempted" boolean null default null',
        bindings: []
      }
    ]

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.674Z,
        '20200924133928_alter-table-exercise-completion-add-attempted.ts'
      ],
      __knexQueryUid: 'MjaHp62o-rNZsuIm_AYqM',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: '\n' +
        '    ALTER TABLE user_course_progress \n' +
        '      ADD COLUMN IF NOT EXISTS extra JSON;  \n' +
        '  ',
      bindings: [],
      options: {},
      __knexQueryUid: 'xPM9J36LLpSjw3Aty512N'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.679Z,
        '20200929115223_alter-table-user-course-progress-extra.ts'
      ],
      __knexQueryUid: 'RmsHnm2K52x3szGmEz-Bk',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'raw',
      sql: 'ALTER TABLE completion\n    ADD COLUMN IF NOT EXISTS tier INTEGER;\n  ',
      bindings: [],
      options: {},
      __knexQueryUid: '09gGeQ4kL5imnr-uKCkLU'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'insert',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [
        1,
        2020-11-10T11:44:37.688Z,
        '20201026102610_alter-table-completion-add-tier.ts'
      ],
      __knexQueryUid: 'Iv7al1PATOg9a05Yt14Ki',
      sql: 'insert into "test_Guilmt1fizhMAJDjsS69a"."knex_migrations" ("batch", "migration_time", "name") values (?, ?, ?)',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    {
      method: 'update',
      options: {},
      timeout: false,
      cancelOnTimeout: false,
      bindings: [ 0 ],
      __knexQueryUid: 'RmDvrOOBze-h0eO1-eARg',
      sql: 'update "test_Guilmt1fizhMAJDjsS69a"."knex_migrations_lock" set "is_locked" = ?',
      returning: undefined
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)

  console.log
    creating prisma postgres://postgres:postgres@localhost:5432/testing?schema=test_Guilmt1fizhMAJDjsS69a

      at Object.before (tests/__helpers.ts:154:15)
          at runMicrotasks (<anonymous>)

  console.error
    2020-11-10T11:44:37.699Z prisma-client {
      engineConfig: {
        cwd: '/home/pyykkomi/duuni/mooc.fi/backend/prisma',
        enableDebugLogs: false,
        enableEngineDebugMode: undefined,
        datamodelPath: '/home/pyykkomi/duuni/mooc.fi/backend/node_modules/.prisma/client/schema.prisma',
        prismaPath: undefined,
        engineEndpoint: undefined,
        generator: {
          name: 'client',
          provider: 'prisma-client-js',
          output: '/home/pyykkomi/duuni/mooc.fi/backend/node_modules/@prisma/client',
          binaryTargets: [],
          previewFeatures: [],
          config: {}
        },
        showColors: false,
        logLevel: undefined,
        logQueries: undefined,
        flags: [],
        clientVersion: '2.10.0',
        enableExperimental: [],
        useUds: undefined
      }
    }

      153 |       // Construct a new Prisma Client connected to the generated Postgres schema
      154 |       console.log(`creating prisma ${databaseUrl}`)
    > 155 |       prisma = new PrismaClient({
          |                ^
      156 |         datasources: { db: { url: databaseUrl } },
      157 |       })
      158 |       return {

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at new NewPrismaClient (node_modules/@prisma/client/runtime/index.js:15063:9)
      at Object.before (tests/__helpers.ts:155:16)
          at runMicrotasks (<anonymous>)

Tue, 10 Nov 2020 11:44:37 GMT express:application set "x-powered-by" to true
Tue, 10 Nov 2020 11:44:37 GMT express:application set "etag" to 'weak'
Tue, 10 Nov 2020 11:44:37 GMT express:application set "etag fn" to [Function: generateETag]
Tue, 10 Nov 2020 11:44:37 GMT express:application set "env" to 'test'
Tue, 10 Nov 2020 11:44:37 GMT express:application set "query parser" to 'extended'
Tue, 10 Nov 2020 11:44:37 GMT express:application set "query parser fn" to [Function: parseExtendedQueryString]
Tue, 10 Nov 2020 11:44:37 GMT express:application set "subdomain offset" to 2
Tue, 10 Nov 2020 11:44:37 GMT express:application set "trust proxy" to false
Tue, 10 Nov 2020 11:44:37 GMT express:application set "trust proxy fn" to [Function: trustNone]
Tue, 10 Nov 2020 11:44:37 GMT express:application booting in test mode
Tue, 10 Nov 2020 11:44:37 GMT express:application set "view" to [Function: View]
Tue, 10 Nov 2020 11:44:37 GMT express:application set "views" to '/home/pyykkomi/duuni/mooc.fi/backend/views'
Tue, 10 Nov 2020 11:44:37 GMT express:application set "jsonp callback name" to 'callback'
Tue, 10 Nov 2020 11:44:37 GMT express:router use '/' query
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:37 GMT express:router use '/' expressInit
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:37 GMT express:router use '/' corsMiddleware
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:37 GMT express:router:route new '/api/completions/:course'
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/api/completions/:course'
Tue, 10 Nov 2020 11:44:37 GMT express:router:route get '/api/completions/:course'
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:37 GMT express:router:route new '/api/usercoursesettingscount/:course/:language'
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/api/usercoursesettingscount/:course/:language'
Tue, 10 Nov 2020 11:44:37 GMT express:router:route get '/api/usercoursesettingscount/:course/:language'
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:37 GMT express:router:route new '/api/progress/:id'
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/api/progress/:id'
Tue, 10 Nov 2020 11:44:37 GMT express:router:route get '/api/progress/:id'
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:37 GMT express:router:route new '/api/progressv2/:id'
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/api/progressv2/:id'
Tue, 10 Nov 2020 11:44:37 GMT express:router:route get '/api/progressv2/:id'
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:37 GMT express:router:route new '/api/tierprogress/:id'
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/api/tierprogress/:id'
Tue, 10 Nov 2020 11:44:37 GMT express:router:route get '/api/tierprogress/:id'
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:37 GMT express:router use '/' <anonymous>
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:37 GMT express:router use '/.well-known/apollo/server-health' <anonymous>
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/.well-known/apollo/server-health'
Tue, 10 Nov 2020 11:44:37 GMT express:router use '/' corsMiddleware
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:37 GMT express:router use '/' jsonParser
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:37 GMT express:router use '/' <anonymous>
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:37 GMT express:router use '/' <anonymous>
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/'
Tue, 10 Nov 2020 11:44:37 GMT express:router use '/' router
Tue, 10 Nov 2020 11:44:37 GMT express:router:layer new '/'
2020-11-10T11:44:37.809Z engine { cwd: '/home/pyykkomi/duuni/mooc.fi/backend/prisma' }
2020-11-10T11:44:37.811Z engine {
  dotPrismaPath: '/home/pyykkomi/duuni/mooc.fi/backend/node_modules/.prisma/client/query-engine-debian-openssl-1.1.x'
}
2020-11-10T11:44:37.813Z engine { flags: [ '--enable-raw-queries' ] }
2020-11-10T11:44:37.813Z engine port: 38653
  console.log
    _schemaName test_Guilmt1fizhMAJDjsS69a

      at Object.before (tests/__helpers.ts:89:15)
          at runMicrotasks (<anonymous>)

  console.log
    testcontext before each 3

      at Object.<anonymous> (tests/__helpers.ts:61:13)
          at runMicrotasks (<anonymous>)

  console.error
    2020-11-10T11:44:37.802Z prisma-client Prisma Client call:

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at NewPrismaClient._executeRequest (node_modules/@prisma/client/runtime/index.js:15496:9)
      at node_modules/@prisma/client/runtime/index.js:15431:52
      at NewPrismaClient._request (node_modules/@prisma/client/runtime/index.js:15431:25)

  console.error
    2020-11-10T11:44:37.804Z prisma-client prisma.user.create({
      data: {
        upstream_id: 1,
        administrator: false,
        email: 'e@mail.com',
        first_name: 'first',
        last_name: 'last',
        username: 'user'
      }
    })

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at NewPrismaClient._executeRequest (node_modules/@prisma/client/runtime/index.js:15497:9)
      at node_modules/@prisma/client/runtime/index.js:15431:52
      at NewPrismaClient._request (node_modules/@prisma/client/runtime/index.js:15431:25)

  console.error
    2020-11-10T11:44:37.805Z prisma-client Generated request:

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at NewPrismaClient._executeRequest (node_modules/@prisma/client/runtime/index.js:15503:9)
      at node_modules/@prisma/client/runtime/index.js:15431:52
      at NewPrismaClient._request (node_modules/@prisma/client/runtime/index.js:15431:25)

  console.error
    2020-11-10T11:44:37.807Z prisma-client mutation {
      createOneUser(data: {
        upstream_id: 1
        administrator: false
        email: "e@mail.com"
        first_name: "first"
        last_name: "last"
        username: "user"
      }) {
        administrator
        created_at
        email
        first_name
        id
        last_name
        real_student_number
        research_consent
        student_number
        updated_at
        upstream_id
        username
      }
    }

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at NewPrismaClient._executeRequest (node_modules/@prisma/client/runtime/index.js:15504:9)
      at node_modules/@prisma/client/runtime/index.js:15431:52
      at NewPrismaClient._request (node_modules/@prisma/client/runtime/index.js:15431:25)

  console.error
    2020-11-10T11:44:37.812Z plusX Execution permissions of /home/pyykkomi/duuni/mooc.fi/backend/node_modules/.prisma/client/query-engine-debian-openssl-1.1.x are fine

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at Object.plusX (node_modules/@prisma/client/runtime/index.js:4148:7)
      at NodeEngine3.getPrismaPath (node_modules/@prisma/client/runtime/index.js:9315:16)
      at node_modules/@prisma/client/runtime/index.js:9394:30

2020-11-10T11:44:37.860Z engine stdout {
  timestamp: 'Nov 10 13:44:37.859',
  level: 'INFO',
  fields: { message: 'Starting a postgresql pool with 17 connections.' },
  target: 'quaint::pooled'
}
2020-11-10T11:44:37.891Z engine stdout {
  timestamp: 'Nov 10 13:44:37.891',
  level: 'INFO',
  fields: { message: 'Started http server' },
  target: 'query_engine::server'
}
2020-11-10T11:44:37.896Z engine {
  dotPrismaPath: '/home/pyykkomi/duuni/mooc.fi/backend/node_modules/.prisma/client/query-engine-debian-openssl-1.1.x'
}
2020-11-10T11:44:37.920Z engine Client Version 2.10.0
2020-11-10T11:44:37.920Z engine Engine Version query-engine af1ae11a423edfb5d24092a85be11fa77c5e499c
Tue, 10 Nov 2020 11:44:37 GMT express:router dispatching POST /
Tue, 10 Nov 2020 11:44:37 GMT express:router query  : /
Tue, 10 Nov 2020 11:44:37 GMT express:router expressInit  : /
Tue, 10 Nov 2020 11:44:37 GMT express:router corsMiddleware  : /
Tue, 10 Nov 2020 11:44:37 GMT express:router router  : /
Tue, 10 Nov 2020 11:44:37 GMT express:router dispatching POST /
Tue, 10 Nov 2020 11:44:37 GMT express:router <anonymous>  : /
Tue, 10 Nov 2020 11:44:37 GMT express:router corsMiddleware  : /
Tue, 10 Nov 2020 11:44:37 GMT express:router jsonParser  : /
Tue, 10 Nov 2020 11:44:37 GMT body-parser:json content-type "application/json"
Tue, 10 Nov 2020 11:44:37 GMT body-parser:json content-encoding "identity"
Tue, 10 Nov 2020 11:44:37 GMT body-parser:json read body
Tue, 10 Nov 2020 11:44:37 GMT body-parser:json parse body
Tue, 10 Nov 2020 11:44:37 GMT body-parser:json parse json
Tue, 10 Nov 2020 11:44:37 GMT express:router <anonymous>  : /
Tue, 10 Nov 2020 11:44:37 GMT express:router <anonymous>  : /
2020-11-10T11:44:37.937Z knex:client acquired connection from pool: __knexUid5
2020-11-10T11:44:37.937Z knex:query DROP SCHEMA IF EXISTS "test_Guilmt1fizhMAJDjsS69a" CASCADE; trx8
2020-11-10T11:44:37.937Z knex:bindings [] trx8
2020-11-10T11:44:37.968Z knex:client releasing connection to pool: __knexUid5
2020-11-10T11:44:37.971Z engine Stopping Prisma engine4
2020-11-10T11:44:37.971Z engine Waiting for start promise
2020-11-10T11:44:37.971Z engine Done waiting for start promise
PASS tests/User.test.ts (5.435 s)
  user queries
    currentUser
      ✓ shows current user when logged in (1576 ms)
      ✓ shows null when not logged in (1413 ms)
  user mutations
    addUser
      ○ skipped creates user correctly
      ○ skipped won't create user with same id
    updateResearchConsent
      ○ skipped updates correctly
      ○ skipped won't update research consent without auth

  console.error
    2020-11-10T11:44:37.897Z plusX Execution permissions of /home/pyykkomi/duuni/mooc.fi/backend/node_modules/.prisma/client/query-engine-debian-openssl-1.1.x are fine

      at Function.Debug2.debug3.log (node_modules/@prisma/client/runtime/index.js:3833:18)
      at debug3 (node_modules/@prisma/client/runtime/index.js:3355:15)
      at newDebug (node_modules/@prisma/client/runtime/index.js:3819:14)
      at Object.plusX (node_modules/@prisma/client/runtime/index.js:4148:7)
      at NodeEngine3.getPrismaPath (node_modules/@prisma/client/runtime/index.js:9315:16)
      at NodeEngine3.version (node_modules/@prisma/client/runtime/index.js:9694:26)
      at node_modules/@prisma/client/runtime/index.js:9589:35

  console.log
    testcontext after each

      at Object.<anonymous> (tests/__helpers.ts:71:13)
          at runMicrotasks (<anonymous>)

  console.log
    dropping schema test_Guilmt1fizhMAJDjsS69a

      at Object.after (tests/__helpers.ts:166:15)

  console.log
    {
      method: 'raw',
      sql: 'DROP SCHEMA IF EXISTS "test_Guilmt1fizhMAJDjsS69a" CASCADE;',
      bindings: [],
      options: {},
      __knexQueryUid: 'B-30HqipLxuITCfOkJXRR'
    }

      at Logger._log (node_modules/knex/lib/logger.js:44:13)
          at runMicrotasks (<anonymous>)

A worker process has failed to exit gracefully and has been force exited. This is likely caused by tests leaking due to improper teardown. Try running with --detectOpenHandles to find leaks.
Test Suites: 1 failed, 2 passed, 3 total
Tests:       1 failed, 4 skipped, 11 passed, 16 total
Snapshots:   2 passed, 2 total
Time:        6.557 s
Ran all test suites.
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! backend@1.0.0 test: `jest`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the backend@1.0.0 test script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /home/pyykkomi/.npm/_logs/2020-11-10T11_44_38_613Z-debug.log
