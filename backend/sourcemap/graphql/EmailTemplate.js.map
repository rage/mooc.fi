{"version":3,"file":"EmailTemplate.js","sourceRoot":"","sources":["../../graphql/EmailTemplate.ts"],"names":[],"mappings":"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","sourcesContent":["import { schema } from \"nexus\"\n\nimport { UserInputError } from \"apollo-server-core\"\nimport { isAdmin } from \"../accessControl\"\n\nschema.objectType({\n  name: \"EmailTemplate\",\n  definition(t) {\n    t.model.id()\n    t.model.created_at()\n    t.model.updated_at()\n    t.model.html_body()\n    t.model.name()\n    t.model.title()\n    t.model.txt_body()\n    t.model.courses()\n    t.model.email_deliveries()\n  },\n})\n\nschema.extendType({\n  type: \"Query\",\n  definition(t) {\n    t.field(\"email_template\", {\n      type: \"EmailTemplate\",\n      nullable: true,\n      args: {\n        id: schema.idArg({ required: true }),\n      },\n      authorize: isAdmin,\n      resolve: (_, { id }, ctx) =>\n        ctx.db.emailTemplate.findOne({\n          where: {\n            id,\n          },\n        }),\n    })\n\n    t.list.field(\"email_templates\", {\n      type: \"EmailTemplate\",\n      authorize: isAdmin,\n      resolve: (_, __, ctx) => ctx.db.emailTemplate.findMany(),\n    })\n  },\n})\n\nschema.extendType({\n  type: \"Mutation\",\n  definition(t) {\n    t.field(\"addEmailTemplate\", {\n      type: \"EmailTemplate\",\n      args: {\n        name: schema.stringArg({ required: true }),\n        html_body: schema.stringArg(),\n        txt_body: schema.stringArg(),\n        title: schema.stringArg(),\n      },\n      authorize: isAdmin,\n      resolve: (_, args, ctx) => {\n        const { name, html_body, txt_body, title } = args\n\n        if (name == \"\") throw new UserInputError(\"Name is empty!\")\n\n        return ctx.db.emailTemplate.create({\n          data: {\n            name,\n            html_body,\n            txt_body,\n            title,\n          },\n        })\n      },\n    })\n\n    t.field(\"updateEmailTemplate\", {\n      type: \"EmailTemplate\",\n      args: {\n        id: schema.idArg({ required: true }),\n        name: schema.stringArg(),\n        html_body: schema.stringArg(),\n        txt_body: schema.stringArg(),\n        title: schema.stringArg(),\n      },\n      authorize: isAdmin,\n      resolve: async (_, args, ctx) => {\n        const { id, name, html_body, txt_body, title } = args\n\n        return ctx.db.emailTemplate.update({\n          where: {\n            id,\n          },\n          data: {\n            name,\n            html_body,\n            txt_body,\n            title,\n          },\n        })\n      },\n    })\n\n    t.field(\"deleteEmailTemplate\", {\n      type: \"EmailTemplate\",\n      args: {\n        id: schema.idArg({ required: true }),\n      },\n      authorize: isAdmin,\n      resolve: (_, { id }, ctx) => {\n        return ctx.db.emailTemplate.delete({ where: { id } })\n      },\n    })\n  },\n})\n"]}