{"version":3,"file":"OpenUniversityRegistrationLink.js","sourceRoot":"","sources":["../../graphql/OpenUniversityRegistrationLink.ts"],"names":[],"mappings":"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","sourcesContent":["import { schema } from \"nexus\"\n\nimport { isAdmin } from \"../accessControl\"\n\nschema.objectType({\n  name: \"OpenUniversityRegistrationLink\",\n  definition(t) {\n    t.model.id()\n    t.model.created_at()\n    t.model.updated_at()\n    t.model.course_id()\n    t.model.course()\n    t.model.course_code()\n    t.model.language()\n    t.model.link()\n    t.model.start_date()\n    t.model.stop_date()\n  },\n})\n\nschema.inputObjectType({\n  name: \"OpenUniversityRegistrationLinkCreateInput\",\n  definition(t) {\n    t.string(\"course_code\", { required: true })\n    t.string(\"language\", { required: true })\n    t.string(\"link\", { required: false })\n    t.field(\"start_date\", { type: \"DateTime\" })\n    t.field(\"stop_date\", { type: \"DateTime\" })\n  },\n})\n\nschema.inputObjectType({\n  name: \"OpenUniversityRegistrationLinkUpsertInput\",\n  definition(t) {\n    t.id(\"id\", { required: false })\n    t.string(\"course_code\", { required: true })\n    t.string(\"language\", { required: true })\n    t.string(\"link\", { required: false })\n    t.field(\"start_date\", { type: \"DateTime\" })\n    t.field(\"stop_date\", { type: \"DateTime\" })\n  },\n})\n\nschema.extendType({\n  type: \"Query\",\n  definition(t) {\n    t.field(\"openUniversityRegistrationLink\", {\n      type: \"OpenUniversityRegistrationLink\",\n      args: {\n        id: schema.idArg({ required: true }),\n      },\n      authorize: isAdmin,\n      resolve: async (_, { id }, ctx) =>\n        ctx.db.openUniversityRegistrationLink.findOne({\n          where: { id },\n        }),\n    })\n\n    t.crud.openUniversityRegistrationLinks({\n      authorize: isAdmin,\n    })\n    /*t.list.field(\"openUniversityRegistrationLinks\", {\n      type: \"open_university_registration_link\",\n      resolve: (_, __, ctx) => {\n        checkAccess(ctx)\n        return ctx.db.open_university_registration_link.findMany()\n      },\n    })*/\n  },\n})\n\nschema.extendType({\n  type: \"Mutation\",\n  definition(t) {\n    t.field(\"addOpenUniversityRegistrationLink\", {\n      type: \"OpenUniversityRegistrationLink\",\n      args: {\n        course_code: schema.stringArg({ required: true }),\n        course: schema.idArg({ required: true }),\n        language: schema.stringArg(),\n        link: schema.stringArg(),\n      },\n      authorize: isAdmin,\n      resolve: async (_, args, ctx) => {\n        const { course_code, course, language, link } = args\n\n        // FIXME: empty course_code and/or language?\n        const openUniversityRegistrationLink = await ctx.db.openUniversityRegistrationLink.create(\n          {\n            data: {\n              course: {\n                connect: { id: course },\n              },\n              course_code: course_code ?? \"\",\n              language: language ?? \"\",\n              link: link,\n            },\n          },\n        )\n        return openUniversityRegistrationLink\n      },\n    })\n\n    t.field(\"updateOpenUniversityRegistrationLink\", {\n      type: \"OpenUniversityRegistrationLink\",\n      args: {\n        id: schema.idArg({ required: true }),\n        course_code: schema.stringArg(),\n        course: schema.idArg({ required: true }),\n        language: schema.stringArg(),\n        link: schema.stringArg(),\n      },\n      authorize: isAdmin,\n      resolve: async (_, args, ctx) => {\n        const { id, course_code, course, language, link } = args\n\n        return ctx.db.openUniversityRegistrationLink.update({\n          where: {\n            id,\n          },\n          // TODO/FIXME: this deletes the old values?\n          data: {\n            course: {\n              connect: { id: course },\n            },\n            course_code: course_code ?? \"\",\n            language: language ?? \"\",\n            link,\n          },\n        })\n      },\n    })\n  },\n})\n"]}