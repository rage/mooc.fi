{"version":3,"file":"StudyModuleTranslation.js","sourceRoot":"","sources":["../../graphql/StudyModuleTranslation.ts"],"names":[],"mappings":"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","sourcesContent":["import { schema } from \"nexus\"\n\nimport { isAdmin } from \"../accessControl\"\n\nschema.objectType({\n  name: \"StudyModuleTranslation\",\n  definition(t) {\n    t.model.id()\n    t.model.created_at()\n    t.model.updated_at()\n    t.model.description()\n    t.model.language()\n    t.model.name()\n    t.model.study_module_id()\n    t.model.study_module()\n  },\n})\n\nschema.inputObjectType({\n  name: \"StudyModuleTranslationCreateInput\",\n  definition(t) {\n    t.string(\"name\", { required: true })\n    t.string(\"language\", { required: true })\n    t.string(\"description\", { required: true })\n    t.id(\"study_module\", { required: false })\n  },\n})\n\nschema.inputObjectType({\n  name: \"StudyModuleTranslationUpsertInput\",\n  definition(t) {\n    t.id(\"id\", { required: false })\n    t.string(\"name\", { required: true })\n    t.string(\"language\", { required: true })\n    t.string(\"description\", { required: true })\n    t.id(\"study_module\", { required: false })\n  },\n})\n\nschema.extendType({\n  type: \"Query\",\n  definition(t) {\n    t.crud.studyModuleTranslations({\n      pagination: false,\n      authorize: isAdmin,\n    })\n    /*t.list.field(\"StudyModuleTranslations\", {\n      type: \"study_module_translation\",\n      resolve: (_, __, ctx) => {\n        // checkAccess(ctx, { allowOrganizations: false })\n        return ctx.db.study_module_translation.findMany()\n      },\n    })*/\n  },\n})\n\nschema.extendType({\n  type: \"Mutation\",\n  definition(t) {\n    t.field(\"addStudyModuleTranslation\", {\n      type: \"StudyModuleTranslation\",\n      args: {\n        language: schema.stringArg({ required: true }),\n        name: schema.stringArg(),\n        description: schema.stringArg(),\n        study_module: schema.idArg({ required: true }),\n      },\n      authorize: isAdmin,\n      resolve: async (_, args, ctx) => {\n        const { language, name, description, study_module } = args\n\n        const newStudyModuleTranslation = await ctx.db.studyModuleTranslation.create(\n          {\n            data: {\n              language: language,\n              name: name ?? \"\",\n              description: description ?? \"\",\n              study_module: {\n                connect: { id: study_module },\n              },\n            },\n          },\n        )\n        return newStudyModuleTranslation\n      },\n    })\n\n    t.field(\"updateStudyModuletranslation\", {\n      type: \"StudyModuleTranslation\",\n      args: {\n        id: schema.idArg({ required: true }),\n        language: schema.stringArg(),\n        name: schema.stringArg(),\n        description: schema.stringArg(),\n        study_module: schema.idArg({ required: true }),\n      },\n      authorize: isAdmin,\n      resolve: (_, args, ctx) => {\n        const { id, language, name, description, study_module } = args\n\n        return ctx.db.studyModuleTranslation.update({\n          where: { id },\n          data: {\n            description: description ?? \"\",\n            language: language ?? \"\",\n            name: name ?? \"\",\n            study_module: {\n              connect: { id: study_module },\n            },\n          },\n        })\n      },\n    })\n\n    t.field(\"deleteStudyModuleTranslation\", {\n      type: \"StudyModuleTranslation\",\n      args: {\n        id: schema.idArg({ required: true }),\n      },\n      authorize: isAdmin,\n      resolve: (_, { id }, ctx) =>\n        ctx.db.studyModuleTranslation.delete({ where: { id } }),\n    })\n  },\n})\n"]}