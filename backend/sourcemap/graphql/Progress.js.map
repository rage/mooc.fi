{"version":3,"file":"Progress.js","sourceRoot":"","sources":["../../graphql/Progress.ts"],"names":[],"mappings":";;;AAAA,+BAA8B;AAE9B,cAAM,CAAC,UAAU,CAAC;IAChB,IAAI,EAAE,UAAU;IAChB,UAAU,YAAC,CAAC;QAAZ,iBA0BC;QAzBC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAA;QACrC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;QAEjC,CAAC,CAAC,KAAK,CAAC,sBAAsB,EAAE;YAC9B,IAAI,EAAE,oBAAoB;YAC1B,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,UAAO,MAAM,EAAE,CAAC,EAAE,GAAG;;;;;;4BACtB,SAAS,SAAG,MAAM,CAAC,MAAM,0CAAE,EAAE,CAAA;4BAC7B,OAAO,SAAG,MAAM,CAAC,IAAI,0CAAE,EAAE,CAAA;4BACF,qBAAM,GAAG,CAAC,EAAE,CAAC,kBAAkB,CAAC,QAAQ,CAAC;oCACpE,KAAK,EAAE,EAAE,SAAS,WAAA,EAAE,OAAO,SAAA,EAAE;iCAC9B,CAAC,EAAA;;4BAFI,oBAAoB,GAAG,SAE3B;4BACF,sBAAO,oBAAoB,CAAC,CAAC,CAAC,EAAA;;;iBAC/B;SACF,CAAC,CAAA;QACF,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,gCAAgC,EAAE;YAC7C,IAAI,EAAE,2BAA2B;YACjC,OAAO,EAAE,UAAO,MAAM,EAAE,CAAC,EAAE,GAAG;;;;oBACtB,SAAS,SAAG,MAAM,CAAC,MAAM,0CAAE,EAAE,CAAA;oBAC7B,OAAO,SAAG,MAAM,CAAC,IAAI,0CAAE,EAAE,CAAA;oBAC/B,sBAAO,GAAG,CAAC,EAAE,CAAC,yBAAyB,CAAC,QAAQ,CAAC;4BAC/C,KAAK,EAAE,EAAE,OAAO,SAAA,EAAE,SAAS,WAAA,EAAE;yBAC9B,CAAC,EAAA;;iBACH;SACF,CAAC,CAAA;IACJ,CAAC;CACF,CAAC,CAAA","sourcesContent":["import { schema } from \"nexus\"\n\nschema.objectType({\n  name: \"Progress\",\n  definition(t) {\n    t.field(\"course\", { type: \"Course\" })\n    t.field(\"user\", { type: \"User\" })\n\n    t.field(\"user_course_progress\", {\n      type: \"UserCourseProgress\",\n      nullable: true,\n      resolve: async (parent, _, ctx) => {\n        const course_id = parent.course?.id\n        const user_id = parent.user?.id\n        const userCourseProgresses = await ctx.db.userCourseProgress.findMany({\n          where: { course_id, user_id },\n        })\n        return userCourseProgresses[0]\n      },\n    })\n    t.list.field(\"user_course_service_progresses\", {\n      type: \"UserCourseServiceProgress\",\n      resolve: async (parent, _, ctx) => {\n        const course_id = parent.course?.id\n        const user_id = parent.user?.id\n        return ctx.db.userCourseServiceProgress.findMany({\n          where: { user_id, course_id },\n        })\n      },\n    })\n  },\n})\n"]}