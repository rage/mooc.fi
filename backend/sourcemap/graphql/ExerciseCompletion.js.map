{"version":3,"file":"ExerciseCompletion.js","sourceRoot":"","sources":["../../graphql/ExerciseCompletion.ts"],"names":[],"mappings":";;;AAAA,+BAA8B;AAE9B,kDAA0C;AAE1C,cAAM,CAAC,UAAU,CAAC;IAChB,IAAI,EAAE,oBAAoB;IAC1B,UAAU,YAAC,CAAC;QACV,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAA;QACZ,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,CAAA;QACpB,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,CAAA;QACpB,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAA;QACrB,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAA;QAClB,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,CAAA;QACnB,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAA;QAClB,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,CAAA;QACnB,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE,CAAA;QACjB,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;QACd,CAAC,CAAC,KAAK,CAAC,oCAAoC,EAAE,CAAA;IAChD,CAAC;CACF,CAAC,CAAA;AAEF,cAAM,CAAC,UAAU,CAAC;IAChB,IAAI,EAAE,OAAO;IACb,UAAU,YAAC,CAAC;QAAZ,iBAyBC;QAxBC,CAAC,CAAC,KAAK,CAAC,oBAAoB,EAAE;YAC5B,IAAI,EAAE,oBAAoB;YAC1B,IAAI,EAAE;gBACJ,EAAE,EAAE,cAAM,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;aACrC;YACD,SAAS,EAAE,uBAAO;YAClB,OAAO,EAAE,UAAO,CAAC,EAAE,EAAM,EAAE,GAAG;oBAAT,EAAE,QAAA;;;wBACrB,sBAAA,GAAG,CAAC,EAAE,CAAC,kBAAkB,CAAC,OAAO,CAAC;gCAChC,KAAK,EAAE,EAAE,EAAE,IAAA,EAAE;6BACd,CAAC,EAAA;;;aAAA;SACL,CAAC,CAAA;QAEF,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC;YACzB,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,uBAAO;SACnB,CAAC,CAAA;QAEF;;;;;;YAMI;IACN,CAAC;CACF,CAAC,CAAA;AAEF,cAAM,CAAC,UAAU,CAAC;IAChB,IAAI,EAAE,UAAU;IAChB,UAAU,YAAC,CAAC;QACV,CAAC,CAAC,KAAK,CAAC,uBAAuB,EAAE;YAC/B,IAAI,EAAE,oBAAoB;YAC1B,IAAI,EAAE;gBACJ,QAAQ,EAAE,cAAM,CAAC,MAAM,EAAE;gBACzB,QAAQ,EAAE,cAAM,CAAC,KAAK,EAAE;gBACxB,IAAI,EAAE,cAAM,CAAC,KAAK,EAAE;gBACpB,SAAS,EAAE,cAAM,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;aAC5C;YACD,SAAS,EAAE,uBAAO;YAClB,OAAO,EAAE,UAAC,CAAC,EAAE,IAAI,EAAE,GAAG;gBACZ,IAAA,QAAQ,GAAgC,IAAI,SAApC,EAAE,QAAQ,GAAsB,IAAI,SAA1B,EAAE,IAAI,GAAgB,IAAI,KAApB,EAAE,SAAS,GAAK,IAAI,UAAT,CAAS;gBAEpD,OAAO,GAAG,CAAC,EAAE,CAAC,kBAAkB,CAAC,MAAM,CAAC;oBACtC,IAAI,EAAE;wBACJ,QAAQ,UAAA;wBACR,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS;wBAC9D,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS;wBAClD,SAAS,WAAA;qBACV;iBACF,CAAC,CAAA;YACJ,CAAC;SACF,CAAC,CAAA;IACJ,CAAC;CACF,CAAC,CAAA","sourcesContent":["import { schema } from \"nexus\"\n\nimport { isAdmin } from \"../accessControl\"\n\nschema.objectType({\n  name: \"ExerciseCompletion\",\n  definition(t) {\n    t.model.id()\n    t.model.created_at()\n    t.model.updated_at()\n    t.model.exercise_id()\n    t.model.exercise()\n    t.model.completed()\n    t.model.n_points()\n    t.model.timestamp()\n    t.model.user_id()\n    t.model.user()\n    t.model.exercise_completion_required_actions()\n  },\n})\n\nschema.extendType({\n  type: \"Query\",\n  definition(t) {\n    t.field(\"exerciseCompletion\", {\n      type: \"ExerciseCompletion\",\n      args: {\n        id: schema.idArg({ required: true }),\n      },\n      authorize: isAdmin,\n      resolve: async (_, { id }, ctx) =>\n        ctx.db.exerciseCompletion.findOne({\n          where: { id },\n        }),\n    })\n\n    t.crud.exerciseCompletions({\n      ordering: true,\n      authorize: isAdmin,\n    })\n\n    /*t.list.field(\"exerciseCompletions\", {\n      type: \"exercise_completion\",\n      resolve: (_, __, ctx) => {\n        checkAccess(ctx)\n        return ctx.db.exercise_completion.findMany()\n      },\n    })*/\n  },\n})\n\nschema.extendType({\n  type: \"Mutation\",\n  definition(t) {\n    t.field(\"addExerciseCompletion\", {\n      type: \"ExerciseCompletion\",\n      args: {\n        n_points: schema.intArg(),\n        exercise: schema.idArg(),\n        user: schema.idArg(),\n        timestamp: schema.arg({ type: \"DateTime\" }),\n      },\n      authorize: isAdmin,\n      resolve: (_, args, ctx) => {\n        const { n_points, exercise, user, timestamp } = args\n\n        return ctx.db.exerciseCompletion.create({\n          data: {\n            n_points,\n            exercise: exercise ? { connect: { id: exercise } } : undefined,\n            user: user ? { connect: { id: user } } : undefined,\n            timestamp,\n          },\n        })\n      },\n    })\n  },\n})\n"]}