{"version":3,"file":"model.js","sourceRoot":"","sources":["../../../graphql/StudyModule/model.ts"],"names":[],"mappings":";;;AAAA,+BAA8B;AAC9B,gDAA8C;AAC9C,wDAAoD;AAEpD,cAAM,CAAC,UAAU,CAAC;IAChB,IAAI,EAAE,aAAa;IACnB,UAAU,YAAC,CAAC;QAAZ,iBA2DC;QA1DC,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAA;QACZ,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,CAAA;QACpB,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAA;QACf,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;QACd,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAA;QACf,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;QACd,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,CAAA;QACpB,CAAC,CAAC,KAAK,CAAC,yBAAyB,EAAE,CAAA;QAEnC,wBAAwB;QACxB,CAAC,CAAC,KAAK,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAA;QAC1C,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACtB,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE;gBACJ,OAAO,EAAE,cAAM,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,oBAAoB,EAAE,CAAC;gBACnD,QAAQ,EAAE,cAAM,CAAC,SAAS,EAAE;aAC7B;YACD,OAAO,EAAE,UAAO,MAAM,EAAE,IAAI,EAAE,GAAG;;;;;;;4BACvB,QAAQ,GAAc,IAAI,SAAlB,EAAE,OAAO,GAAK,IAAI,QAAT,CAAS;4BAElB,qBAAM,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC;oCAC3C,OAAO,QAAE,yBAAU,CAAC,OAAO,CAAC,mCAAI,SAAS;oCACzC,KAAK,EAAE,EAAE,aAAa,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE;iCACtD,CAAC,EAAA;;4BAHI,OAAO,GAAG,SAGd;iCAEa,QAAQ,EAAR,wBAAQ;4BAEjB,qBAAM,OAAO,CAAC,GAAG,CACf,OAAO,CAAC,GAAG,CAAC,UAAO,MAAM;;;;oDACK,qBAAM,GAAG,CAAC,EAAE,CAAC,iBAAiB,CAAC,QAAQ,CACjE;oDACE,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,EAAE,EAAE,QAAQ,UAAA,EAAE;iDAC1C,CACF,EAAA;;gDAJK,mBAAmB,GAAG,SAI3B;gDAED,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE;oDAC/B,sBAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAA;iDAC7B;gDAEK,KAIF,mBAAmB,CAAC,CAAC,CAAC,EAHxB,IAAI,UAAA,EACJ,WAAW,iBAAA,EACX,YAAS,EAAT,IAAI,mBAAG,EAAE,KAAA,CACe;gDAE1B,4DAAY,MAAM,KAAE,IAAI,MAAA,EAAE,WAAW,aAAA,EAAE,IAAI,MAAA,KAAE;;;qCAC9C,CAAC,CACH,EAAA;;4BArBH,KAAA,CACE,SAoBC,CACF,CAAC,MAAM,CAAC,mBAAQ,CAAC,CAAA;;;4BAClB,KAAA,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,IAAK,OAAA,uCACnB,MAAM,KACT,WAAW,EAAE,EAAE,EACf,IAAI,EAAE,EAAE,IACR,EAJsB,CAItB,CAAC,CAAA;;;4BA5BD,MAAM,KA4BL;4BAEP,sBAAO,MAAM,EAAA;;;iBACd;SACF,CAAC,CAAA;IACJ,CAAC;CACF,CAAC,CAAA","sourcesContent":["import { schema } from \"nexus\"\nimport { notEmpty } from \"../../util/notEmpty\"\nimport { filterNull } from \"../../util/db-functions\"\n\nschema.objectType({\n  name: \"StudyModule\",\n  definition(t) {\n    t.model.id()\n    t.model.created_at()\n    t.model.image()\n    t.model.name()\n    t.model.order()\n    t.model.slug()\n    t.model.updated_at()\n    t.model.study_module_translations()\n\n    // t.prismaFields([\"*\"])\n    t.field(\"description\", { type: \"String\" })\n    t.list.field(\"courses\", {\n      type: \"Course\",\n      args: {\n        orderBy: schema.arg({ type: \"CourseOrderByInput\" }),\n        language: schema.stringArg(),\n      },\n      resolve: async (parent, args, ctx) => {\n        const { language, orderBy } = args\n\n        const courses = await ctx.db.course.findMany({\n          orderBy: filterNull(orderBy) ?? undefined,\n          where: { study_modules: { some: { id: parent.id } } },\n        })\n\n        const values = language\n          ? (\n              await Promise.all(\n                courses.map(async (course) => {\n                  const course_translations = await ctx.db.courseTranslation.findMany(\n                    {\n                      where: { course_id: course.id, language },\n                    },\n                  )\n\n                  if (!course_translations.length) {\n                    return Promise.resolve(null)\n                  }\n\n                  const {\n                    name,\n                    description,\n                    link = \"\",\n                  } = course_translations[0]\n\n                  return { ...course, name, description, link }\n                }),\n              )\n            ).filter(notEmpty)\n          : courses.map((course) => ({\n              ...course,\n              description: \"\",\n              link: \"\",\n            }))\n\n        return values\n      },\n    })\n  },\n})\n"]}