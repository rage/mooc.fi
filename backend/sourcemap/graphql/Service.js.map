{"version":3,"file":"Service.js","sourceRoot":"","sources":["../../graphql/Service.ts"],"names":[],"mappings":"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","sourcesContent":["import { schema } from \"nexus\"\n\nimport { isAdmin } from \"../accessControl\"\n\nschema.objectType({\n  name: \"Service\",\n  definition(t) {\n    t.model.id()\n    t.model.created_at()\n    t.model.updated_at()\n    t.model.name()\n    t.model.url()\n    t.model.exercises()\n    t.model.user_course_service_progresses()\n    t.model.courses()\n  },\n})\n\nschema.extendType({\n  type: \"Query\",\n  definition(t) {\n    t.field(\"service\", {\n      type: \"Service\",\n      args: {\n        service_id: schema.idArg({ required: true }),\n      },\n      authorize: isAdmin,\n      resolve: async (_, { service_id }, ctx) =>\n        ctx.db.service.findOne({ where: { id: service_id } }),\n    })\n\n    t.crud.services({\n      pagination: false,\n      authorize: isAdmin,\n    })\n\n    /*t.list.field(\"services\", {\n      type: \"service\",\n      resolve: (_, __, ctx) => {\n        checkAccess(ctx)\n\n        return ctx.db.service.findMany()\n      },\n    })*/\n  },\n})\n\nschema.extendType({\n  type: \"Mutation\",\n  definition(t) {\n    t.field(\"addService\", {\n      type: \"Service\",\n      args: {\n        url: schema.stringArg({ required: true }),\n        name: schema.stringArg({ required: true }),\n      },\n      authorize: isAdmin,\n      resolve: async (_, args, ctx) => {\n        const { url, name } = args\n\n        return await ctx.db.service.create({\n          data: {\n            url,\n            name,\n          },\n        })\n      },\n    })\n\n    t.field(\"updateService\", {\n      type: \"Service\",\n      args: {\n        id: schema.idArg({ required: true }),\n        url: schema.stringArg(),\n        name: schema.stringArg(),\n      },\n      authorize: isAdmin,\n      resolve: (_, args, ctx) => {\n        const { url, name, id } = args\n\n        return ctx.db.service.update({\n          where: { id },\n          data: {\n            url: url ?? \"\",\n            name: name ?? \"\",\n          },\n        })\n      },\n    })\n  },\n})\n"]}