{"version":3,"file":"UserCourseSetting.js","sourceRoot":"","sources":["../../graphql/UserCourseSetting.ts"],"names":[],"mappings":"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","sourcesContent":["import { schema } from \"nexus\"\nimport { UserInputError, ForbiddenError } from \"apollo-server-core\"\n\nimport { buildSearch, convertPagination } from \"../util/db-functions\"\nimport { UserWhereInput } from \"@prisma/client\"\nimport { isAdmin } from \"../accessControl\"\n\nschema.objectType({\n  name: \"UserCourseSetting\",\n  definition(t) {\n    t.model.id()\n    t.model.created_at()\n    t.model.updated_at()\n    t.model.country()\n    t.model.course_id()\n    t.model.course()\n    t.model.course_variant()\n    t.model.language()\n    t.model.marketing()\n    t.model.other()\n    t.model.research()\n    t.model.user_id()\n    t.model.user()\n  },\n})\n\nschema.extendType({\n  type: \"Query\",\n  definition(t) {\n    t.field(\"userCourseSetting\", {\n      type: \"UserCourseSetting\",\n      args: {\n        user_id: schema.idArg({ required: true }),\n        course_id: schema.idArg({ required: true }),\n      },\n      authorize: isAdmin,\n      resolve: async (_, args, ctx) => {\n        const { user_id } = args\n        let { course_id } = args\n\n        const inheritSettingsCourse = await ctx.db.course\n          .findOne({ where: { id: course_id } })\n          .inherit_settings_from()\n\n        if (inheritSettingsCourse) {\n          course_id = inheritSettingsCourse.id\n        }\n\n        const result = await ctx.db.userCourseSetting.findMany({\n          where: {\n            user_id,\n            course_id,\n          },\n        })\n\n        if (!result.length) {\n          throw new UserInputError(\"Not found\")\n        }\n        return result[0]\n      },\n    })\n\n    t.field(\"userCourseSettingCount\", {\n      type: \"Int\",\n      args: {\n        user_id: schema.idArg(),\n        course_id: schema.idArg(),\n      },\n      resolve: (_, args, ctx) => {\n        const { user_id, course_id } = args\n\n        return ctx.db.userCourseSetting.count({\n          where: {\n            user_id,\n            course_id,\n          },\n        })\n      },\n    })\n\n    t.connection(\"userCourseSettings\", {\n      type: \"UserCourseSetting\",\n      additionalArgs: {\n        user_id: schema.idArg(),\n        user_upstream_id: schema.intArg(),\n        course_id: schema.idArg(),\n        search: schema.stringArg(),\n        skip: schema.intArg({ default: 0 }),\n      },\n      authorize: isAdmin,\n      nodes: async (_, args, ctx) => {\n        const {\n          first,\n          last,\n          before,\n          after,\n          user_id,\n          user_upstream_id,\n          search,\n          skip,\n        } = args\n\n        let { course_id } = args\n        if ((!first && !last) || (first ?? 0) > 50 || (last ?? 0) > 50) {\n          throw new ForbiddenError(\"Cannot query more than 50 objects\")\n        }\n\n        if (course_id) {\n          const inheritSettingsCourse = await ctx.db.course\n            .findOne({ where: { id: course_id } })\n            .inherit_settings_from()\n\n          if (inheritSettingsCourse) {\n            course_id = inheritSettingsCourse.id\n          }\n        }\n\n        const orCondition: UserWhereInput[] = [\n          {\n            OR: buildSearch(\n              [\"first_name\", \"last_name\", \"username\", \"email\"],\n              search ?? \"\",\n            ),\n          },\n        ]\n\n        if (user_id) orCondition.concat({ id: user_id })\n        if (user_upstream_id)\n          orCondition.concat({ upstream_id: user_upstream_id })\n\n        return ctx.db.userCourseSetting.findMany({\n          ...convertPagination({ first, last, before, after, skip }),\n          where: {\n            user: {\n              OR: orCondition,\n            },\n            course_id,\n          },\n        })\n      },\n      extendConnection(t) {\n        t.int(\"count\", {\n          args: {\n            user_id: schema.idArg(),\n            user_upstream_id: schema.intArg(),\n            course_id: schema.idArg({ required: true }),\n            search: schema.stringArg(),\n          },\n          resolve: async (_, args, ctx) => {\n            const { user_id, user_upstream_id, search } = args\n            let { course_id } = args\n            const inheritSettingsCourse = await ctx.db.course\n              .findOne({ where: { id: course_id } })\n              .inherit_settings_from()\n\n            if (inheritSettingsCourse) {\n              course_id = inheritSettingsCourse.id\n            }\n\n            const orCondition: UserWhereInput[] = [\n              {\n                OR: buildSearch(\n                  [\"first_name\", \"last_name\", \"username\", \"email\"],\n                  search ?? \"\",\n                ),\n              },\n            ]\n\n            if (user_id) orCondition.concat({ id: user_id })\n            if (user_upstream_id)\n              orCondition.concat({ upstream_id: user_upstream_id })\n\n            const count = await ctx.db.userCourseSetting.count({\n              where: {\n                user: {\n                  OR: orCondition,\n                },\n                course_id,\n              },\n            })\n\n            return count\n          },\n        })\n      },\n    })\n  },\n})\n"]}