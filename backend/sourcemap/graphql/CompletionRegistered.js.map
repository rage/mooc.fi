{"version":3,"file":"CompletionRegistered.js","sourceRoot":"","sources":["../../graphql/CompletionRegistered.ts"],"names":[],"mappings":"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","sourcesContent":["import { schema } from \"nexus\"\nimport { chunk } from \"lodash\"\nimport { or, isOrganization, isAdmin } from \"../accessControl\"\nimport { ForbiddenError, UserInputError } from \"apollo-server-core\"\nimport { CompletionRegisteredWhereUniqueInput } from \"@prisma/client\"\n\nschema.objectType({\n  name: \"CompletionRegistered\",\n  definition(t) {\n    t.model.id()\n    t.model.created_at()\n    t.model.updated_at()\n    t.model.completion_id()\n    t.model.course_id()\n    t.model.organization_id()\n    t.model.real_student_number()\n    t.model.user_id()\n    t.model.completion()\n    t.model.course()\n    t.model.organization()\n    t.model.user()\n  },\n})\n\n/************************* QUERIES **********************/\n\nschema.extendType({\n  type: \"Query\",\n  definition(t) {\n    t.list.field(\"registeredCompletions\", {\n      type: \"CompletionRegistered\",\n      args: {\n        course: schema.stringArg(),\n        skip: schema.intArg(),\n        take: schema.intArg(),\n        cursor: schema.arg({ type: \"CompletionRegisteredWhereUniqueInput\" }),\n      },\n      authorize: or(isOrganization, isAdmin),\n      resolve: async (_, args, ctx) => {\n        const { course, skip, take, cursor } = args\n        if ((take ?? 0) > 50) {\n          throw new ForbiddenError(\"Cannot query more than 50 items\")\n        }\n        if (course) {\n          return await withCourse(\n            course,\n            skip ?? undefined,\n            take ?? undefined,\n            cursor ? { id: cursor.id ?? undefined } : undefined,\n            ctx,\n          )\n        } else {\n          return await all(\n            skip ?? undefined,\n            take ?? undefined,\n            cursor ? { id: cursor.id ?? undefined } : undefined,\n            ctx,\n          )\n        }\n      },\n    })\n  },\n})\n\nconst withCourse = async (\n  course: string,\n  skip: number | undefined,\n  take: number | undefined,\n  cursor: CompletionRegisteredWhereUniqueInput | undefined,\n  ctx: NexusContext,\n) => {\n  let courseReference = await ctx.db.course.findOne({\n    where: { slug: course },\n  })\n\n  if (!courseReference) {\n    const courseFromAvoinCourse = await ctx.db.courseAlias\n      .findOne({ where: { course_code: course } })\n      .course()\n    if (!courseFromAvoinCourse) {\n      throw new UserInputError(\"Invalid course identifier\")\n    }\n\n    // TODO: isn't this the same as courseFromAvoinCourse?\n    courseReference = await ctx.db.course.findOne({\n      where: { slug: courseFromAvoinCourse.slug },\n    })\n  }\n\n  return await ctx.db.completionRegistered.findMany({\n    where: {\n      course_id: courseReference!.id,\n    },\n    skip,\n    take,\n    cursor,\n  })\n}\n\nconst all = async (\n  skip: number | undefined,\n  take: number | undefined,\n  cursor: CompletionRegisteredWhereUniqueInput | undefined,\n  ctx: NexusContext,\n) => {\n  return await ctx.db.completionRegistered.findMany({\n    skip,\n    take,\n    cursor,\n  })\n}\n\n/************************ MUTATIONS *********************/\nschema.extendType({\n  type: \"Mutation\",\n  definition(t) {\n    t.field(\"registerCompletion\", {\n      type: \"String\",\n      args: {\n        completions: schema.arg({ type: \"CompletionArg\", list: true }),\n      },\n      authorize: isOrganization,\n      resolve: async (_, args, ctx: NexusContext) => {\n        let queue = chunk(args.completions, 500)\n\n        for (let i = 0; i < queue.length; i++) {\n          const promises = buildPromises(queue[i], ctx)\n          await Promise.all(promises)\n        }\n        return \"success\"\n      },\n    })\n  },\n})\n\nconst buildPromises = (array: any[], ctx: NexusContext) => {\n  return array.map(async (entry) => {\n    const course = await ctx.db.completion\n      .findOne({ where: { id: entry.completion_id } })\n      .course()\n    const user = await ctx.db.completion\n      .findOne({ where: { id: entry.completion_id } })\n      .user()\n\n    if (!course || !user) {\n      // TODO/FIXME: we now fail silently if course/user not found\n      return Promise.resolve()\n    }\n\n    return ctx.db.completionRegistered.create({\n      data: {\n        completion: {\n          connect: { id: entry.completion_id },\n        },\n        organization: {\n          connect: { id: ctx.organization?.id },\n        },\n        course: { connect: { id: course.id } },\n        real_student_number: entry.student_number,\n        user: { connect: { id: user.id } },\n      },\n    })\n  })\n}\n"]}