{"version":3,"file":"mutations.js","sourceRoot":"","sources":["../../../graphql/Course/mutations.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  CourseTranslationUpdateManyWithoutCourseInput,\n  OpenUniversityRegistrationLinkUpdateManyWithoutCourseInput,\n  StudyModuleUpdateManyWithoutCoursesInput,\n  CourseVariantUpdateManyWithoutCourseInput,\n  CourseAliasUpdateManyWithoutCourseInput,\n  UserCourseSettingsVisibilityUpdateManyWithoutCourseInput,\n} from \"@prisma/client\"\n\nimport KafkaProducer, { ProducerMessage } from \"../../services/kafkaProducer\"\nimport { uploadImage, deleteImage } from \"../Image\"\nimport { omit } from \"lodash\"\nimport { invalidate } from \"../../services/redis\"\nimport { schema } from \"nexus\"\nimport { UserInputError } from \"apollo-server-core\"\nimport { NexusContext } from \"../../context\"\nimport { isAdmin } from \"../../accessControl\"\nimport { Prisma__CourseClient, Course } from \"nexus-plugin-prisma/client\"\n// for debug\n/* const shallowCompare = (obj1: object, obj2: object) =>\n  Object.keys(obj1).length === Object.keys(obj2).length &&\n  Object.keys(obj1).every(\n    key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key],\n  ) */\n\nschema.extendType({\n  type: \"Mutation\",\n  definition(t) {\n    t.field(\"addCourse\", {\n      type: \"Course\",\n      args: {\n        course: schema.arg({\n          type: \"CourseCreateArg\",\n          required: true,\n        }),\n      },\n      authorize: isAdmin,\n      resolve: async (_, { course }, ctx: NexusContext) => {\n        const {\n          // slug,\n          new_photo,\n          base64,\n          course_translations,\n          open_university_registration_links,\n          course_variants,\n          course_aliases,\n          study_modules,\n          inherit_settings_from,\n          completions_handled_by,\n          user_course_settings_visibilities,\n          completion_email,\n        } = course\n\n        let photo = null\n\n        if (new_photo) {\n          const newImage = await uploadImage({\n            ctx,\n            file: new_photo,\n            base64: base64 ?? false,\n          })\n\n          photo = newImage.id\n        }\n\n        if (study_modules?.some((s) => !s.id && !s.slug)) {\n          throw new UserInputError(\"study modules must have id or slug\")\n        }\n\n        const newCourse = await ctx.db.course.create({\n          data: {\n            ...omit(course, [\"base64\", \"new_photo\"]),\n            name: course.name ?? \"\",\n            photo: !!photo ? { connect: { id: photo } } : undefined,\n            course_translations: !!course_translations\n              ? { create: course_translations }\n              : undefined,\n            study_modules: !!study_modules\n              ? {\n                  connect: study_modules.map((s) => ({\n                    id: s.id ?? undefined,\n                  })),\n                }\n              : undefined,\n            open_university_registration_links: !!open_university_registration_links\n              ? { create: open_university_registration_links }\n              : undefined,\n            course_variants: !!course_variants\n              ? { create: course_variants }\n              : undefined,\n            course_aliases: !!course_aliases\n              ? { create: course_aliases }\n              : undefined,\n            inherit_settings_from: !!inherit_settings_from\n              ? { connect: { id: inherit_settings_from } }\n              : undefined,\n            completions_handled_by: !!completions_handled_by\n              ? { connect: { id: completions_handled_by } }\n              : undefined,\n            user_course_settings_visibilities: !!user_course_settings_visibilities\n              ? { create: user_course_settings_visibilities }\n              : undefined,\n            // don't think this will be passed by parameter, but let's be sure\n            completion_email: !!completion_email\n              ? { connect: { id: completion_email } }\n              : undefined,\n          },\n        })\n\n        const kafkaProducer = await new KafkaProducer()\n        const producerMessage: ProducerMessage = {\n          message: JSON.stringify(newCourse),\n          partition: null,\n          topic: \"new-course\",\n        }\n        await kafkaProducer.queueProducerMessage(producerMessage)\n        await kafkaProducer.disconnect()\n\n        return newCourse\n      },\n    })\n\n    t.field(\"updateCourse\", {\n      type: \"Course\",\n      args: {\n        course: schema.arg({\n          type: \"CourseUpsertArg\",\n          required: true,\n        }),\n      },\n      authorize: isAdmin,\n      resolve: async (_, { course }, ctx: NexusContext) => {\n        const {\n          id,\n          new_photo,\n          slug,\n          new_slug,\n          base64,\n          course_translations,\n          open_university_registration_links,\n          course_variants,\n          course_aliases,\n          study_modules,\n          completion_email,\n          status,\n          delete_photo,\n          inherit_settings_from,\n          completions_handled_by,\n          user_course_settings_visibilities,\n        } = course\n        let { end_date } = course\n\n        if (!slug) {\n          throw new Error(\"slug required for update course\")\n        }\n\n        let photo = course.photo\n\n        if (new_photo) {\n          const newImage = await uploadImage({\n            ctx,\n            file: new_photo,\n            base64: base64 ?? false,\n          })\n          if (photo && photo !== newImage.id) {\n            // TODO: do something with return value\n            await deleteImage({ ctx, id: photo })\n          }\n          photo = newImage.id\n        }\n\n        const existingCourse = await ctx.db.course.findOne({ where: { slug } })\n        if (\n          existingCourse?.status != status &&\n          status === \"Ended\" &&\n          end_date === \"\"\n        ) {\n          end_date = new Date().toLocaleDateString()\n        }\n\n        if (photo && delete_photo) {\n          await deleteImage({ ctx, id: photo })\n          photo = null\n        }\n\n        // FIXME: I know there's probably a better way to do this\n        const translationMutation:\n          | CourseTranslationUpdateManyWithoutCourseInput\n          | undefined = await createMutation({\n          ctx,\n          slug,\n          data: course_translations,\n          field: \"course_translations\",\n        })\n\n        const registrationLinkMutation:\n          | OpenUniversityRegistrationLinkUpdateManyWithoutCourseInput\n          | undefined = await createMutation({\n          ctx,\n          slug,\n          data: open_university_registration_links,\n          field: \"open_university_registration_links\",\n        })\n\n        const courseVariantMutation:\n          | CourseVariantUpdateManyWithoutCourseInput\n          | undefined = await createMutation({\n          ctx,\n          slug,\n          data: course_variants,\n          field: \"course_variants\",\n        })\n\n        const courseAliasMutation:\n          | CourseAliasUpdateManyWithoutCourseInput\n          | undefined = await createMutation({\n          ctx,\n          slug,\n          data: course_aliases,\n          field: \"course_aliases\",\n        })\n\n        const userCourseSettingsVisibilityMutation:\n          | UserCourseSettingsVisibilityUpdateManyWithoutCourseInput\n          | undefined = await createMutation({\n          ctx,\n          slug,\n          data: user_course_settings_visibilities,\n          field: \"user_course_settings_visibilities\",\n        })\n\n        const existingVisibilities = await ctx.db.course\n          .findOne({ where: { slug } })\n          .user_course_settings_visibilities()\n        existingVisibilities?.forEach((visibility) =>\n          invalidate(\n            \"usercoursesettingscount\",\n            `${slug}-${visibility.language}`,\n          ),\n        )\n\n        // this had different logic so it's not done with the same helper\n        const existingStudyModules = await ctx.db.course\n          .findOne({ where: { slug } })\n          .study_modules()\n        //const addedModules: StudyModuleWhereUniqueInput[] = pullAll(study_modules, existingStudyModules.map(module => module.id))\n        const removedModuleIds = (existingStudyModules || [])\n          .filter((module) => !getIds(study_modules ?? []).includes(module.id))\n          .map((module) => ({ id: module.id } as { id: string }))\n        const connectModules =\n          study_modules?.map((s) => ({\n            ...s,\n            id: s.id ?? undefined,\n            slug: s.slug ?? undefined,\n          })) ?? []\n\n        const studyModuleMutation:\n          | StudyModuleUpdateManyWithoutCoursesInput\n          | undefined = study_modules\n          ? {\n              connect: connectModules.length ? connectModules : undefined,\n              disconnect: removedModuleIds.length\n                ? removedModuleIds\n                : undefined,\n            }\n          : undefined\n\n        const existingInherit = await ctx.db.course\n          .findOne({ where: { slug } })\n          .inherit_settings_from()\n        const inheritMutation = inherit_settings_from\n          ? {\n              connect: { id: inherit_settings_from },\n            }\n          : existingInherit\n          ? {\n              disconnect: true, // { id: existingInherit.id },\n            }\n          : undefined\n        const existingHandled = await ctx.db.course\n          .findOne({ where: { slug } })\n          .completions_handled_by()\n        const handledMutation = completions_handled_by\n          ? {\n              connect: { id: completions_handled_by },\n            }\n          : existingHandled\n          ? {\n              disconnect: true, // { id: existingHandled.id },\n            }\n          : undefined\n\n        const updatedCourse = await ctx.db.course.update({\n          where: {\n            id: id ?? undefined,\n            slug,\n          },\n          data: {\n            ...omit(course, [\n              \"id\",\n              \"photo\",\n              \"base64\",\n              \"new_slug\",\n              \"new_photo\",\n              \"delete_photo\",\n            ]),\n            slug: new_slug ? new_slug : slug,\n            end_date,\n            // FIXME: disconnect removed photos?\n            photo: !!photo ? { connect: { id: photo } } : undefined,\n            course_translations: translationMutation,\n            study_modules: studyModuleMutation,\n            open_university_registration_links: registrationLinkMutation,\n            course_variants: courseVariantMutation,\n            course_aliases: courseAliasMutation,\n            completion_email: completion_email\n              ? { connect: { id: completion_email } }\n              : undefined,\n            inherit_settings_from: inheritMutation,\n            completions_handled_by: handledMutation,\n            user_course_settings_visibilities: userCourseSettingsVisibilityMutation,\n          },\n        })\n\n        return updatedCourse\n      },\n    })\n\n    t.field(\"deleteCourse\", {\n      type: \"Course\",\n      args: {\n        id: schema.idArg(),\n        slug: schema.stringArg(),\n      },\n      authorize: isAdmin,\n      resolve: async (_, args, ctx: NexusContext) => {\n        const { id, slug } = args\n\n        if (!id && !slug) {\n          throw new UserInputError(\"must provide id or slug\")\n        }\n\n        const photo = await ctx.db.course\n          .findOne({\n            where: {\n              id: id ?? undefined,\n              slug: slug ?? undefined,\n            },\n          })\n          .photo()\n\n        if (photo) {\n          await deleteImage({ ctx, id: photo.id })\n        }\n\n        const deletedCourse = await ctx.db.course.delete({\n          where: {\n            id: id ?? undefined,\n            slug: slug ?? undefined,\n          },\n        })\n\n        return deletedCourse\n      },\n    })\n  },\n})\n\nconst getIds = (arr: any[]) => (arr || []).map((t) => t.id)\nconst filterNotIncluded = (arr1: any[], arr2: any[], mapToId = true) => {\n  const ids1 = getIds(arr1)\n  const ids2 = getIds(arr2)\n\n  const filtered = ids1.filter((id) => !ids2.includes(id))\n\n  if (mapToId) {\n    return filtered.map((id) => ({ id }))\n  }\n\n  return filtered\n}\n\ninterface ICreateMutation<T> {\n  ctx: NexusContext\n  slug: string\n  data?: T[] | null\n  field: keyof Prisma__CourseClient<Course>\n}\n\nconst createMutation = async <T extends { id?: string | null }>({\n  ctx,\n  slug,\n  data,\n  field,\n}: ICreateMutation<T>) => {\n  if (!data) {\n    return undefined\n  }\n\n  let existing: T[] | undefined\n\n  try {\n    // @ts-ignore: can't be arsed to do the typing, works\n    existing = await ctx.db.course.findOne({ where: { slug } })[field]()\n  } catch (e) {\n    throw new Error(`error creating mutation ${field} for course ${slug}: ${e}`)\n  }\n\n  const newOnes = (data || [])\n    .filter((t) => !t.id)\n    .map((t) => ({ ...t, id: undefined }))\n  const updated = (data || [])\n    .filter((t) => !!t.id)\n    .map((t) => ({\n      where: { id: t.id } as { id: string },\n      data: { ...t, id: undefined },\n    }))\n  const removed = filterNotIncluded(existing!, data)\n\n  return {\n    create: newOnes.length ? newOnes : undefined,\n    updateMany: updated.length ? updated : undefined,\n    deleteMany: removed.length ? removed : undefined,\n  }\n}\n"]}