{"version":3,"file":"app.js","sourceRoot":"","sources":["../app.ts"],"names":[],"mappings":"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","sourcesContent":["require(\"sharp\") // image library sharp seems to crash without this require\nrequire(\"dotenv-safe\").config({\n  allowEmptyValues: process.env.NODE_ENV === \"production\",\n})\n\nconst PRODUCTION = process.env.NODE_ENV === \"production\"\n\nimport { use, schema, settings, server } from \"nexus\"\nimport { prisma } from \"nexus-plugin-prisma\"\nimport Knex from \"./services/knex\"\nimport redisClient, { redisify } from \"./services/redis\"\nimport { wsListen } from \"./wsServer\"\nimport * as winston from \"winston\"\nimport { PrismaClient } from \"nexus-plugin-prisma/client\"\nimport cors from \"cors\"\nimport morgan from \"morgan\"\nimport cache from \"./middlewares/cache\"\nimport { moocfiAuthPlugin } from \"./middlewares/auth-plugin\"\nimport { newrelicPlugin } from \"./middlewares/newrelic-plugin\"\nimport sentry from \"./middlewares/sentry\"\nimport TmcClient from \"./services/tmc\"\nimport { UserInfo } from \"./domain/UserInfo\"\n\nif (PRODUCTION && !process.env.NEXUS_REFLECTION) {\n  if (process.env.NEW_RELIC_LICENSE_KEY) {\n    require(\"newrelic\")\n  } else {\n    console.log(\"New Relic license key missing\")\n  }\n}\n\nconst JSONStream = require(\"JSONStream\")\nconst prismaClient = new PrismaClient({\n  log: [\n    {\n      emit: \"event\",\n      level: \"query\",\n    },\n  ],\n})\n\n/*prismaClient.on(\"query\", (e) => {\n  e.timestamp\n  e.query\n  e.params\n  e.duration\n  e.target\n  console.log(e)\n})*/\n\nuse(\n  prisma({\n    client: { instance: prismaClient },\n    migrations: false,\n    paginationStrategy: \"prisma\",\n    features: { crud: true },\n  }),\n)\n\n/*nexusSchemaPrisma({\n  outputs: {\n    typegen: path.join(\n      __dirname,\n      \"./node_modules/@types/nexus-typegen/index.d.ts\",\n    ),\n  },\n})*/\n\nconst logger = winston.createLogger({\n  level: \"info\",\n  format: winston.format.combine(\n    winston.format.timestamp(),\n    winston.format.json(),\n  ),\n  defaultMeta: { service: \"backend\" },\n  transports: [new winston.transports.Console()],\n})\n\nschema.addToContext(async ({ req }) => ({\n  ...req,\n  // user: undefined,\n  // organization: undefined,\n  // role: Role.VISITOR,\n  // ...(await contextUser(req, prismaClient)),\n  disableRelations: false,\n  // userDetails: undefined,\n  tmcClient: undefined,\n}))\n\nschema.middleware(sentry)\nschema.middleware(cache)\n\nuse(\n  moocfiAuthPlugin({\n    prisma: prismaClient,\n    redisClient,\n  }),\n)\nif (\n  PRODUCTION &&\n  !process.env.NEXUS_REFLECTION &&\n  process.env.NEW_RELIC_LICENSE_KEY\n) {\n  use(newrelicPlugin())\n}\n\nsettings.change({\n  logger: {\n    pretty: true,\n    filter: {\n      level: \"debug\",\n    },\n  },\n  server: {\n    port: 4000,\n    path: PRODUCTION ? \"/api\" : \"/\",\n    graphql: {\n      introspection: true,\n    },\n    playground: {\n      enabled: true,\n    },\n  },\n  schema: {\n    generateGraphQLSDLFile: \"./generated/schema.graphql\",\n    // rootTypingsGlobPattern: \"./graphql/**/*.ts\",\n    connections: {\n      default: {\n        includeNodesField: true,\n      },\n    },\n    authorization: {},\n  },\n})\n\nschema.middleware((_config: any) => async (root, args, ctx, info, next) => {\n  // only log root level query/mutation, not fields queried\n  if (!info.path?.prev) {\n    logger.info(\n      `${info.operation.operation}: ${info.path.key}, args: ${JSON.stringify(\n        args,\n      )}`,\n    )\n  }\n\n  return await next(root, args, ctx, info)\n  /*try {\n    const result = await next(root, args, ctx, info)\n\n    return result\n  } catch (e) {\n    logger.error(\n      `error: ${e}\\n  in type ${config?.parentTypeConfig?.name}, field ${config?.fieldConfig?.name} with args ${config?.args}`,\n    )\n  }*/\n})\n\nserver.express.use(cors())\nserver.express.use(morgan(\"combined\"))\n/*server.express.use(\n  graphqlUploadExpress({\n    maxFileSize: 10_000_000,\n  }),\n)*/\n\nserver.express.get(\"/api/completions/:course\", async function (\n  req: any,\n  res: any,\n) {\n  const rawToken = req.get(\"Authorization\")\n  const secret: string = rawToken?.split(\" \")[1] ?? \"\"\n\n  let course_id: string\n  const org = (\n    await Knex.select(\"*\")\n      .from(\"organization\")\n      .where({ secret_key: secret })\n      .limit(1)\n  )[0]\n  if (!org) {\n    return res.status(401).json({ message: \"Access denied.\" })\n  }\n  const course = (\n    await Knex.select(\"id\")\n      .from(\"course\")\n      .where({ slug: req.params.course })\n      .limit(1)\n  )[0]\n  if (!course) {\n    const course_alias = (\n      await Knex.select(\"course_id\")\n        .from(\"course_alias\")\n        .where({ course_code: req.params.course })\n    )[0]\n    if (!course_alias) {\n      return res.status(404).json({ message: \"Course not found\" })\n    }\n    course_id = course_alias.course_id\n  } else {\n    course_id = course.id\n  }\n  const sql = Knex.select(\"*\").from(\"completion\").where({\n    course_id,\n    eligible_for_ects: true,\n  })\n  res.set(\"Content-Type\", \"application/json\")\n  const stream = sql.stream().pipe(JSONStream.stringify()).pipe(res)\n  req.on(\"close\", stream.end.bind(stream))\n})\n\ntype UserCourseSettingsCountResult =\n  | {\n      course: string\n      language: string\n      count?: number\n    }\n  | {\n      course: string\n      language: string\n      error: true\n    }\n\nserver.express.get(\n  \"/api/usercoursesettingscount/:course/:language\",\n  async (req: any, res: any) => {\n    const {\n      course,\n      language,\n    }: { course: string; language: string } = req.params\n\n    if (!course || !language) {\n      return res\n        .status(400)\n        .json({ message: \"Course and/or language not specified\" })\n    }\n\n    const resObject = await redisify<UserCourseSettingsCountResult>(\n      async () => {\n        let course_id: string\n\n        const { id } =\n          (\n            await Knex.select(\"course.id\")\n              .from(\"course\")\n              .join(\"user_course_settings_visibility\", {\n                \"course.id\": \"user_course_settings_visibility.course_id\",\n              })\n              .where({\n                slug: course,\n                \"user_course_settings_visibility.language\": language,\n              })\n              .limit(1)\n          )[0] ?? {}\n\n        console.log(\"id\", id)\n        if (!id) {\n          const courseAlias = (\n            await Knex.select(\"course_alias.course_id\")\n              .from(\"course_alias\")\n              .join(\"course\", { \"course_alias.course_id\": \"course.id\" })\n              .join(\"user_course_settings_visibility\", {\n                \"course.id\": \"user_course_settings_visibility.course_id\",\n              })\n              .where({\n                course_code: course,\n                \"user_course_settings_visibility.language\": language,\n              })\n          )[0]\n          course_id = courseAlias?.course_id\n        } else {\n          course_id = id\n        }\n\n        if (!course_id) {\n          return { course, language, error: true }\n        }\n\n        let { count } = (\n          await Knex.countDistinct(\"id as count\")\n            .from(\"user_course_setting\")\n            .where({ course_id, language: language })\n        )?.[0]\n\n        if (count < 100) {\n          count = -1\n        } else {\n          const factor = 100\n          count = Math.floor(Number(count) / factor) * factor\n        }\n\n        return { course, language, count: Number(count) }\n      },\n      {\n        prefix: \"usercoursesettingscount\",\n        expireTime: 3600000, // hour\n        key: `${course}-${language}`,\n      },\n    )\n\n    if (resObject.error) {\n      return res\n        .status(403)\n        .json({ message: \"Course not found or user count not set to visible\" })\n    }\n\n    res.json(resObject)\n  },\n)\n\n/*const baiCourseTiers: Record<string, string> = {\n  \"e1eaff32-8b2c-4423-998d-d3477535a1f9\": \"beginner\",\n  \"3a2790fc-227c-4045-9f4c-40a2bdabe76a\": \"intermediate\",\n  \"0e9d1a22-0e19-4320-8c8c-84115bb26452\": \"advanced\",\n}*/\n\ninterface ExerciseCompletionResult {\n  exercise_id: string\n  n_points: string\n  part: number\n  section: number\n  max_points: number\n  completed: boolean\n  quizzes_id: string\n}\n\nserver.express.get(\"/api/progress/:id\", async (req: any, res: any) => {\n  const rawToken = req.get(\"Authorization\")\n\n  if (!rawToken || !(rawToken ?? \"\").startsWith(\"Bearer\")) {\n    return res.status(400).json({ message: \"not logged in\" })\n  }\n\n  const { id }: { id: string } = req.params\n\n  if (!id) {\n    return res.status(400).json({ message: \"must provide id \" })\n  }\n\n  let details: UserInfo | null = null\n  try {\n    const client = new TmcClient(rawToken)\n    details = await redisify<UserInfo>(\n      async () => await client.getCurrentUserDetails(),\n      {\n        prefix: \"userdetails\",\n        expireTime: 3600,\n        key: rawToken,\n      },\n    )\n  } catch (e) {\n    console.log(\"error\", e)\n  }\n\n  if (!details) {\n    return res.status(400).json({ message: \"invalid credentials\" })\n  }\n\n  const completions = await Knex.select<any, ExerciseCompletionResult[]>(\n    \"exercise_id\",\n    \"n_points\",\n    \"part\",\n    \"section\",\n    \"max_points\",\n    \"completed\",\n    \"custom_id as quizzes_id\",\n  )\n    .from(\"exercise_completion\")\n    .join(\"exercise\", { \"exercise_completion.exercise_id\": \"exercise.id\" })\n    .where(\"exercise.custom_id\", id)\n\n  const resObject = (completions ?? []).reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr.exercise_id]: {\n        ...curr,\n        // tier: baiCourseTiers[curr.quizzes_id],\n      },\n    }),\n    {},\n  )\n\n  res.json({\n    data: resObject,\n  })\n})\n\nif (!process.env.NEXUS_REFLECTION) {\n  // only runtime\n  wsListen()\n}\n"]}