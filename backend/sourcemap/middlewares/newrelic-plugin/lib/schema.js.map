{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../middlewares/newrelic-plugin/lib/schema.ts"],"names":[],"mappings":";;;;AAAA,wCAAsC;AAEtC,IAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;AAEpC,SAAS,cAAc;IACrB,OAAO,eAAM,CAAC;QACZ,IAAI,EAAE,kBAAkB;QACxB,qBAAqB,YAAC,MAAM;YAA5B,iBAkBC;YAjBC,OAAO,UAAO,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;;;;;;4BAErC,IAAI,CAAC,IAAI,EAAE;gCACT,QAAQ,CAAC,kBAAkB,CACzB,aAAW,MAAM,CAAC,gBAAgB,CAAC,IAAI,SAAI,MAAM,CAAC,WAAW,CAAC,IAAM,CACrE,CAAA;6BACF;4BAEc,qBAAM,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAAA;;4BAA1C,MAAM,GAAG,SAAiC;4BAEhD,sBAAO,MAAM,EAAA;;;4BAEb,QAAQ,CAAC,WAAW,CAAC,OAAK,CAAC,CAAA;4BAEpB,qBAAM,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAAA;gCAAxC,sBAAO,SAAiC,EAAA;;;;iBAE3C,CAAA;QACH,CAAC;KACF,CAAC,CAAA;AACJ,CAAC;AAEQ,wCAAc","sourcesContent":["import { plugin } from \"@nexus/schema\"\n\nconst newrelic = require(\"newrelic\")\n\nfunction newrelicPlugin() {\n  return plugin({\n    name: \"New Relic Plugin\",\n    onCreateFieldResolver(config) {\n      return async (root, args, ctx, info, next) => {\n        try {\n          if (!root) {\n            newrelic.setTransactionName(\n              `graphql/${config.parentTypeConfig.name}.${config.fieldConfig.name}`,\n            )\n          }\n\n          const result = await next(root, args, ctx, info)\n\n          return result\n        } catch (error) {\n          newrelic.noticeError(error)\n\n          return await next(root, args, ctx, info)\n        }\n      }\n    },\n  })\n}\n\nexport { newrelicPlugin }\n"]}