{"version":3,"file":"sentry.js","sourceRoot":"","sources":["../../middlewares/sentry.ts"],"names":[],"mappings":";;;AAAA,+BAA2B;AAC3B,6CAA2C;AAE3C,IAAM,MAAM,GAAG,UAAC,MAAW,IAAK,OAAA,UAC9B,IAAS,EACT,IAAyB,EACzB,OAAqB,EACrB,IAAS,EACT,IAAc;;;;;;gBAGG,qBAAM,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,EAAA;;gBAA9C,MAAM,GAAG,SAAqC;gBAEpD,sBAAO,MAAM,EAAA;;;gBAEb,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;oBACzC,eAAM,CAAC,SAAS,CAAC,UAAC,KAAK;;wBACrB,KAAK,CAAC,cAAc,CAAC,CAAC,eAAe,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAA;wBAChE,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAA;wBACpD,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;wBAChD,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;wBAC5B,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,QAAE,OAAO,CAAC,IAAI,0CAAE,EAAE,EAAE,CAAC,CAAA;wBAEvC,eAAM,CAAC,gBAAgB,CAAC,OAAK,CAAC,CAAA;oBAChC,CAAC,CAAC,CAAA;iBACH;gBAED,WAAG,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,KAAK,SAAA,EAAE,CAAC,CAAA;gBAE7B,sBAAO,OAAK,EAAA;;;;KAEf,EA5B+B,CA4B/B,CAAA;AAED,qBAAe,MAAM,CAAA","sourcesContent":["import { log } from \"nexus\"\nimport { Sentry } from \"../services/sentry\"\n\nconst sentry = (config: any) => async (\n  root: any,\n  args: Record<string, any>,\n  context: NexusContext,\n  info: any,\n  next: Function,\n) => {\n  try {\n    const result = await next(root, args, context, info)\n\n    return result\n  } catch (error) {\n    if (process.env.NODE_ENV === \"production\") {\n      Sentry.withScope((scope) => {\n        scope.setFingerprint([\"{{ default }}\", config.fieldConfig.name])\n        scope.setExtra(\"type\", config.parentTypeConfig.name)\n        scope.setExtra(\"field\", config.fieldConfig.name)\n        scope.setExtra(\"args\", args)\n        scope.setUser({ id: context.user?.id })\n\n        Sentry.captureException(error)\n      })\n    }\n\n    log.error(\"error\", { error })\n\n    return error\n  }\n}\n\nexport default sentry\n"]}