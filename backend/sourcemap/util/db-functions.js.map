{"version":3,"file":"db-functions.js","sourceRoot":"","sources":["../../util/db-functions.ts"],"names":[],"mappings":";;;;AAAA,uCAAqC;AAErC,IAAM,OAAO,GAAG,UAAC,GAAU,IAAK,OAAA,GAAG,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG,IAAK,OAAA,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EAAf,CAAe,EAAE,EAAE,CAAC,EAA7C,CAA6C,CAAA;AAC7E,IAAM,SAAS,GAAG,UAAC,CAAU;IAC3B,OAAA,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;QAC7D,CAAC,CAAC,SAAS;AAFb,CAEa,CAAA;AAEF,QAAA,WAAW,GAAG,UAAC,MAAgB,EAAE,MAAe;IAC3D,OAAA,MAAM;QACJ,CAAC,CAAC,OAAO,CACL,MAAM,CAAC,GAAG,CAAC,UAAC,CAAC;;YAAK,OAAA;0BACd,GAAC,CAAC,IAAG,EAAE,QAAQ,EAAE,MAAM,EAAE;0BACzB,GAAC,CAAC,IAAG,EAAE,QAAQ,EAAE,SAAS,CAAC,MAAM,CAAC,EAAE;0BACpC,GAAC,CAAC,IAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,WAAW,EAAE,EAAE;aAC1C;QAJiB,CAIjB,CAAC,CACH;QACH,CAAC,CAAC,SAAS;AARb,CAQa,CAAA;AAoBF,QAAA,iBAAiB,GAAG,UAC/B,EAA4D,EAC5D,OAAkC;;QADhC,KAAK,WAAA,EAAE,IAAI,UAAA,EAAE,MAAM,YAAA,EAAE,KAAK,WAAA,EAAE,IAAI,UAAA;IAGlC,IAAM,SAAS,GAAG,IAAI,IAAI,CAAC,CAAA;IACnB,IAAA,KAAiB,CAAA,OAAO,IAAI,EAAE,CAAA,MAAlB,EAAZ,KAAK,mBAAG,IAAI,KAAA,CAAkB;IAEtC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,EAAE;QACnB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAA;KACjD;IAED,OAAO;QACL,IAAI,EAAE,mBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;QAClD,IAAI,EAAE,mBAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAI,CAAC,CAAC,CAAC,CAAC,CAAC,mBAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACjE,MAAM,EAAE,mBAAQ,CAAC,MAAM,CAAC;YACtB,CAAC,WAAG,GAAC,KAAK,IAAG,MAAM,MACnB,CAAC,CAAC,mBAAQ,CAAC,KAAK,CAAC;YACjB,CAAC,WAAG,GAAC,KAAK,IAAG,KAAK,MAClB,CAAC,CAAC,SAAS;KACd,CAAA;AACH,CAAC,CAAA;AAEY,QAAA,UAAU,GAAG,UAAC,CAAM;IAC/B,OAAA,CAAC;QACC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CACtB,UAAC,GAAG,EAAE,EAAM;;gBAAL,CAAC,QAAA,EAAE,CAAC,QAAA;YAAM,OAAA,uCAAM,GAAG,gBAAG,CAAC,IAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAG;QAA5C,CAA4C,EAC7D,EAAE,CACH;QACH,CAAC,CAAC,SAAS;AALb,CAKa,CAAA","sourcesContent":["import { notEmpty } from \"./notEmpty\"\n\nconst flatten = (arr: any[]) => arr.reduce((acc, val) => acc.concat(val), [])\nconst titleCase = (s?: string) =>\n  s && s.length > 0\n    ? s.toLowerCase()[0].toUpperCase() + s.toLowerCase().slice(1)\n    : undefined\n\nexport const buildSearch = (fields: string[], search?: string) =>\n  search\n    ? flatten(\n        fields.map((f) => [\n          { [f]: { contains: search } },\n          { [f]: { contains: titleCase(search) } },\n          { [f]: { contains: search.toLowerCase() } },\n        ]),\n      )\n    : undefined\n\ninterface ConvertPaginationInput {\n  first?: number | null\n  last?: number | null\n  before?: string | null\n  after?: string | null\n  skip?: number | null\n}\n\ninterface ConvertPaginationOptions {\n  field?: string\n}\n\ninterface ConvertPaginationOutput {\n  skip?: number\n  cursor?: { [key: string]: string }\n  take?: number\n}\n\nexport const convertPagination = (\n  { first, last, before, after, skip }: ConvertPaginationInput,\n  options?: ConvertPaginationOptions,\n): ConvertPaginationOutput => {\n  const skipValue = skip || 0\n  const { field = \"id\" } = options || {}\n\n  if (!first && !last) {\n    throw new Error(\"first or last must be defined\")\n  }\n\n  return {\n    skip: notEmpty(before) ? skipValue + 1 : skipValue,\n    take: notEmpty(last) ? -(last ?? 0) : notEmpty(first) ? first : 0,\n    cursor: notEmpty(before)\n      ? { [field]: before }\n      : notEmpty(after)\n      ? { [field]: after }\n      : undefined,\n  }\n}\n\nexport const filterNull = (o: any) =>\n  o\n    ? Object.entries(o).reduce(\n        (acc, [k, v]) => ({ ...acc, [k]: v == null ? undefined : v }),\n        {},\n      )\n    : undefined\n"]}