<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="119" failures="1" errors="0" time="36.623">
  <testsuite name="calculates tier progress correctly" errors="0" failures="0" skipped="0" timestamp="2021-06-09T07:04:26" time="2.677" tests="9">
    <testcase classname="calculates tier progress correctly skips exercises not found" name="calculates tier progress correctly skips exercises not found" time="0.008">
    </testcase>
    <testcase classname="calculates tier progress correctly gets highest tier and picks highest score" name="calculates tier progress correctly gets highest tier and picks highest score" time="0.002">
    </testcase>
    <testcase classname="calculates tier progress correctly does not care about max_points === 0" name="calculates tier progress correctly does not care about max_points === 0" time="0.001">
    </testcase>
    <testcase classname="gets the rules right not enough points" name="gets the rules right not enough points" time="0.002">
    </testcase>
    <testcase classname="gets the rules right not enough exercise completions" name="gets the rules right not enough exercise completions" time="0.001">
    </testcase>
    <testcase classname="gets the rules right hunky dory" name="gets the rules right hunky dory" time="0.002">
    </testcase>
    <testcase classname="gets tier info no basic rule" name="gets tier info no basic rule" time="0.003">
    </testcase>
    <testcase classname="gets tier info has beginner tier" name="gets tier info has beginner tier" time="0.002">
    </testcase>
    <testcase classname="gets progress successfully" name="gets progress successfully" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="exerciseConsumer/saveToDatabase" errors="0" failures="0" skipped="0" timestamp="2021-06-09T07:04:26" time="11.668" tests="3">
    <testcase classname="exerciseConsumer/saveToDatabase errors on non-existing course" name="exerciseConsumer/saveToDatabase errors on non-existing course" time="1.341">
    </testcase>
    <testcase classname="exerciseConsumer/saveToDatabase creates new and sets exercises not in message as deleted" name="exerciseConsumer/saveToDatabase creates new and sets exercises not in message as deleted" time="1.093">
    </testcase>
    <testcase classname="exerciseConsumer/saveToDatabase updates and skips where timestamp is older than existing" name="exerciseConsumer/saveToDatabase updates and skips where timestamp is older than existing" time="1.139">
    </testcase>
  </testsuite>
  <testsuite name="getUserWithRaceCondition" errors="0" failures="0" skipped="0" timestamp="2021-06-09T07:04:26" time="11.76" tests="3">
    <testcase classname="getUserWithRaceCondition returns user found in database" name="getUserWithRaceCondition returns user found in database" time="1.317">
    </testcase>
    <testcase classname="getUserWithRaceCondition user not found in database, found in TMC and created" name="getUserWithRaceCondition user not found in database, found in TMC and created" time="1.12">
    </testcase>
    <testcase classname="getUserWithRaceCondition race condition" name="getUserWithRaceCondition race condition" time="0.98">
    </testcase>
  </testsuite>
  <testsuite name="syncTMCUsers" errors="0" failures="0" skipped="0" timestamp="2021-06-09T07:04:26" time="12.556" tests="4">
    <testcase classname="syncTMCUsers user deletion deletes users" name="syncTMCUsers user deletion deletes users" time="1.362">
    </testcase>
    <testcase classname="syncTMCUsers email update updates emails" name="syncTMCUsers email update updates emails" time="1.078">
    </testcase>
    <testcase classname="syncTMCUsers full test" name="syncTMCUsers full test" time="1.112">
    </testcase>
    <testcase classname="syncTMCUsers throws error on error" name="syncTMCUsers throws error on error" time="0.803">
    </testcase>
  </testsuite>
  <testsuite name="Completion" errors="0" failures="0" skipped="0" timestamp="2021-06-09T07:04:26" time="12.773" tests="4">
    <testcase classname="Completion mutations recheckCompletions normal user errors" name="Completion mutations recheckCompletions normal user errors" time="1.489">
    </testcase>
    <testcase classname="Completion mutations recheckCompletions admin errors on no course_id nor slug" name="Completion mutations recheckCompletions admin errors on no course_id nor slug" time="0.979">
    </testcase>
    <testcase classname="Completion mutations recheckCompletions admin errors on non-existent course" name="Completion mutations recheckCompletions admin errors on non-existent course" time="1.039">
    </testcase>
    <testcase classname="Completion mutations recheckCompletions admin checks completions, creating new where necessary" name="Completion mutations recheckCompletions admin checks completions, creating new where necessary" time="1.108">
    </testcase>
  </testsuite>
  <testsuite name="userCourseProgress/saveToDatabase" errors="0" failures="0" skipped="0" timestamp="2021-06-09T07:04:26" time="13.109" tests="4">
    <testcase classname="userCourseProgress/saveToDatabase create progresses when no previous ones exist" name="userCourseProgress/saveToDatabase create progresses when no previous ones exist" time="1.635">
    </testcase>
    <testcase classname="userCourseProgress/saveToDatabase userCourseProgress(es) should update the eldest and remove all others" name="userCourseProgress/saveToDatabase userCourseProgress(es) should update the eldest and remove all others" time="1.252">
    </testcase>
    <testcase classname="userCourseProgress/saveToDatabase userCourseServiceProgress(es) should update the eldest and remove all others" name="userCourseProgress/saveToDatabase userCourseServiceProgress(es) should update the eldest and remove all others" time="1.165">
    </testcase>
    <testcase classname="userCourseProgress/saveToDatabase userCourseServiceProgress(es) shouldn&apos;t touch any if timestamp is older" name="userCourseProgress/saveToDatabase userCourseServiceProgress(es) shouldn&apos;t touch any if timestamp is older" time="0.954">
    </testcase>
  </testsuite>
  <testsuite name="User" errors="0" failures="0" skipped="0" timestamp="2021-06-09T07:04:26" time="13.111" tests="9">
    <testcase classname="User queries currentUser shows current user when logged in" name="User queries currentUser shows current user when logged in" time="1.499">
    </testcase>
    <testcase classname="User queries currentUser shows null when not logged in" name="User queries currentUser shows null when not logged in" time="0.948">
    </testcase>
    <testcase classname="User queries user_course_summary returns courses with completions" name="User queries user_course_summary returns courses with completions" time="1.071">
    </testcase>
    <testcase classname="User mutations addUser creates user correctly" name="User mutations addUser creates user correctly" time="0.206">
    </testcase>
    <testcase classname="User mutations addUser won&apos;t create user with same id" name="User mutations addUser won&apos;t create user with same id" time="0.204">
    </testcase>
    <testcase classname="User mutations updateResearchConsent updates correctly" name="User mutations updateResearchConsent updates correctly" time="0.249">
    </testcase>
    <testcase classname="User mutations updateResearchConsent won&apos;t update research consent without auth" name="User mutations updateResearchConsent won&apos;t update research consent without auth" time="0.214">
    </testcase>
    <testcase classname="User mutations updateUserName updates correctly" name="User mutations updateUserName updates correctly" time="0.193">
    </testcase>
    <testcase classname="User mutations updateUserName errors without auth" name="User mutations updateUserName errors without auth" time="0.135">
    </testcase>
  </testsuite>
  <testsuite name="Email threshold" errors="0" failures="0" skipped="0" timestamp="2021-06-09T07:04:26" time="14.239" tests="5">
    <testcase classname="Email threshold sends email to user when user meets threshold" name="Email threshold sends email to user when user meets threshold" time="1.669">
    </testcase>
    <testcase classname="Email threshold sends email to user sends all the threshold templates that has not been sent" name="Email threshold sends email to user sends all the threshold templates that has not been sent" time="1.239">
    </testcase>
    <testcase classname="Email threshold sends email to user sends first and second threshold templates" name="Email threshold sends email to user sends first and second threshold templates" time="1.267">
    </testcase>
    <testcase classname="Email threshold doesn&apos;t send email to user if he doesnt meet threshold" name="Email threshold doesn&apos;t send email to user if he doesnt meet threshold" time="0.947">
    </testcase>
    <testcase classname="Email threshold doesn&apos;t send email to user twice if same threshold" name="Email threshold doesn&apos;t send email to user twice if same threshold" time="0.965">
    </testcase>
  </testsuite>
  <testsuite name="createCompletion" errors="0" failures="0" skipped="0" timestamp="2021-06-09T07:04:26" time="14.445" tests="6">
    <testcase classname="createCompletion create new completion create new one when no existing is found" name="createCompletion create new completion create new one when no existing is found" time="1.373">
    </testcase>
    <testcase classname="createCompletion update completion should update when no existing tier" name="createCompletion update completion should update when no existing tier" time="1.136">
    </testcase>
    <testcase classname="createCompletion update completion should update when existing tier is not defined" name="createCompletion update completion should update when existing tier is not defined" time="1.123">
    </testcase>
    <testcase classname="createCompletion update completion should not update when tier is not defined" name="createCompletion update completion should not update when tier is not defined" time="0.905">
    </testcase>
    <testcase classname="createCompletion update completion should not update when existing tier is equivalent" name="createCompletion update completion should not update when existing tier is equivalent" time="0.892">
    </testcase>
    <testcase classname="createCompletion update completion should not update when existing tier is larger" name="createCompletion update completion should not update when existing tier is larger" time="0.817">
    </testcase>
  </testsuite>
  <testsuite name="userPoints/saveToDatabase" errors="0" failures="0" skipped="0" timestamp="2021-06-09T07:04:26" time="17.407" tests="10">
    <testcase classname="userPoints/saveToDatabase errors no user found errors" name="userPoints/saveToDatabase errors no user found errors" time="1.416">
    </testcase>
    <testcase classname="userPoints/saveToDatabase errors no course found errors" name="userPoints/saveToDatabase errors no course found errors" time="0.965">
    </testcase>
    <testcase classname="userPoints/saveToDatabase errors no exercise id given errors" name="userPoints/saveToDatabase errors no exercise id given errors" time="1.024">
    </testcase>
    <testcase classname="userPoints/saveToDatabase errors no exercise found errors" name="userPoints/saveToDatabase errors no exercise found errors" time="0.793">
    </testcase>
    <testcase classname="userPoints/saveToDatabase create new completion when none previous exists" name="userPoints/saveToDatabase create new completion when none previous exists" time="0.93">
    </testcase>
    <testcase classname="userPoints/saveToDatabase create new completion doesn&apos;t create actions when exercise completed" name="userPoints/saveToDatabase create new completion doesn&apos;t create actions when exercise completed" time="0.815">
    </testcase>
    <testcase classname="userPoints/saveToDatabase update existing completion aborts on older timestamp than existing" name="userPoints/saveToDatabase update existing completion aborts on older timestamp than existing" time="0.813">
    </testcase>
    <testcase classname="userPoints/saveToDatabase update existing completion aborts on equal timestamp" name="userPoints/saveToDatabase update existing completion aborts on equal timestamp" time="0.74">
    </testcase>
    <testcase classname="userPoints/saveToDatabase update existing completion updates actions when not completed" name="userPoints/saveToDatabase update existing completion updates actions when not completed" time="0.722">
    </testcase>
    <testcase classname="userPoints/saveToDatabase update existing completion clears actions when completed" name="userPoints/saveToDatabase update existing completion clears actions when completed" time="0.872">
    </testcase>
  </testsuite>
  <testsuite name="API" errors="0" failures="1" skipped="0" timestamp="2021-06-09T07:04:26" time="34.264" tests="33">
    <testcase classname="API /register-completions errors on wrong authorization" name="API /register-completions errors on wrong authorization" time="1.411">
    </testcase>
    <testcase classname="API /register-completions errors on non-existent secret" name="API /register-completions errors on non-existent secret" time="0.988">
    </testcase>
    <testcase classname="API /register-completions errors on no completions" name="API /register-completions errors on no completions" time="1.039">
    </testcase>
    <testcase classname="API /register-completions errors on malformed completion" name="API /register-completions errors on malformed completion" time="0.85">
    </testcase>
    <testcase classname="API /register-completions creates registered completions" name="API /register-completions creates registered completions" time="0.823">
      <failure>Error: expect(received).toMatchSnapshot(properties)

Snapshot name: `API /register-completions creates registered completions 1`

New snapshot was not written. The update flag must be explicitly passed to write a new snapshot.

This is likely because this test is run in a continuous integration (CI) environment in which snapshots are not written by default.

Received:
Array [
  Object {
    &quot;completion_id&quot;: &quot;30000000-0000-0000-0000-000000000102&quot;,
    &quot;course_id&quot;: &quot;00000000-0000-0000-0000-000000000002&quot;,
    &quot;created_at&quot;: Any&lt;Date&gt;,
    &quot;id&quot;: Any&lt;String&gt;,
    &quot;organization_id&quot;: &quot;10000000-0000-0000-0000-000000000102&quot;,
    &quot;real_student_number&quot;: &quot;12345&quot;,
    &quot;updated_at&quot;: Any&lt;Date&gt;,
    &quot;user_id&quot;: &quot;20000000-0000-0000-0000-000000000102&quot;,
  },
  Object {
    &quot;completion_id&quot;: &quot;30000000-0000-0000-0000-000000000103&quot;,
    &quot;course_id&quot;: &quot;00000000-0000-0000-0000-000000000001&quot;,
    &quot;created_at&quot;: Any&lt;Date&gt;,
    &quot;id&quot;: Any&lt;String&gt;,
    &quot;organization_id&quot;: &quot;10000000-0000-0000-0000-000000000102&quot;,
    &quot;real_student_number&quot;: &quot;12345&quot;,
    &quot;updated_at&quot;: Any&lt;Date&gt;,
    &quot;user_id&quot;: &quot;20000000-0000-0000-0000-000000000102&quot;,
  },
]
    at Object.&lt;anonymous&gt; (/home/pyykkomi/duuni/mooc.fi/backend/api/__test__/api.test.ts:116:58)
    at runMicrotasks (&lt;anonymous&gt;)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)</failure>
    </testcase>
    <testcase classname="API /user-course-settings GET errors without slug" name="API /user-course-settings GET errors without slug" time="0.765">
    </testcase>
    <testcase classname="API /user-course-settings GET errors without auth" name="API /user-course-settings GET errors without auth" time="0.738">
    </testcase>
    <testcase classname="API /user-course-settings GET returns null with user with no settings" name="API /user-course-settings GET returns null with user with no settings" time="0.758">
    </testcase>
    <testcase classname="API /user-course-settings GET returns null with course with no settings" name="API /user-course-settings GET returns null with course with no settings" time="0.729">
    </testcase>
    <testcase classname="API /user-course-settings GET warns on key clashes" name="API /user-course-settings GET warns on key clashes" time="0.749">
    </testcase>
    <testcase classname="API /user-course-settings GET returns settings correctly" name="API /user-course-settings GET returns settings correctly" time="0.747">
    </testcase>
    <testcase classname="API /user-course-settings POST errors without slug" name="API /user-course-settings POST errors without slug" time="0.731">
    </testcase>
    <testcase classname="API /user-course-settings POST errors without auth" name="API /user-course-settings POST errors without auth" time="0.73">
    </testcase>
    <testcase classname="API /user-course-settings POST errors on non-existing course" name="API /user-course-settings POST errors on non-existing course" time="0.72">
    </testcase>
    <testcase classname="API /user-course-settings POST errors without given values" name="API /user-course-settings POST errors without given values" time="0.719">
    </testcase>
    <testcase classname="API /user-course-settings POST creates new setting when no existing found" name="API /user-course-settings POST creates new setting when no existing found" time="0.812">
    </testcase>
    <testcase classname="API /user-course-settings POST updates correctly, filters unwanted fields and shoves other fields to other, updating existing ones" name="API /user-course-settings POST updates correctly, filters unwanted fields and shoves other fields to other, updating existing ones" time="0.819">
    </testcase>
    <testcase classname="API /user-course-settings /api/completions errors on no auth" name="API /user-course-settings /api/completions errors on no auth" time="0.708">
    </testcase>
    <testcase classname="API /user-course-settings /api/completions errors on non-existent organization" name="API /user-course-settings /api/completions errors on non-existent organization" time="0.713">
    </testcase>
    <testcase classname="API /user-course-settings /api/completions errors on non-basic authorization" name="API /user-course-settings /api/completions errors on non-basic authorization" time="0.715">
    </testcase>
    <testcase classname="API /user-course-settings /api/completions errors on non-existent course" name="API /user-course-settings /api/completions errors on non-existent course" time="0.73">
    </testcase>
    <testcase classname="API /user-course-settings /api/completions returns correctly on course, skipping registered completions" name="API /user-course-settings /api/completions returns correctly on course, skipping registered completions" time="0.743">
    </testcase>
    <testcase classname="API /user-course-settings /api/completions returns correctly on course alias, skipping registered completions" name="API /user-course-settings /api/completions returns correctly on course alias, skipping registered completions" time="0.661">
    </testcase>
    <testcase classname="API /user-course-settings /api/completions returns correctly on course when registered query parameter is set" name="API /user-course-settings /api/completions returns correctly on course when registered query parameter is set" time="0.711">
    </testcase>
    <testcase classname="API /ab-studies errors on no auth" name="API /ab-studies errors on no auth" time="0.683">
    </testcase>
    <testcase classname="API /ab-studies errors on non-admin" name="API /ab-studies errors on non-admin" time="0.71">
    </testcase>
    <testcase classname="API /ab-studies returns empty on non-existent study" name="API /ab-studies returns empty on non-existent study" time="0.719">
    </testcase>
    <testcase classname="API /ab-studies returns existing study" name="API /ab-studies returns existing study" time="0.769">
    </testcase>
    <testcase classname="API /ab-studies returns all studies on no id given" name="API /ab-studies returns all studies on no id given" time="0.697">
    </testcase>
    <testcase classname="API /ab-enrollments errors on no auth" name="API /ab-enrollments errors on no auth" time="0.757">
    </testcase>
    <testcase classname="API /ab-enrollments errors on non-existent ab_study_id" name="API /ab-enrollments errors on non-existent ab_study_id" time="0.743">
    </testcase>
    <testcase classname="API /ab-enrollments returns existing enrollment" name="API /ab-enrollments returns existing enrollment" time="0.725">
    </testcase>
    <testcase classname="API /ab-enrollments creates enrollment and returns the created one on future calls" name="API /ab-enrollments creates enrollment and returns the created one on future calls" time="0.991">
    </testcase>
  </testsuite>
  <testsuite name="Course" errors="0" failures="0" skipped="0" timestamp="2021-06-09T07:04:26" time="35.652" tests="29">
    <testcase classname="Course queries course normal user should error on no parameters" name="Course queries course normal user should error on no parameters" time="1.343">
    </testcase>
    <testcase classname="Course queries course normal user returns course on id and slug" name="Course queries course normal user returns course on id and slug" time="1.167">
    </testcase>
    <testcase classname="Course queries course normal user returns correct language" name="Course queries course normal user returns correct language" time="0.977">
    </testcase>
    <testcase classname="Course queries course normal user should return null on non-existent language" name="Course queries course normal user should return null on non-existent language" time="0.989">
    </testcase>
    <testcase classname="Course queries course normal user should error on invalid id and slug" name="Course queries course normal user should error on invalid id and slug" time="0.823">
    </testcase>
    <testcase classname="Course queries course admin returns full course on id and slug" name="Course queries course admin returns full course on id and slug" time="0.837">
    </testcase>
    <testcase classname="Course queries courses returns courses" name="Course queries courses returns courses" time="0.868">
    </testcase>
    <testcase classname="Course queries courses returns courses ordered" name="Course queries courses returns courses ordered" time="0.941">
    </testcase>
    <testcase classname="Course queries courses returns courses filtered by language" name="Course queries courses returns courses filtered by language" time="0.967">
    </testcase>
    <testcase classname="Course queries courses returns search results" name="Course queries courses returns search results" time="1.415">
    </testcase>
    <testcase classname="Course queries courses filters hidden" name="Course queries courses filters hidden" time="1.049">
    </testcase>
    <testcase classname="Course queries courses filters handledBy" name="Course queries courses filters handledBy" time="0.798">
    </testcase>
    <testcase classname="Course queries course_exists returns true on existing course" name="Course queries course_exists returns true on existing course" time="0.781">
    </testcase>
    <testcase classname="Course queries course_exists returns false on non-existing course" name="Course queries course_exists returns false on non-existing course" time="0.799">
    </testcase>
    <testcase classname="Course queries handlerCourses returns correctly" name="Course queries handlerCourses returns correctly" time="0.803">
    </testcase>
    <testcase classname="Course queries handlerCourses errors with non-admin" name="Course queries handlerCourses errors with non-admin" time="0.769">
    </testcase>
    <testcase classname="Course mutations addCourse creates a course full" name="Course mutations addCourse creates a course full" time="1.056">
    </testcase>
    <testcase classname="Course mutations addCourse creates a course with no course_translations" name="Course mutations addCourse creates a course with no course_translations" time="1.057">
    </testcase>
    <testcase classname="Course mutations addCourse creates a course with no study_modules" name="Course mutations addCourse creates a course with no study_modules" time="1.041">
    </testcase>
    <testcase classname="Course mutations addCourse creates a course with no photo" name="Course mutations addCourse creates a course with no photo" time="0.806">
    </testcase>
    <testcase classname="Course mutations addCourse errors with non-admin" name="Course mutations addCourse errors with non-admin" time="0.683">
    </testcase>
    <testcase classname="Course mutations updateCourse errors on no slug given" name="Course mutations updateCourse errors on no slug given" time="0.719">
    </testcase>
    <testcase classname="Course mutations updateCourse updates course" name="Course mutations updateCourse updates course" time="1.078">
    </testcase>
    <testcase classname="Course mutations updateCourse updates photo" name="Course mutations updateCourse updates photo" time="1.361">
    </testcase>
    <testcase classname="Course mutations updateCourse deletes photo" name="Course mutations updateCourse deletes photo" time="1.009">
    </testcase>
    <testcase classname="Course mutations updateCourse errors with non-admin" name="Course mutations updateCourse errors with non-admin" time="0.709">
    </testcase>
    <testcase classname="Course mutations deleteCourse deletes course on id" name="Course mutations deleteCourse deletes course on id" time="0.868">
    </testcase>
    <testcase classname="Course mutations deleteCourse deletes course on slug" name="Course mutations deleteCourse deletes course on slug" time="0.855">
    </testcase>
    <testcase classname="Course mutations deleteCourse errors with non-admin" name="Course mutations deleteCourse errors with non-admin" time="0.719">
    </testcase>
  </testsuite>
</testsuites>