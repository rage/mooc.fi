version: '3'
services:
  postgres:
    image: postgres:10.3
    restart: always
    command: postgres -c log_statement='all'
    ports: 
    - "5678:5432"
    environment:
      POSTGRES_USER: prisma
      POSTGRES_PASSWORD: prisma
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres:/var/lib/postgresql/data
  redis:
    image: redis:5.0.5
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    ports:
    - "7001:6379"
    networks:
      - redis-net
    volumes:
      - redis-data:/data
  zookeeper:
    image: strimzi/kafka:0.20.0-kafka-2.6.0
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
      ]
    ports:
    - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: strimzi/kafka:0.20.0-kafka-2.6.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
    - zookeeper
    ports:
    - "9092:9092"
    volumes:
      - kafka-data:/kafka
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
networks:
  redis-net:
volumes:
  postgres:
  redis-data:
  kafka-data:
