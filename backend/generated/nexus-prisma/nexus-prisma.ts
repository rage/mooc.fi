/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      User: UserObject
      Completion: CompletionObject
      Course: CourseObject
      OpenUniversityCourse: OpenUniversityCourseObject
      CompletionRegistered: CompletionRegisteredObject
      UserConnection: UserConnectionObject
      PageInfo: PageInfoObject
      UserEdge: UserEdgeObject
      AggregateUser: AggregateUserObject
      CourseConnection: CourseConnectionObject
      CourseEdge: CourseEdgeObject
      AggregateCourse: AggregateCourseObject
      OpenUniversityCourseConnection: OpenUniversityCourseConnectionObject
      OpenUniversityCourseEdge: OpenUniversityCourseEdgeObject
      AggregateOpenUniversityCourse: AggregateOpenUniversityCourseObject
      CompletionConnection: CompletionConnectionObject
      CompletionEdge: CompletionEdgeObject
      AggregateCompletion: AggregateCompletionObject
      CompletionRegisteredConnection: CompletionRegisteredConnectionObject
      CompletionRegisteredEdge: CompletionRegisteredEdgeObject
      AggregateCompletionRegistered: AggregateCompletionRegisteredObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      UserSubscriptionPayload: UserSubscriptionPayloadObject
      UserPreviousValues: UserPreviousValuesObject
      CourseSubscriptionPayload: CourseSubscriptionPayloadObject
      CoursePreviousValues: CoursePreviousValuesObject
      OpenUniversityCourseSubscriptionPayload: OpenUniversityCourseSubscriptionPayloadObject
      OpenUniversityCoursePreviousValues: OpenUniversityCoursePreviousValuesObject
      CompletionSubscriptionPayload: CompletionSubscriptionPayloadObject
      CompletionPreviousValues: CompletionPreviousValuesObject
      CompletionRegisteredSubscriptionPayload: CompletionRegisteredSubscriptionPayloadObject
      CompletionRegisteredPreviousValues: CompletionRegisteredPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      User: UserFieldDetails
      Completion: CompletionFieldDetails
      Course: CourseFieldDetails
      OpenUniversityCourse: OpenUniversityCourseFieldDetails
      CompletionRegistered: CompletionRegisteredFieldDetails
      UserConnection: UserConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      UserEdge: UserEdgeFieldDetails
      AggregateUser: AggregateUserFieldDetails
      CourseConnection: CourseConnectionFieldDetails
      CourseEdge: CourseEdgeFieldDetails
      AggregateCourse: AggregateCourseFieldDetails
      OpenUniversityCourseConnection: OpenUniversityCourseConnectionFieldDetails
      OpenUniversityCourseEdge: OpenUniversityCourseEdgeFieldDetails
      AggregateOpenUniversityCourse: AggregateOpenUniversityCourseFieldDetails
      CompletionConnection: CompletionConnectionFieldDetails
      CompletionEdge: CompletionEdgeFieldDetails
      AggregateCompletion: AggregateCompletionFieldDetails
      CompletionRegisteredConnection: CompletionRegisteredConnectionFieldDetails
      CompletionRegisteredEdge: CompletionRegisteredEdgeFieldDetails
      AggregateCompletionRegistered: AggregateCompletionRegisteredFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      UserSubscriptionPayload: UserSubscriptionPayloadFieldDetails
      UserPreviousValues: UserPreviousValuesFieldDetails
      CourseSubscriptionPayload: CourseSubscriptionPayloadFieldDetails
      CoursePreviousValues: CoursePreviousValuesFieldDetails
      OpenUniversityCourseSubscriptionPayload: OpenUniversityCourseSubscriptionPayloadFieldDetails
      OpenUniversityCoursePreviousValues: OpenUniversityCoursePreviousValuesFieldDetails
      CompletionSubscriptionPayload: CompletionSubscriptionPayloadFieldDetails
      CompletionPreviousValues: CompletionPreviousValuesFieldDetails
      CompletionRegisteredSubscriptionPayload: CompletionRegisteredSubscriptionPayloadFieldDetails
      CompletionRegisteredPreviousValues: CompletionRegisteredPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      UserWhereUniqueInput: UserWhereUniqueInputInputObject
      CompletionWhereInput: CompletionWhereInputInputObject
      UserWhereInput: UserWhereInputInputObject
      CompletionRegisteredWhereInput: CompletionRegisteredWhereInputInputObject
      CourseWhereInput: CourseWhereInputInputObject
      OpenUniversityCourseWhereInput: OpenUniversityCourseWhereInputInputObject
      CourseWhereUniqueInput: CourseWhereUniqueInputInputObject
      OpenUniversityCourseWhereUniqueInput: OpenUniversityCourseWhereUniqueInputInputObject
      CompletionWhereUniqueInput: CompletionWhereUniqueInputInputObject
      CompletionRegisteredWhereUniqueInput: CompletionRegisteredWhereUniqueInputInputObject
      UserCreateInput: UserCreateInputInputObject
      CompletionCreateManyWithoutUserInput: CompletionCreateManyWithoutUserInputInputObject
      CompletionCreateWithoutUserInput: CompletionCreateWithoutUserInputInputObject
      CourseCreateOneInput: CourseCreateOneInputInputObject
      CourseCreateInput: CourseCreateInputInputObject
      OpenUniversityCourseCreateManyWithoutCourseInput: OpenUniversityCourseCreateManyWithoutCourseInputInputObject
      OpenUniversityCourseCreateWithoutCourseInput: OpenUniversityCourseCreateWithoutCourseInputInputObject
      CompletionRegisteredCreateManyWithoutUserInput: CompletionRegisteredCreateManyWithoutUserInputInputObject
      CompletionRegisteredCreateWithoutUserInput: CompletionRegisteredCreateWithoutUserInputInputObject
      CompletionCreateOneInput: CompletionCreateOneInputInputObject
      CompletionCreateInput: CompletionCreateInputInputObject
      UserCreateOneWithoutCompletionsInput: UserCreateOneWithoutCompletionsInputInputObject
      UserCreateWithoutCompletionsInput: UserCreateWithoutCompletionsInputInputObject
      UserUpdateInput: UserUpdateInputInputObject
      CompletionUpdateManyWithoutUserInput: CompletionUpdateManyWithoutUserInputInputObject
      CompletionUpdateWithWhereUniqueWithoutUserInput: CompletionUpdateWithWhereUniqueWithoutUserInputInputObject
      CompletionUpdateWithoutUserDataInput: CompletionUpdateWithoutUserDataInputInputObject
      CourseUpdateOneRequiredInput: CourseUpdateOneRequiredInputInputObject
      CourseUpdateDataInput: CourseUpdateDataInputInputObject
      OpenUniversityCourseUpdateManyWithoutCourseInput: OpenUniversityCourseUpdateManyWithoutCourseInputInputObject
      OpenUniversityCourseUpdateWithWhereUniqueWithoutCourseInput: OpenUniversityCourseUpdateWithWhereUniqueWithoutCourseInputInputObject
      OpenUniversityCourseUpdateWithoutCourseDataInput: OpenUniversityCourseUpdateWithoutCourseDataInputInputObject
      OpenUniversityCourseUpsertWithWhereUniqueWithoutCourseInput: OpenUniversityCourseUpsertWithWhereUniqueWithoutCourseInputInputObject
      OpenUniversityCourseScalarWhereInput: OpenUniversityCourseScalarWhereInputInputObject
      OpenUniversityCourseUpdateManyWithWhereNestedInput: OpenUniversityCourseUpdateManyWithWhereNestedInputInputObject
      OpenUniversityCourseUpdateManyDataInput: OpenUniversityCourseUpdateManyDataInputInputObject
      CourseUpsertNestedInput: CourseUpsertNestedInputInputObject
      CompletionUpsertWithWhereUniqueWithoutUserInput: CompletionUpsertWithWhereUniqueWithoutUserInputInputObject
      CompletionScalarWhereInput: CompletionScalarWhereInputInputObject
      CompletionUpdateManyWithWhereNestedInput: CompletionUpdateManyWithWhereNestedInputInputObject
      CompletionUpdateManyDataInput: CompletionUpdateManyDataInputInputObject
      CompletionRegisteredUpdateManyWithoutUserInput: CompletionRegisteredUpdateManyWithoutUserInputInputObject
      CompletionRegisteredUpdateWithWhereUniqueWithoutUserInput: CompletionRegisteredUpdateWithWhereUniqueWithoutUserInputInputObject
      CompletionRegisteredUpdateWithoutUserDataInput: CompletionRegisteredUpdateWithoutUserDataInputInputObject
      CompletionUpdateOneRequiredInput: CompletionUpdateOneRequiredInputInputObject
      CompletionUpdateDataInput: CompletionUpdateDataInputInputObject
      UserUpdateOneRequiredWithoutCompletionsInput: UserUpdateOneRequiredWithoutCompletionsInputInputObject
      UserUpdateWithoutCompletionsDataInput: UserUpdateWithoutCompletionsDataInputInputObject
      UserUpsertWithoutCompletionsInput: UserUpsertWithoutCompletionsInputInputObject
      CompletionUpsertNestedInput: CompletionUpsertNestedInputInputObject
      CompletionRegisteredUpsertWithWhereUniqueWithoutUserInput: CompletionRegisteredUpsertWithWhereUniqueWithoutUserInputInputObject
      CompletionRegisteredScalarWhereInput: CompletionRegisteredScalarWhereInputInputObject
      CompletionRegisteredUpdateManyWithWhereNestedInput: CompletionRegisteredUpdateManyWithWhereNestedInputInputObject
      CompletionRegisteredUpdateManyDataInput: CompletionRegisteredUpdateManyDataInputInputObject
      UserUpdateManyMutationInput: UserUpdateManyMutationInputInputObject
      CourseUpdateInput: CourseUpdateInputInputObject
      CourseUpdateManyMutationInput: CourseUpdateManyMutationInputInputObject
      OpenUniversityCourseCreateInput: OpenUniversityCourseCreateInputInputObject
      CourseCreateOneWithoutOpen_university_coursesInput: CourseCreateOneWithoutOpen_university_coursesInputInputObject
      CourseCreateWithoutOpen_university_coursesInput: CourseCreateWithoutOpen_university_coursesInputInputObject
      OpenUniversityCourseUpdateInput: OpenUniversityCourseUpdateInputInputObject
      CourseUpdateOneRequiredWithoutOpen_university_coursesInput: CourseUpdateOneRequiredWithoutOpen_university_coursesInputInputObject
      CourseUpdateWithoutOpen_university_coursesDataInput: CourseUpdateWithoutOpen_university_coursesDataInputInputObject
      CourseUpsertWithoutOpen_university_coursesInput: CourseUpsertWithoutOpen_university_coursesInputInputObject
      OpenUniversityCourseUpdateManyMutationInput: OpenUniversityCourseUpdateManyMutationInputInputObject
      CompletionUpdateInput: CompletionUpdateInputInputObject
      CompletionUpdateManyMutationInput: CompletionUpdateManyMutationInputInputObject
      CompletionRegisteredCreateInput: CompletionRegisteredCreateInputInputObject
      UserCreateOneWithoutRegistered_completionsInput: UserCreateOneWithoutRegistered_completionsInputInputObject
      UserCreateWithoutRegistered_completionsInput: UserCreateWithoutRegistered_completionsInputInputObject
      CompletionRegisteredUpdateInput: CompletionRegisteredUpdateInputInputObject
      UserUpdateOneRequiredWithoutRegistered_completionsInput: UserUpdateOneRequiredWithoutRegistered_completionsInputInputObject
      UserUpdateWithoutRegistered_completionsDataInput: UserUpdateWithoutRegistered_completionsDataInputInputObject
      UserUpsertWithoutRegistered_completionsInput: UserUpsertWithoutRegistered_completionsInputInputObject
      CompletionRegisteredUpdateManyMutationInput: CompletionRegisteredUpdateManyMutationInputInputObject
      UserSubscriptionWhereInput: UserSubscriptionWhereInputInputObject
      CourseSubscriptionWhereInput: CourseSubscriptionWhereInputInputObject
      OpenUniversityCourseSubscriptionWhereInput: OpenUniversityCourseSubscriptionWhereInputInputObject
      CompletionSubscriptionWhereInput: CompletionSubscriptionWhereInputInputObject
      CompletionRegisteredSubscriptionWhereInput: CompletionRegisteredSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    CompletionOrderByInput: CompletionOrderByInputValues,
    OpenUniversityCourseOrderByInput: OpenUniversityCourseOrderByInputValues,
    CompletionRegisteredOrderByInput: CompletionRegisteredOrderByInputValues,
    UserOrderByInput: UserOrderByInputValues,
    CourseOrderByInput: CourseOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'user', args?: QueryUserArgs[] | false, alias?: string  } 
  | { name: 'users', args?: QueryUsersArgs[] | false, alias?: string  } 
  | { name: 'usersConnection', args?: QueryUsersConnectionArgs[] | false, alias?: string  } 
  | { name: 'course', args?: QueryCourseArgs[] | false, alias?: string  } 
  | { name: 'courses', args?: QueryCoursesArgs[] | false, alias?: string  } 
  | { name: 'coursesConnection', args?: QueryCoursesConnectionArgs[] | false, alias?: string  } 
  | { name: 'openUniversityCourse', args?: QueryOpenUniversityCourseArgs[] | false, alias?: string  } 
  | { name: 'openUniversityCourses', args?: QueryOpenUniversityCoursesArgs[] | false, alias?: string  } 
  | { name: 'openUniversityCoursesConnection', args?: QueryOpenUniversityCoursesConnectionArgs[] | false, alias?: string  } 
  | { name: 'completion', args?: QueryCompletionArgs[] | false, alias?: string  } 
  | { name: 'completions', args?: QueryCompletionsArgs[] | false, alias?: string  } 
  | { name: 'completionsConnection', args?: QueryCompletionsConnectionArgs[] | false, alias?: string  } 
  | { name: 'completionRegistered', args?: QueryCompletionRegisteredArgs[] | false, alias?: string  } 
  | { name: 'completionRegistereds', args?: QueryCompletionRegisteredsArgs[] | false, alias?: string  } 
  | { name: 'completionRegisteredsConnection', args?: QueryCompletionRegisteredsConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'user'
  | 'users'
  | 'usersConnection'
  | 'course'
  | 'courses'
  | 'coursesConnection'
  | 'openUniversityCourse'
  | 'openUniversityCourses'
  | 'openUniversityCoursesConnection'
  | 'completion'
  | 'completions'
  | 'completionsConnection'
  | 'completionRegistered'
  | 'completionRegistereds'
  | 'completionRegisteredsConnection'


type QueryUserArgs =
  | 'where'
type QueryUsersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUsersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCourseArgs =
  | 'where'
type QueryCoursesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCoursesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOpenUniversityCourseArgs =
  | 'where'
type QueryOpenUniversityCoursesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOpenUniversityCoursesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCompletionArgs =
  | 'where'
type QueryCompletionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCompletionsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCompletionRegisteredArgs =
  | 'where'
type QueryCompletionRegisteredsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCompletionRegisteredsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  user: {
    type: 'User'
    args: Record<QueryUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  users: {
    type: 'User'
    args: Record<QueryUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  usersConnection: {
    type: 'UserConnection'
    args: Record<QueryUsersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserConnection> | prisma.UserConnection
  }
  course: {
    type: 'Course'
    args: Record<QueryCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: CourseWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course | null> | prisma.Course | null
  }
  courses: {
    type: 'Course'
    args: Record<QueryCoursesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CourseWhereInput | null, orderBy?: prisma.CourseOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course[]> | prisma.Course[]
  }
  coursesConnection: {
    type: 'CourseConnection'
    args: Record<QueryCoursesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CourseWhereInput | null, orderBy?: prisma.CourseOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseConnection> | prisma.CourseConnection
  }
  openUniversityCourse: {
    type: 'OpenUniversityCourse'
    args: Record<QueryOpenUniversityCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OpenUniversityCourseWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpenUniversityCourse | null> | prisma.OpenUniversityCourse | null
  }
  openUniversityCourses: {
    type: 'OpenUniversityCourse'
    args: Record<QueryOpenUniversityCoursesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OpenUniversityCourseWhereInput | null, orderBy?: prisma.OpenUniversityCourseOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpenUniversityCourse[]> | prisma.OpenUniversityCourse[]
  }
  openUniversityCoursesConnection: {
    type: 'OpenUniversityCourseConnection'
    args: Record<QueryOpenUniversityCoursesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OpenUniversityCourseWhereInput | null, orderBy?: prisma.OpenUniversityCourseOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpenUniversityCourseConnection> | prisma.OpenUniversityCourseConnection
  }
  completion: {
    type: 'Completion'
    args: Record<QueryCompletionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: CompletionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion | null> | prisma.Completion | null
  }
  completions: {
    type: 'Completion'
    args: Record<QueryCompletionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CompletionWhereInput | null, orderBy?: prisma.CompletionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion[]> | prisma.Completion[]
  }
  completionsConnection: {
    type: 'CompletionConnection'
    args: Record<QueryCompletionsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CompletionWhereInput | null, orderBy?: prisma.CompletionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionConnection> | prisma.CompletionConnection
  }
  completionRegistered: {
    type: 'CompletionRegistered'
    args: Record<QueryCompletionRegisteredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: CompletionRegisteredWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered | null> | prisma.CompletionRegistered | null
  }
  completionRegistereds: {
    type: 'CompletionRegistered'
    args: Record<QueryCompletionRegisteredsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CompletionRegisteredWhereInput | null, orderBy?: prisma.CompletionRegisteredOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered[]> | prisma.CompletionRegistered[]
  }
  completionRegisteredsConnection: {
    type: 'CompletionRegisteredConnection'
    args: Record<QueryCompletionRegisteredsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CompletionRegisteredWhereInput | null, orderBy?: prisma.CompletionRegisteredOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegisteredConnection> | prisma.CompletionRegisteredConnection
  }
}
  

// Types for User

type UserObject =
  | UserFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'upstream_id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'first_name', args?: [] | false, alias?: string  } 
  | { name: 'last_name', args?: [] | false, alias?: string  } 
  | { name: 'username', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'administrator', args?: [] | false, alias?: string  } 
  | { name: 'student_number', args?: [] | false, alias?: string  } 
  | { name: 'real_student_number', args?: [] | false, alias?: string  } 
  | { name: 'completions', args?: UserCompletionsArgs[] | false, alias?: string  } 
  | { name: 'registered_completions', args?: UserRegistered_completionsArgs[] | false, alias?: string  } 

type UserFields =
  | 'id'
  | 'upstream_id'
  | 'created_at'
  | 'updated_at'
  | 'first_name'
  | 'last_name'
  | 'username'
  | 'email'
  | 'administrator'
  | 'student_number'
  | 'real_student_number'
  | 'completions'
  | 'registered_completions'


type UserCompletionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type UserRegistered_completionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface UserFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  upstream_id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  first_name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  last_name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  username: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  administrator: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  student_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  real_student_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  completions: {
    type: 'Completion'
    args: Record<UserCompletionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: CompletionWhereInput | null, orderBy?: prisma.CompletionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion[]> | prisma.Completion[]
  }
  registered_completions: {
    type: 'CompletionRegistered'
    args: Record<UserRegistered_completionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: CompletionRegisteredWhereInput | null, orderBy?: prisma.CompletionRegisteredOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered[]> | prisma.CompletionRegistered[]
  }
}
  

// Types for Completion

type CompletionObject =
  | CompletionFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'user_upstream_id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'student_number', args?: [] | false, alias?: string  } 
  | { name: 'user', args?: [] | false, alias?: string  } 
  | { name: 'course', args?: [] | false, alias?: string  } 
  | { name: 'completion_language', args?: [] | false, alias?: string  } 

type CompletionFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'user_upstream_id'
  | 'email'
  | 'student_number'
  | 'user'
  | 'course'
  | 'completion_language'



  

export interface CompletionFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  user_upstream_id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  student_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  user: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Completion">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  course: {
    type: 'Course'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Completion">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course> | prisma.Course
  }
  completion_language: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Course

type CourseObject =
  | CourseFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'slug', args?: [] | false, alias?: string  } 
  | { name: 'open_university_courses', args?: CourseOpen_university_coursesArgs[] | false, alias?: string  } 

type CourseFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'name'
  | 'slug'
  | 'open_university_courses'


type CourseOpen_university_coursesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface CourseFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  slug: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  open_university_courses: {
    type: 'OpenUniversityCourse'
    args: Record<CourseOpen_university_coursesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Course">,
      args: { where?: OpenUniversityCourseWhereInput | null, orderBy?: prisma.OpenUniversityCourseOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpenUniversityCourse[]> | prisma.OpenUniversityCourse[]
  }
}
  

// Types for OpenUniversityCourse

type OpenUniversityCourseObject =
  | OpenUniversityCourseFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'course_code', args?: [] | false, alias?: string  } 
  | { name: 'course', args?: [] | false, alias?: string  } 

type OpenUniversityCourseFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'course_code'
  | 'course'



  

export interface OpenUniversityCourseFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  course_code: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  course: {
    type: 'Course'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OpenUniversityCourse">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course> | prisma.Course
  }
}
  

// Types for CompletionRegistered

type CompletionRegisteredObject =
  | CompletionRegisteredFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'user', args?: [] | false, alias?: string  } 
  | { name: 'course', args?: [] | false, alias?: string  } 
  | { name: 'real_student_number', args?: [] | false, alias?: string  } 
  | { name: 'organisation', args?: [] | false, alias?: string  } 
  | { name: 'completion', args?: [] | false, alias?: string  } 

type CompletionRegisteredFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'user'
  | 'course'
  | 'real_student_number'
  | 'organisation'
  | 'completion'



  

export interface CompletionRegisteredFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  user: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionRegistered">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  course: {
    type: 'Course'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionRegistered">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course> | prisma.Course
  }
  real_student_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  organisation: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  completion: {
    type: 'Completion'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionRegistered">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion> | prisma.Completion
  }
}
  

// Types for UserConnection

type UserConnectionObject =
  | UserConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserEdge[]> | prisma.UserEdge[]
  }
  aggregate: {
    type: 'AggregateUser'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUser> | prisma.AggregateUser
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for UserEdge

type UserEdgeObject =
  | UserEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserEdgeFieldDetails {
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUser

type AggregateUserObject =
  | AggregateUserFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserFields =
  | 'count'



  

export interface AggregateUserFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CourseConnection

type CourseConnectionObject =
  | CourseConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type CourseConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface CourseConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CourseConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'CourseEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"CourseConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseEdge[]> | prisma.CourseEdge[]
  }
  aggregate: {
    type: 'AggregateCourse'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CourseConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateCourse> | prisma.AggregateCourse
  }
}
  

// Types for CourseEdge

type CourseEdgeObject =
  | CourseEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type CourseEdgeFields =
  | 'node'
  | 'cursor'



  

export interface CourseEdgeFieldDetails {
  node: {
    type: 'Course'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CourseEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course> | prisma.Course
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateCourse

type AggregateCourseObject =
  | AggregateCourseFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateCourseFields =
  | 'count'



  

export interface AggregateCourseFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OpenUniversityCourseConnection

type OpenUniversityCourseConnectionObject =
  | OpenUniversityCourseConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OpenUniversityCourseConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OpenUniversityCourseConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OpenUniversityCourseConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OpenUniversityCourseEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OpenUniversityCourseConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpenUniversityCourseEdge[]> | prisma.OpenUniversityCourseEdge[]
  }
  aggregate: {
    type: 'AggregateOpenUniversityCourse'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OpenUniversityCourseConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOpenUniversityCourse> | prisma.AggregateOpenUniversityCourse
  }
}
  

// Types for OpenUniversityCourseEdge

type OpenUniversityCourseEdgeObject =
  | OpenUniversityCourseEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OpenUniversityCourseEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OpenUniversityCourseEdgeFieldDetails {
  node: {
    type: 'OpenUniversityCourse'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OpenUniversityCourseEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpenUniversityCourse> | prisma.OpenUniversityCourse
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOpenUniversityCourse

type AggregateOpenUniversityCourseObject =
  | AggregateOpenUniversityCourseFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOpenUniversityCourseFields =
  | 'count'



  

export interface AggregateOpenUniversityCourseFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CompletionConnection

type CompletionConnectionObject =
  | CompletionConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type CompletionConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface CompletionConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'CompletionEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionEdge[]> | prisma.CompletionEdge[]
  }
  aggregate: {
    type: 'AggregateCompletion'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateCompletion> | prisma.AggregateCompletion
  }
}
  

// Types for CompletionEdge

type CompletionEdgeObject =
  | CompletionEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type CompletionEdgeFields =
  | 'node'
  | 'cursor'



  

export interface CompletionEdgeFieldDetails {
  node: {
    type: 'Completion'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion> | prisma.Completion
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateCompletion

type AggregateCompletionObject =
  | AggregateCompletionFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateCompletionFields =
  | 'count'



  

export interface AggregateCompletionFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CompletionRegisteredConnection

type CompletionRegisteredConnectionObject =
  | CompletionRegisteredConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type CompletionRegisteredConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface CompletionRegisteredConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionRegisteredConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'CompletionRegisteredEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionRegisteredConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegisteredEdge[]> | prisma.CompletionRegisteredEdge[]
  }
  aggregate: {
    type: 'AggregateCompletionRegistered'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionRegisteredConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateCompletionRegistered> | prisma.AggregateCompletionRegistered
  }
}
  

// Types for CompletionRegisteredEdge

type CompletionRegisteredEdgeObject =
  | CompletionRegisteredEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type CompletionRegisteredEdgeFields =
  | 'node'
  | 'cursor'



  

export interface CompletionRegisteredEdgeFieldDetails {
  node: {
    type: 'CompletionRegistered'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionRegisteredEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered> | prisma.CompletionRegistered
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateCompletionRegistered

type AggregateCompletionRegisteredObject =
  | AggregateCompletionRegisteredFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateCompletionRegisteredFields =
  | 'count'



  

export interface AggregateCompletionRegisteredFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createUser', args?: MutationCreateUserArgs[] | false, alias?: string  } 
  | { name: 'updateUser', args?: MutationUpdateUserArgs[] | false, alias?: string  } 
  | { name: 'updateManyUsers', args?: MutationUpdateManyUsersArgs[] | false, alias?: string  } 
  | { name: 'upsertUser', args?: MutationUpsertUserArgs[] | false, alias?: string  } 
  | { name: 'deleteUser', args?: MutationDeleteUserArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUsers', args?: MutationDeleteManyUsersArgs[] | false, alias?: string  } 
  | { name: 'createCourse', args?: MutationCreateCourseArgs[] | false, alias?: string  } 
  | { name: 'updateCourse', args?: MutationUpdateCourseArgs[] | false, alias?: string  } 
  | { name: 'updateManyCourses', args?: MutationUpdateManyCoursesArgs[] | false, alias?: string  } 
  | { name: 'upsertCourse', args?: MutationUpsertCourseArgs[] | false, alias?: string  } 
  | { name: 'deleteCourse', args?: MutationDeleteCourseArgs[] | false, alias?: string  } 
  | { name: 'deleteManyCourses', args?: MutationDeleteManyCoursesArgs[] | false, alias?: string  } 
  | { name: 'createOpenUniversityCourse', args?: MutationCreateOpenUniversityCourseArgs[] | false, alias?: string  } 
  | { name: 'updateOpenUniversityCourse', args?: MutationUpdateOpenUniversityCourseArgs[] | false, alias?: string  } 
  | { name: 'updateManyOpenUniversityCourses', args?: MutationUpdateManyOpenUniversityCoursesArgs[] | false, alias?: string  } 
  | { name: 'upsertOpenUniversityCourse', args?: MutationUpsertOpenUniversityCourseArgs[] | false, alias?: string  } 
  | { name: 'deleteOpenUniversityCourse', args?: MutationDeleteOpenUniversityCourseArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOpenUniversityCourses', args?: MutationDeleteManyOpenUniversityCoursesArgs[] | false, alias?: string  } 
  | { name: 'createCompletion', args?: MutationCreateCompletionArgs[] | false, alias?: string  } 
  | { name: 'updateCompletion', args?: MutationUpdateCompletionArgs[] | false, alias?: string  } 
  | { name: 'updateManyCompletions', args?: MutationUpdateManyCompletionsArgs[] | false, alias?: string  } 
  | { name: 'upsertCompletion', args?: MutationUpsertCompletionArgs[] | false, alias?: string  } 
  | { name: 'deleteCompletion', args?: MutationDeleteCompletionArgs[] | false, alias?: string  } 
  | { name: 'deleteManyCompletions', args?: MutationDeleteManyCompletionsArgs[] | false, alias?: string  } 
  | { name: 'createCompletionRegistered', args?: MutationCreateCompletionRegisteredArgs[] | false, alias?: string  } 
  | { name: 'updateCompletionRegistered', args?: MutationUpdateCompletionRegisteredArgs[] | false, alias?: string  } 
  | { name: 'updateManyCompletionRegistereds', args?: MutationUpdateManyCompletionRegisteredsArgs[] | false, alias?: string  } 
  | { name: 'upsertCompletionRegistered', args?: MutationUpsertCompletionRegisteredArgs[] | false, alias?: string  } 
  | { name: 'deleteCompletionRegistered', args?: MutationDeleteCompletionRegisteredArgs[] | false, alias?: string  } 
  | { name: 'deleteManyCompletionRegistereds', args?: MutationDeleteManyCompletionRegisteredsArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createUser'
  | 'updateUser'
  | 'updateManyUsers'
  | 'upsertUser'
  | 'deleteUser'
  | 'deleteManyUsers'
  | 'createCourse'
  | 'updateCourse'
  | 'updateManyCourses'
  | 'upsertCourse'
  | 'deleteCourse'
  | 'deleteManyCourses'
  | 'createOpenUniversityCourse'
  | 'updateOpenUniversityCourse'
  | 'updateManyOpenUniversityCourses'
  | 'upsertOpenUniversityCourse'
  | 'deleteOpenUniversityCourse'
  | 'deleteManyOpenUniversityCourses'
  | 'createCompletion'
  | 'updateCompletion'
  | 'updateManyCompletions'
  | 'upsertCompletion'
  | 'deleteCompletion'
  | 'deleteManyCompletions'
  | 'createCompletionRegistered'
  | 'updateCompletionRegistered'
  | 'updateManyCompletionRegistereds'
  | 'upsertCompletionRegistered'
  | 'deleteCompletionRegistered'
  | 'deleteManyCompletionRegistereds'


type MutationCreateUserArgs =
  | 'data'
type MutationUpdateUserArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUsersArgs =
  | 'data'
  | 'where'
type MutationUpsertUserArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserArgs =
  | 'where'
type MutationDeleteManyUsersArgs =
  | 'where'
type MutationCreateCourseArgs =
  | 'data'
type MutationUpdateCourseArgs =
  | 'data'
  | 'where'
type MutationUpdateManyCoursesArgs =
  | 'data'
  | 'where'
type MutationUpsertCourseArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteCourseArgs =
  | 'where'
type MutationDeleteManyCoursesArgs =
  | 'where'
type MutationCreateOpenUniversityCourseArgs =
  | 'data'
type MutationUpdateOpenUniversityCourseArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOpenUniversityCoursesArgs =
  | 'data'
  | 'where'
type MutationUpsertOpenUniversityCourseArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOpenUniversityCourseArgs =
  | 'where'
type MutationDeleteManyOpenUniversityCoursesArgs =
  | 'where'
type MutationCreateCompletionArgs =
  | 'data'
type MutationUpdateCompletionArgs =
  | 'data'
  | 'where'
type MutationUpdateManyCompletionsArgs =
  | 'data'
  | 'where'
type MutationUpsertCompletionArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteCompletionArgs =
  | 'where'
type MutationDeleteManyCompletionsArgs =
  | 'where'
type MutationCreateCompletionRegisteredArgs =
  | 'data'
type MutationUpdateCompletionRegisteredArgs =
  | 'data'
  | 'where'
type MutationUpdateManyCompletionRegisteredsArgs =
  | 'data'
  | 'where'
type MutationUpsertCompletionRegisteredArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteCompletionRegisteredArgs =
  | 'where'
type MutationDeleteManyCompletionRegisteredsArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createUser: {
    type: 'User'
    args: Record<MutationCreateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  updateUser: {
    type: 'User'
    args: Record<MutationUpdateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateInput, where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updateManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateManyMutationInput, where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUser: {
    type: 'User'
    args: Record<MutationUpsertUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput, create: UserCreateInput, update: UserUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  deleteUser: {
    type: 'User'
    args: Record<MutationDeleteUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  deleteManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createCourse: {
    type: 'Course'
    args: Record<MutationCreateCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CourseCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course> | prisma.Course
  }
  updateCourse: {
    type: 'Course'
    args: Record<MutationUpdateCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CourseUpdateInput, where: CourseWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course | null> | prisma.Course | null
  }
  updateManyCourses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyCoursesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CourseUpdateManyMutationInput, where?: CourseWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertCourse: {
    type: 'Course'
    args: Record<MutationUpsertCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CourseWhereUniqueInput, create: CourseCreateInput, update: CourseUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course> | prisma.Course
  }
  deleteCourse: {
    type: 'Course'
    args: Record<MutationDeleteCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CourseWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course | null> | prisma.Course | null
  }
  deleteManyCourses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyCoursesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: CourseWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOpenUniversityCourse: {
    type: 'OpenUniversityCourse'
    args: Record<MutationCreateOpenUniversityCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OpenUniversityCourseCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpenUniversityCourse> | prisma.OpenUniversityCourse
  }
  updateOpenUniversityCourse: {
    type: 'OpenUniversityCourse'
    args: Record<MutationUpdateOpenUniversityCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OpenUniversityCourseUpdateInput, where: OpenUniversityCourseWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpenUniversityCourse | null> | prisma.OpenUniversityCourse | null
  }
  updateManyOpenUniversityCourses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOpenUniversityCoursesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OpenUniversityCourseUpdateManyMutationInput, where?: OpenUniversityCourseWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOpenUniversityCourse: {
    type: 'OpenUniversityCourse'
    args: Record<MutationUpsertOpenUniversityCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OpenUniversityCourseWhereUniqueInput, create: OpenUniversityCourseCreateInput, update: OpenUniversityCourseUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpenUniversityCourse> | prisma.OpenUniversityCourse
  }
  deleteOpenUniversityCourse: {
    type: 'OpenUniversityCourse'
    args: Record<MutationDeleteOpenUniversityCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OpenUniversityCourseWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpenUniversityCourse | null> | prisma.OpenUniversityCourse | null
  }
  deleteManyOpenUniversityCourses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOpenUniversityCoursesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OpenUniversityCourseWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createCompletion: {
    type: 'Completion'
    args: Record<MutationCreateCompletionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CompletionCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion> | prisma.Completion
  }
  updateCompletion: {
    type: 'Completion'
    args: Record<MutationUpdateCompletionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CompletionUpdateInput, where: CompletionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion | null> | prisma.Completion | null
  }
  updateManyCompletions: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyCompletionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CompletionUpdateManyMutationInput, where?: CompletionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertCompletion: {
    type: 'Completion'
    args: Record<MutationUpsertCompletionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CompletionWhereUniqueInput, create: CompletionCreateInput, update: CompletionUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion> | prisma.Completion
  }
  deleteCompletion: {
    type: 'Completion'
    args: Record<MutationDeleteCompletionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CompletionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion | null> | prisma.Completion | null
  }
  deleteManyCompletions: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyCompletionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: CompletionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createCompletionRegistered: {
    type: 'CompletionRegistered'
    args: Record<MutationCreateCompletionRegisteredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CompletionRegisteredCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered> | prisma.CompletionRegistered
  }
  updateCompletionRegistered: {
    type: 'CompletionRegistered'
    args: Record<MutationUpdateCompletionRegisteredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CompletionRegisteredUpdateInput, where: CompletionRegisteredWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered | null> | prisma.CompletionRegistered | null
  }
  updateManyCompletionRegistereds: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyCompletionRegisteredsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CompletionRegisteredUpdateManyMutationInput, where?: CompletionRegisteredWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertCompletionRegistered: {
    type: 'CompletionRegistered'
    args: Record<MutationUpsertCompletionRegisteredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CompletionRegisteredWhereUniqueInput, create: CompletionRegisteredCreateInput, update: CompletionRegisteredUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered> | prisma.CompletionRegistered
  }
  deleteCompletionRegistered: {
    type: 'CompletionRegistered'
    args: Record<MutationDeleteCompletionRegisteredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CompletionRegisteredWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered | null> | prisma.CompletionRegistered | null
  }
  deleteManyCompletionRegistereds: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyCompletionRegisteredsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: CompletionRegisteredWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'user', args?: SubscriptionUserArgs[] | false, alias?: string  } 
  | { name: 'course', args?: SubscriptionCourseArgs[] | false, alias?: string  } 
  | { name: 'openUniversityCourse', args?: SubscriptionOpenUniversityCourseArgs[] | false, alias?: string  } 
  | { name: 'completion', args?: SubscriptionCompletionArgs[] | false, alias?: string  } 
  | { name: 'completionRegistered', args?: SubscriptionCompletionRegisteredArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'user'
  | 'course'
  | 'openUniversityCourse'
  | 'completion'
  | 'completionRegistered'


type SubscriptionUserArgs =
  | 'where'
type SubscriptionCourseArgs =
  | 'where'
type SubscriptionOpenUniversityCourseArgs =
  | 'where'
type SubscriptionCompletionArgs =
  | 'where'
type SubscriptionCompletionRegisteredArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  user: {
    type: 'UserSubscriptionPayload'
    args: Record<SubscriptionUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserSubscriptionPayload | null> | prisma.UserSubscriptionPayload | null
  }
  course: {
    type: 'CourseSubscriptionPayload'
    args: Record<SubscriptionCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: CourseSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseSubscriptionPayload | null> | prisma.CourseSubscriptionPayload | null
  }
  openUniversityCourse: {
    type: 'OpenUniversityCourseSubscriptionPayload'
    args: Record<SubscriptionOpenUniversityCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OpenUniversityCourseSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpenUniversityCourseSubscriptionPayload | null> | prisma.OpenUniversityCourseSubscriptionPayload | null
  }
  completion: {
    type: 'CompletionSubscriptionPayload'
    args: Record<SubscriptionCompletionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: CompletionSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionSubscriptionPayload | null> | prisma.CompletionSubscriptionPayload | null
  }
  completionRegistered: {
    type: 'CompletionRegisteredSubscriptionPayload'
    args: Record<SubscriptionCompletionRegisteredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: CompletionRegisteredSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegisteredSubscriptionPayload | null> | prisma.CompletionRegisteredSubscriptionPayload | null
  }
}
  

// Types for UserSubscriptionPayload

type UserSubscriptionPayloadObject =
  | UserSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPreviousValues | null> | prisma.UserPreviousValues | null
  }
}
  

// Types for UserPreviousValues

type UserPreviousValuesObject =
  | UserPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'upstream_id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'first_name', args?: [] | false, alias?: string  } 
  | { name: 'last_name', args?: [] | false, alias?: string  } 
  | { name: 'username', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'administrator', args?: [] | false, alias?: string  } 
  | { name: 'student_number', args?: [] | false, alias?: string  } 
  | { name: 'real_student_number', args?: [] | false, alias?: string  } 

type UserPreviousValuesFields =
  | 'id'
  | 'upstream_id'
  | 'created_at'
  | 'updated_at'
  | 'first_name'
  | 'last_name'
  | 'username'
  | 'email'
  | 'administrator'
  | 'student_number'
  | 'real_student_number'



  

export interface UserPreviousValuesFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  upstream_id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  first_name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  last_name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  username: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  administrator: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  student_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  real_student_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for CourseSubscriptionPayload

type CourseSubscriptionPayloadObject =
  | CourseSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type CourseSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface CourseSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CourseSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Course'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CourseSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course | null> | prisma.Course | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'CoursePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CourseSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CoursePreviousValues | null> | prisma.CoursePreviousValues | null
  }
}
  

// Types for CoursePreviousValues

type CoursePreviousValuesObject =
  | CoursePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'slug', args?: [] | false, alias?: string  } 

type CoursePreviousValuesFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'name'
  | 'slug'



  

export interface CoursePreviousValuesFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  slug: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OpenUniversityCourseSubscriptionPayload

type OpenUniversityCourseSubscriptionPayloadObject =
  | OpenUniversityCourseSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OpenUniversityCourseSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OpenUniversityCourseSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OpenUniversityCourseSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'OpenUniversityCourse'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OpenUniversityCourseSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpenUniversityCourse | null> | prisma.OpenUniversityCourse | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OpenUniversityCoursePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OpenUniversityCourseSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpenUniversityCoursePreviousValues | null> | prisma.OpenUniversityCoursePreviousValues | null
  }
}
  

// Types for OpenUniversityCoursePreviousValues

type OpenUniversityCoursePreviousValuesObject =
  | OpenUniversityCoursePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'course_code', args?: [] | false, alias?: string  } 

type OpenUniversityCoursePreviousValuesFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'course_code'



  

export interface OpenUniversityCoursePreviousValuesFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  course_code: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CompletionSubscriptionPayload

type CompletionSubscriptionPayloadObject =
  | CompletionSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type CompletionSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface CompletionSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Completion'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CompletionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion | null> | prisma.Completion | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'CompletionPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CompletionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionPreviousValues | null> | prisma.CompletionPreviousValues | null
  }
}
  

// Types for CompletionPreviousValues

type CompletionPreviousValuesObject =
  | CompletionPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'user_upstream_id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'student_number', args?: [] | false, alias?: string  } 
  | { name: 'completion_language', args?: [] | false, alias?: string  } 

type CompletionPreviousValuesFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'user_upstream_id'
  | 'email'
  | 'student_number'
  | 'completion_language'



  

export interface CompletionPreviousValuesFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  user_upstream_id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  student_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  completion_language: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for CompletionRegisteredSubscriptionPayload

type CompletionRegisteredSubscriptionPayloadObject =
  | CompletionRegisteredSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type CompletionRegisteredSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface CompletionRegisteredSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionRegisteredSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'CompletionRegistered'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CompletionRegisteredSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered | null> | prisma.CompletionRegistered | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'CompletionRegisteredPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CompletionRegisteredSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegisteredPreviousValues | null> | prisma.CompletionRegisteredPreviousValues | null
  }
}
  

// Types for CompletionRegisteredPreviousValues

type CompletionRegisteredPreviousValuesObject =
  | CompletionRegisteredPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'real_student_number', args?: [] | false, alias?: string  } 
  | { name: 'organisation', args?: [] | false, alias?: string  } 

type CompletionRegisteredPreviousValuesFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'real_student_number'
  | 'organisation'



  

export interface CompletionRegisteredPreviousValuesFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  real_student_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  organisation: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  


export interface UserWhereUniqueInput {
  id?: undefined | null
  upstream_id?: number | null
  username?: string | null
}
export type UserWhereUniqueInputInputObject =
  | Extract<keyof UserWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'username', alias?: string  } 
  
export interface CompletionWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  user_upstream_id?: number | null
  user_upstream_id_not?: number | null
  user_upstream_id_in?: number[]
  user_upstream_id_not_in?: number[]
  user_upstream_id_lt?: number | null
  user_upstream_id_lte?: number | null
  user_upstream_id_gt?: number | null
  user_upstream_id_gte?: number | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  student_number?: string | null
  student_number_not?: string | null
  student_number_in?: string[]
  student_number_not_in?: string[]
  student_number_lt?: string | null
  student_number_lte?: string | null
  student_number_gt?: string | null
  student_number_gte?: string | null
  student_number_contains?: string | null
  student_number_not_contains?: string | null
  student_number_starts_with?: string | null
  student_number_not_starts_with?: string | null
  student_number_ends_with?: string | null
  student_number_not_ends_with?: string | null
  user?: UserWhereInput | null
  course?: CourseWhereInput | null
  completion_language?: string | null
  completion_language_not?: string | null
  completion_language_in?: string[]
  completion_language_not_in?: string[]
  completion_language_lt?: string | null
  completion_language_lte?: string | null
  completion_language_gt?: string | null
  completion_language_gte?: string | null
  completion_language_contains?: string | null
  completion_language_not_contains?: string | null
  completion_language_starts_with?: string | null
  completion_language_not_starts_with?: string | null
  completion_language_ends_with?: string | null
  completion_language_not_ends_with?: string | null
  AND?: CompletionWhereInput[]
  OR?: CompletionWhereInput[]
  NOT?: CompletionWhereInput[]
}
export type CompletionWhereInputInputObject =
  | Extract<keyof CompletionWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'user_upstream_id_not', alias?: string  } 
  | { name: 'user_upstream_id_in', alias?: string  } 
  | { name: 'user_upstream_id_not_in', alias?: string  } 
  | { name: 'user_upstream_id_lt', alias?: string  } 
  | { name: 'user_upstream_id_lte', alias?: string  } 
  | { name: 'user_upstream_id_gt', alias?: string  } 
  | { name: 'user_upstream_id_gte', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'student_number_not', alias?: string  } 
  | { name: 'student_number_in', alias?: string  } 
  | { name: 'student_number_not_in', alias?: string  } 
  | { name: 'student_number_lt', alias?: string  } 
  | { name: 'student_number_lte', alias?: string  } 
  | { name: 'student_number_gt', alias?: string  } 
  | { name: 'student_number_gte', alias?: string  } 
  | { name: 'student_number_contains', alias?: string  } 
  | { name: 'student_number_not_contains', alias?: string  } 
  | { name: 'student_number_starts_with', alias?: string  } 
  | { name: 'student_number_not_starts_with', alias?: string  } 
  | { name: 'student_number_ends_with', alias?: string  } 
  | { name: 'student_number_not_ends_with', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  | { name: 'completion_language_not', alias?: string  } 
  | { name: 'completion_language_in', alias?: string  } 
  | { name: 'completion_language_not_in', alias?: string  } 
  | { name: 'completion_language_lt', alias?: string  } 
  | { name: 'completion_language_lte', alias?: string  } 
  | { name: 'completion_language_gt', alias?: string  } 
  | { name: 'completion_language_gte', alias?: string  } 
  | { name: 'completion_language_contains', alias?: string  } 
  | { name: 'completion_language_not_contains', alias?: string  } 
  | { name: 'completion_language_starts_with', alias?: string  } 
  | { name: 'completion_language_not_starts_with', alias?: string  } 
  | { name: 'completion_language_ends_with', alias?: string  } 
  | { name: 'completion_language_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  upstream_id?: number | null
  upstream_id_not?: number | null
  upstream_id_in?: number[]
  upstream_id_not_in?: number[]
  upstream_id_lt?: number | null
  upstream_id_lte?: number | null
  upstream_id_gt?: number | null
  upstream_id_gte?: number | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  first_name?: string | null
  first_name_not?: string | null
  first_name_in?: string[]
  first_name_not_in?: string[]
  first_name_lt?: string | null
  first_name_lte?: string | null
  first_name_gt?: string | null
  first_name_gte?: string | null
  first_name_contains?: string | null
  first_name_not_contains?: string | null
  first_name_starts_with?: string | null
  first_name_not_starts_with?: string | null
  first_name_ends_with?: string | null
  first_name_not_ends_with?: string | null
  last_name?: string | null
  last_name_not?: string | null
  last_name_in?: string[]
  last_name_not_in?: string[]
  last_name_lt?: string | null
  last_name_lte?: string | null
  last_name_gt?: string | null
  last_name_gte?: string | null
  last_name_contains?: string | null
  last_name_not_contains?: string | null
  last_name_starts_with?: string | null
  last_name_not_starts_with?: string | null
  last_name_ends_with?: string | null
  last_name_not_ends_with?: string | null
  username?: string | null
  username_not?: string | null
  username_in?: string[]
  username_not_in?: string[]
  username_lt?: string | null
  username_lte?: string | null
  username_gt?: string | null
  username_gte?: string | null
  username_contains?: string | null
  username_not_contains?: string | null
  username_starts_with?: string | null
  username_not_starts_with?: string | null
  username_ends_with?: string | null
  username_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  administrator?: boolean | null
  administrator_not?: boolean | null
  student_number?: string | null
  student_number_not?: string | null
  student_number_in?: string[]
  student_number_not_in?: string[]
  student_number_lt?: string | null
  student_number_lte?: string | null
  student_number_gt?: string | null
  student_number_gte?: string | null
  student_number_contains?: string | null
  student_number_not_contains?: string | null
  student_number_starts_with?: string | null
  student_number_not_starts_with?: string | null
  student_number_ends_with?: string | null
  student_number_not_ends_with?: string | null
  real_student_number?: string | null
  real_student_number_not?: string | null
  real_student_number_in?: string[]
  real_student_number_not_in?: string[]
  real_student_number_lt?: string | null
  real_student_number_lte?: string | null
  real_student_number_gt?: string | null
  real_student_number_gte?: string | null
  real_student_number_contains?: string | null
  real_student_number_not_contains?: string | null
  real_student_number_starts_with?: string | null
  real_student_number_not_starts_with?: string | null
  real_student_number_ends_with?: string | null
  real_student_number_not_ends_with?: string | null
  completions_every?: CompletionWhereInput | null
  completions_some?: CompletionWhereInput | null
  completions_none?: CompletionWhereInput | null
  registered_completions_every?: CompletionRegisteredWhereInput | null
  registered_completions_some?: CompletionRegisteredWhereInput | null
  registered_completions_none?: CompletionRegisteredWhereInput | null
  AND?: UserWhereInput[]
  OR?: UserWhereInput[]
  NOT?: UserWhereInput[]
}
export type UserWhereInputInputObject =
  | Extract<keyof UserWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'upstream_id_not', alias?: string  } 
  | { name: 'upstream_id_in', alias?: string  } 
  | { name: 'upstream_id_not_in', alias?: string  } 
  | { name: 'upstream_id_lt', alias?: string  } 
  | { name: 'upstream_id_lte', alias?: string  } 
  | { name: 'upstream_id_gt', alias?: string  } 
  | { name: 'upstream_id_gte', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'first_name_not', alias?: string  } 
  | { name: 'first_name_in', alias?: string  } 
  | { name: 'first_name_not_in', alias?: string  } 
  | { name: 'first_name_lt', alias?: string  } 
  | { name: 'first_name_lte', alias?: string  } 
  | { name: 'first_name_gt', alias?: string  } 
  | { name: 'first_name_gte', alias?: string  } 
  | { name: 'first_name_contains', alias?: string  } 
  | { name: 'first_name_not_contains', alias?: string  } 
  | { name: 'first_name_starts_with', alias?: string  } 
  | { name: 'first_name_not_starts_with', alias?: string  } 
  | { name: 'first_name_ends_with', alias?: string  } 
  | { name: 'first_name_not_ends_with', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'last_name_not', alias?: string  } 
  | { name: 'last_name_in', alias?: string  } 
  | { name: 'last_name_not_in', alias?: string  } 
  | { name: 'last_name_lt', alias?: string  } 
  | { name: 'last_name_lte', alias?: string  } 
  | { name: 'last_name_gt', alias?: string  } 
  | { name: 'last_name_gte', alias?: string  } 
  | { name: 'last_name_contains', alias?: string  } 
  | { name: 'last_name_not_contains', alias?: string  } 
  | { name: 'last_name_starts_with', alias?: string  } 
  | { name: 'last_name_not_starts_with', alias?: string  } 
  | { name: 'last_name_ends_with', alias?: string  } 
  | { name: 'last_name_not_ends_with', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'username_not', alias?: string  } 
  | { name: 'username_in', alias?: string  } 
  | { name: 'username_not_in', alias?: string  } 
  | { name: 'username_lt', alias?: string  } 
  | { name: 'username_lte', alias?: string  } 
  | { name: 'username_gt', alias?: string  } 
  | { name: 'username_gte', alias?: string  } 
  | { name: 'username_contains', alias?: string  } 
  | { name: 'username_not_contains', alias?: string  } 
  | { name: 'username_starts_with', alias?: string  } 
  | { name: 'username_not_starts_with', alias?: string  } 
  | { name: 'username_ends_with', alias?: string  } 
  | { name: 'username_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'administrator_not', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'student_number_not', alias?: string  } 
  | { name: 'student_number_in', alias?: string  } 
  | { name: 'student_number_not_in', alias?: string  } 
  | { name: 'student_number_lt', alias?: string  } 
  | { name: 'student_number_lte', alias?: string  } 
  | { name: 'student_number_gt', alias?: string  } 
  | { name: 'student_number_gte', alias?: string  } 
  | { name: 'student_number_contains', alias?: string  } 
  | { name: 'student_number_not_contains', alias?: string  } 
  | { name: 'student_number_starts_with', alias?: string  } 
  | { name: 'student_number_not_starts_with', alias?: string  } 
  | { name: 'student_number_ends_with', alias?: string  } 
  | { name: 'student_number_not_ends_with', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'real_student_number_not', alias?: string  } 
  | { name: 'real_student_number_in', alias?: string  } 
  | { name: 'real_student_number_not_in', alias?: string  } 
  | { name: 'real_student_number_lt', alias?: string  } 
  | { name: 'real_student_number_lte', alias?: string  } 
  | { name: 'real_student_number_gt', alias?: string  } 
  | { name: 'real_student_number_gte', alias?: string  } 
  | { name: 'real_student_number_contains', alias?: string  } 
  | { name: 'real_student_number_not_contains', alias?: string  } 
  | { name: 'real_student_number_starts_with', alias?: string  } 
  | { name: 'real_student_number_not_starts_with', alias?: string  } 
  | { name: 'real_student_number_ends_with', alias?: string  } 
  | { name: 'real_student_number_not_ends_with', alias?: string  } 
  | { name: 'completions_every', alias?: string  } 
  | { name: 'completions_some', alias?: string  } 
  | { name: 'completions_none', alias?: string  } 
  | { name: 'registered_completions_every', alias?: string  } 
  | { name: 'registered_completions_some', alias?: string  } 
  | { name: 'registered_completions_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CompletionRegisteredWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  user?: UserWhereInput | null
  course?: CourseWhereInput | null
  real_student_number?: string | null
  real_student_number_not?: string | null
  real_student_number_in?: string[]
  real_student_number_not_in?: string[]
  real_student_number_lt?: string | null
  real_student_number_lte?: string | null
  real_student_number_gt?: string | null
  real_student_number_gte?: string | null
  real_student_number_contains?: string | null
  real_student_number_not_contains?: string | null
  real_student_number_starts_with?: string | null
  real_student_number_not_starts_with?: string | null
  real_student_number_ends_with?: string | null
  real_student_number_not_ends_with?: string | null
  organisation?: string | null
  organisation_not?: string | null
  organisation_in?: string[]
  organisation_not_in?: string[]
  organisation_lt?: string | null
  organisation_lte?: string | null
  organisation_gt?: string | null
  organisation_gte?: string | null
  organisation_contains?: string | null
  organisation_not_contains?: string | null
  organisation_starts_with?: string | null
  organisation_not_starts_with?: string | null
  organisation_ends_with?: string | null
  organisation_not_ends_with?: string | null
  completion?: CompletionWhereInput | null
  AND?: CompletionRegisteredWhereInput[]
  OR?: CompletionRegisteredWhereInput[]
  NOT?: CompletionRegisteredWhereInput[]
}
export type CompletionRegisteredWhereInputInputObject =
  | Extract<keyof CompletionRegisteredWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'real_student_number_not', alias?: string  } 
  | { name: 'real_student_number_in', alias?: string  } 
  | { name: 'real_student_number_not_in', alias?: string  } 
  | { name: 'real_student_number_lt', alias?: string  } 
  | { name: 'real_student_number_lte', alias?: string  } 
  | { name: 'real_student_number_gt', alias?: string  } 
  | { name: 'real_student_number_gte', alias?: string  } 
  | { name: 'real_student_number_contains', alias?: string  } 
  | { name: 'real_student_number_not_contains', alias?: string  } 
  | { name: 'real_student_number_starts_with', alias?: string  } 
  | { name: 'real_student_number_not_starts_with', alias?: string  } 
  | { name: 'real_student_number_ends_with', alias?: string  } 
  | { name: 'real_student_number_not_ends_with', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'organisation_not', alias?: string  } 
  | { name: 'organisation_in', alias?: string  } 
  | { name: 'organisation_not_in', alias?: string  } 
  | { name: 'organisation_lt', alias?: string  } 
  | { name: 'organisation_lte', alias?: string  } 
  | { name: 'organisation_gt', alias?: string  } 
  | { name: 'organisation_gte', alias?: string  } 
  | { name: 'organisation_contains', alias?: string  } 
  | { name: 'organisation_not_contains', alias?: string  } 
  | { name: 'organisation_starts_with', alias?: string  } 
  | { name: 'organisation_not_starts_with', alias?: string  } 
  | { name: 'organisation_ends_with', alias?: string  } 
  | { name: 'organisation_not_ends_with', alias?: string  } 
  | { name: 'completion', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CourseWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  slug?: string | null
  slug_not?: string | null
  slug_in?: string[]
  slug_not_in?: string[]
  slug_lt?: string | null
  slug_lte?: string | null
  slug_gt?: string | null
  slug_gte?: string | null
  slug_contains?: string | null
  slug_not_contains?: string | null
  slug_starts_with?: string | null
  slug_not_starts_with?: string | null
  slug_ends_with?: string | null
  slug_not_ends_with?: string | null
  open_university_courses_every?: OpenUniversityCourseWhereInput | null
  open_university_courses_some?: OpenUniversityCourseWhereInput | null
  open_university_courses_none?: OpenUniversityCourseWhereInput | null
  AND?: CourseWhereInput[]
  OR?: CourseWhereInput[]
  NOT?: CourseWhereInput[]
}
export type CourseWhereInputInputObject =
  | Extract<keyof CourseWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'slug_not', alias?: string  } 
  | { name: 'slug_in', alias?: string  } 
  | { name: 'slug_not_in', alias?: string  } 
  | { name: 'slug_lt', alias?: string  } 
  | { name: 'slug_lte', alias?: string  } 
  | { name: 'slug_gt', alias?: string  } 
  | { name: 'slug_gte', alias?: string  } 
  | { name: 'slug_contains', alias?: string  } 
  | { name: 'slug_not_contains', alias?: string  } 
  | { name: 'slug_starts_with', alias?: string  } 
  | { name: 'slug_not_starts_with', alias?: string  } 
  | { name: 'slug_ends_with', alias?: string  } 
  | { name: 'slug_not_ends_with', alias?: string  } 
  | { name: 'open_university_courses_every', alias?: string  } 
  | { name: 'open_university_courses_some', alias?: string  } 
  | { name: 'open_university_courses_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OpenUniversityCourseWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  course_code?: string | null
  course_code_not?: string | null
  course_code_in?: string[]
  course_code_not_in?: string[]
  course_code_lt?: string | null
  course_code_lte?: string | null
  course_code_gt?: string | null
  course_code_gte?: string | null
  course_code_contains?: string | null
  course_code_not_contains?: string | null
  course_code_starts_with?: string | null
  course_code_not_starts_with?: string | null
  course_code_ends_with?: string | null
  course_code_not_ends_with?: string | null
  course?: CourseWhereInput | null
  AND?: OpenUniversityCourseWhereInput[]
  OR?: OpenUniversityCourseWhereInput[]
  NOT?: OpenUniversityCourseWhereInput[]
}
export type OpenUniversityCourseWhereInputInputObject =
  | Extract<keyof OpenUniversityCourseWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  | { name: 'course_code_not', alias?: string  } 
  | { name: 'course_code_in', alias?: string  } 
  | { name: 'course_code_not_in', alias?: string  } 
  | { name: 'course_code_lt', alias?: string  } 
  | { name: 'course_code_lte', alias?: string  } 
  | { name: 'course_code_gt', alias?: string  } 
  | { name: 'course_code_gte', alias?: string  } 
  | { name: 'course_code_contains', alias?: string  } 
  | { name: 'course_code_not_contains', alias?: string  } 
  | { name: 'course_code_starts_with', alias?: string  } 
  | { name: 'course_code_not_starts_with', alias?: string  } 
  | { name: 'course_code_ends_with', alias?: string  } 
  | { name: 'course_code_not_ends_with', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CourseWhereUniqueInput {
  id?: undefined | null
  slug?: string | null
}
export type CourseWhereUniqueInputInputObject =
  | Extract<keyof CourseWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  
export interface OpenUniversityCourseWhereUniqueInput {
  id?: undefined | null
  course_code?: string | null
}
export type OpenUniversityCourseWhereUniqueInputInputObject =
  | Extract<keyof OpenUniversityCourseWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  
export interface CompletionWhereUniqueInput {
  id?: undefined | null
}
export type CompletionWhereUniqueInputInputObject =
  | Extract<keyof CompletionWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface CompletionRegisteredWhereUniqueInput {
  id?: undefined | null
}
export type CompletionRegisteredWhereUniqueInputInputObject =
  | Extract<keyof CompletionRegisteredWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface UserCreateInput {
  id?: undefined | null
  upstream_id?: number
  created_at?: string
  updated_at?: string
  first_name?: string | null
  last_name?: string | null
  username?: string
  email?: string
  administrator?: boolean
  student_number?: string | null
  real_student_number?: string | null
  completions?: CompletionCreateManyWithoutUserInput | null
  registered_completions?: CompletionRegisteredCreateManyWithoutUserInput | null
}
export type UserCreateInputInputObject =
  | Extract<keyof UserCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'completions', alias?: string  } 
  | { name: 'registered_completions', alias?: string  } 
  
export interface CompletionCreateManyWithoutUserInput {
  create?: CompletionCreateWithoutUserInput[]
  connect?: CompletionWhereUniqueInput[]
}
export type CompletionCreateManyWithoutUserInputInputObject =
  | Extract<keyof CompletionCreateManyWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CompletionCreateWithoutUserInput {
  id?: undefined | null
  created_at?: string
  updated_at?: string
  user_upstream_id?: number | null
  email?: string
  student_number?: string | null
  course?: CourseCreateOneInput
  completion_language?: string | null
}
export type CompletionCreateWithoutUserInputInputObject =
  | Extract<keyof CompletionCreateWithoutUserInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  
export interface CourseCreateOneInput {
  create?: CourseCreateInput | null
  connect?: CourseWhereUniqueInput | null
}
export type CourseCreateOneInputInputObject =
  | Extract<keyof CourseCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CourseCreateInput {
  id?: undefined | null
  created_at?: string
  updated_at?: string
  name?: string
  slug?: string
  open_university_courses?: OpenUniversityCourseCreateManyWithoutCourseInput | null
}
export type CourseCreateInputInputObject =
  | Extract<keyof CourseCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'open_university_courses', alias?: string  } 
  
export interface OpenUniversityCourseCreateManyWithoutCourseInput {
  create?: OpenUniversityCourseCreateWithoutCourseInput[]
  connect?: OpenUniversityCourseWhereUniqueInput[]
}
export type OpenUniversityCourseCreateManyWithoutCourseInputInputObject =
  | Extract<keyof OpenUniversityCourseCreateManyWithoutCourseInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OpenUniversityCourseCreateWithoutCourseInput {
  id?: undefined | null
  created_at?: string
  updated_at?: string
  course_code?: string
}
export type OpenUniversityCourseCreateWithoutCourseInputInputObject =
  | Extract<keyof OpenUniversityCourseCreateWithoutCourseInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  
export interface CompletionRegisteredCreateManyWithoutUserInput {
  create?: CompletionRegisteredCreateWithoutUserInput[]
  connect?: CompletionRegisteredWhereUniqueInput[]
}
export type CompletionRegisteredCreateManyWithoutUserInputInputObject =
  | Extract<keyof CompletionRegisteredCreateManyWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CompletionRegisteredCreateWithoutUserInput {
  id?: undefined | null
  created_at?: string
  updated_at?: string
  course?: CourseCreateOneInput
  real_student_number?: string
  organisation?: string
  completion?: CompletionCreateOneInput
}
export type CompletionRegisteredCreateWithoutUserInputInputObject =
  | Extract<keyof CompletionRegisteredCreateWithoutUserInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'completion', alias?: string  } 
  
export interface CompletionCreateOneInput {
  create?: CompletionCreateInput | null
  connect?: CompletionWhereUniqueInput | null
}
export type CompletionCreateOneInputInputObject =
  | Extract<keyof CompletionCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CompletionCreateInput {
  id?: undefined | null
  created_at?: string
  updated_at?: string
  user_upstream_id?: number | null
  email?: string
  student_number?: string | null
  user?: UserCreateOneWithoutCompletionsInput
  course?: CourseCreateOneInput
  completion_language?: string | null
}
export type CompletionCreateInputInputObject =
  | Extract<keyof CompletionCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  
export interface UserCreateOneWithoutCompletionsInput {
  create?: UserCreateWithoutCompletionsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutCompletionsInputInputObject =
  | Extract<keyof UserCreateOneWithoutCompletionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutCompletionsInput {
  id?: undefined | null
  upstream_id?: number
  created_at?: string
  updated_at?: string
  first_name?: string | null
  last_name?: string | null
  username?: string
  email?: string
  administrator?: boolean
  student_number?: string | null
  real_student_number?: string | null
  registered_completions?: CompletionRegisteredCreateManyWithoutUserInput | null
}
export type UserCreateWithoutCompletionsInputInputObject =
  | Extract<keyof UserCreateWithoutCompletionsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'registered_completions', alias?: string  } 
  
export interface UserUpdateInput {
  upstream_id?: number | null
  created_at?: string | null
  updated_at?: string | null
  first_name?: string | null
  last_name?: string | null
  username?: string | null
  email?: string | null
  administrator?: boolean | null
  student_number?: string | null
  real_student_number?: string | null
  completions?: CompletionUpdateManyWithoutUserInput | null
  registered_completions?: CompletionRegisteredUpdateManyWithoutUserInput | null
}
export type UserUpdateInputInputObject =
  | Extract<keyof UserUpdateInput, string>
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'completions', alias?: string  } 
  | { name: 'registered_completions', alias?: string  } 
  
export interface CompletionUpdateManyWithoutUserInput {
  create?: CompletionCreateWithoutUserInput[]
  delete?: CompletionWhereUniqueInput[]
  connect?: CompletionWhereUniqueInput[]
  set?: CompletionWhereUniqueInput[]
  disconnect?: CompletionWhereUniqueInput[]
  update?: CompletionUpdateWithWhereUniqueWithoutUserInput[]
  upsert?: CompletionUpsertWithWhereUniqueWithoutUserInput[]
  deleteMany?: CompletionScalarWhereInput[]
  updateMany?: CompletionUpdateManyWithWhereNestedInput[]
}
export type CompletionUpdateManyWithoutUserInputInputObject =
  | Extract<keyof CompletionUpdateManyWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface CompletionUpdateWithWhereUniqueWithoutUserInput {
  where?: CompletionWhereUniqueInput
  data?: CompletionUpdateWithoutUserDataInput
}
export type CompletionUpdateWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof CompletionUpdateWithWhereUniqueWithoutUserInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface CompletionUpdateWithoutUserDataInput {
  created_at?: string | null
  updated_at?: string | null
  user_upstream_id?: number | null
  email?: string | null
  student_number?: string | null
  course?: CourseUpdateOneRequiredInput | null
  completion_language?: string | null
}
export type CompletionUpdateWithoutUserDataInputInputObject =
  | Extract<keyof CompletionUpdateWithoutUserDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  
export interface CourseUpdateOneRequiredInput {
  create?: CourseCreateInput | null
  update?: CourseUpdateDataInput | null
  upsert?: CourseUpsertNestedInput | null
  connect?: CourseWhereUniqueInput | null
}
export type CourseUpdateOneRequiredInputInputObject =
  | Extract<keyof CourseUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CourseUpdateDataInput {
  created_at?: string | null
  updated_at?: string | null
  name?: string | null
  slug?: string | null
  open_university_courses?: OpenUniversityCourseUpdateManyWithoutCourseInput | null
}
export type CourseUpdateDataInputInputObject =
  | Extract<keyof CourseUpdateDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'open_university_courses', alias?: string  } 
  
export interface OpenUniversityCourseUpdateManyWithoutCourseInput {
  create?: OpenUniversityCourseCreateWithoutCourseInput[]
  delete?: OpenUniversityCourseWhereUniqueInput[]
  connect?: OpenUniversityCourseWhereUniqueInput[]
  set?: OpenUniversityCourseWhereUniqueInput[]
  disconnect?: OpenUniversityCourseWhereUniqueInput[]
  update?: OpenUniversityCourseUpdateWithWhereUniqueWithoutCourseInput[]
  upsert?: OpenUniversityCourseUpsertWithWhereUniqueWithoutCourseInput[]
  deleteMany?: OpenUniversityCourseScalarWhereInput[]
  updateMany?: OpenUniversityCourseUpdateManyWithWhereNestedInput[]
}
export type OpenUniversityCourseUpdateManyWithoutCourseInputInputObject =
  | Extract<keyof OpenUniversityCourseUpdateManyWithoutCourseInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OpenUniversityCourseUpdateWithWhereUniqueWithoutCourseInput {
  where?: OpenUniversityCourseWhereUniqueInput
  data?: OpenUniversityCourseUpdateWithoutCourseDataInput
}
export type OpenUniversityCourseUpdateWithWhereUniqueWithoutCourseInputInputObject =
  | Extract<keyof OpenUniversityCourseUpdateWithWhereUniqueWithoutCourseInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OpenUniversityCourseUpdateWithoutCourseDataInput {
  created_at?: string | null
  updated_at?: string | null
  course_code?: string | null
}
export type OpenUniversityCourseUpdateWithoutCourseDataInputInputObject =
  | Extract<keyof OpenUniversityCourseUpdateWithoutCourseDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  
export interface OpenUniversityCourseUpsertWithWhereUniqueWithoutCourseInput {
  where?: OpenUniversityCourseWhereUniqueInput
  update?: OpenUniversityCourseUpdateWithoutCourseDataInput
  create?: OpenUniversityCourseCreateWithoutCourseInput
}
export type OpenUniversityCourseUpsertWithWhereUniqueWithoutCourseInputInputObject =
  | Extract<keyof OpenUniversityCourseUpsertWithWhereUniqueWithoutCourseInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OpenUniversityCourseScalarWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  course_code?: string | null
  course_code_not?: string | null
  course_code_in?: string[]
  course_code_not_in?: string[]
  course_code_lt?: string | null
  course_code_lte?: string | null
  course_code_gt?: string | null
  course_code_gte?: string | null
  course_code_contains?: string | null
  course_code_not_contains?: string | null
  course_code_starts_with?: string | null
  course_code_not_starts_with?: string | null
  course_code_ends_with?: string | null
  course_code_not_ends_with?: string | null
  AND?: OpenUniversityCourseScalarWhereInput[]
  OR?: OpenUniversityCourseScalarWhereInput[]
  NOT?: OpenUniversityCourseScalarWhereInput[]
}
export type OpenUniversityCourseScalarWhereInputInputObject =
  | Extract<keyof OpenUniversityCourseScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  | { name: 'course_code_not', alias?: string  } 
  | { name: 'course_code_in', alias?: string  } 
  | { name: 'course_code_not_in', alias?: string  } 
  | { name: 'course_code_lt', alias?: string  } 
  | { name: 'course_code_lte', alias?: string  } 
  | { name: 'course_code_gt', alias?: string  } 
  | { name: 'course_code_gte', alias?: string  } 
  | { name: 'course_code_contains', alias?: string  } 
  | { name: 'course_code_not_contains', alias?: string  } 
  | { name: 'course_code_starts_with', alias?: string  } 
  | { name: 'course_code_not_starts_with', alias?: string  } 
  | { name: 'course_code_ends_with', alias?: string  } 
  | { name: 'course_code_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OpenUniversityCourseUpdateManyWithWhereNestedInput {
  where?: OpenUniversityCourseScalarWhereInput
  data?: OpenUniversityCourseUpdateManyDataInput
}
export type OpenUniversityCourseUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof OpenUniversityCourseUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OpenUniversityCourseUpdateManyDataInput {
  created_at?: string | null
  updated_at?: string | null
  course_code?: string | null
}
export type OpenUniversityCourseUpdateManyDataInputInputObject =
  | Extract<keyof OpenUniversityCourseUpdateManyDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  
export interface CourseUpsertNestedInput {
  update?: CourseUpdateDataInput
  create?: CourseCreateInput
}
export type CourseUpsertNestedInputInputObject =
  | Extract<keyof CourseUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CompletionUpsertWithWhereUniqueWithoutUserInput {
  where?: CompletionWhereUniqueInput
  update?: CompletionUpdateWithoutUserDataInput
  create?: CompletionCreateWithoutUserInput
}
export type CompletionUpsertWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof CompletionUpsertWithWhereUniqueWithoutUserInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CompletionScalarWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  user_upstream_id?: number | null
  user_upstream_id_not?: number | null
  user_upstream_id_in?: number[]
  user_upstream_id_not_in?: number[]
  user_upstream_id_lt?: number | null
  user_upstream_id_lte?: number | null
  user_upstream_id_gt?: number | null
  user_upstream_id_gte?: number | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  student_number?: string | null
  student_number_not?: string | null
  student_number_in?: string[]
  student_number_not_in?: string[]
  student_number_lt?: string | null
  student_number_lte?: string | null
  student_number_gt?: string | null
  student_number_gte?: string | null
  student_number_contains?: string | null
  student_number_not_contains?: string | null
  student_number_starts_with?: string | null
  student_number_not_starts_with?: string | null
  student_number_ends_with?: string | null
  student_number_not_ends_with?: string | null
  completion_language?: string | null
  completion_language_not?: string | null
  completion_language_in?: string[]
  completion_language_not_in?: string[]
  completion_language_lt?: string | null
  completion_language_lte?: string | null
  completion_language_gt?: string | null
  completion_language_gte?: string | null
  completion_language_contains?: string | null
  completion_language_not_contains?: string | null
  completion_language_starts_with?: string | null
  completion_language_not_starts_with?: string | null
  completion_language_ends_with?: string | null
  completion_language_not_ends_with?: string | null
  AND?: CompletionScalarWhereInput[]
  OR?: CompletionScalarWhereInput[]
  NOT?: CompletionScalarWhereInput[]
}
export type CompletionScalarWhereInputInputObject =
  | Extract<keyof CompletionScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'user_upstream_id_not', alias?: string  } 
  | { name: 'user_upstream_id_in', alias?: string  } 
  | { name: 'user_upstream_id_not_in', alias?: string  } 
  | { name: 'user_upstream_id_lt', alias?: string  } 
  | { name: 'user_upstream_id_lte', alias?: string  } 
  | { name: 'user_upstream_id_gt', alias?: string  } 
  | { name: 'user_upstream_id_gte', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'student_number_not', alias?: string  } 
  | { name: 'student_number_in', alias?: string  } 
  | { name: 'student_number_not_in', alias?: string  } 
  | { name: 'student_number_lt', alias?: string  } 
  | { name: 'student_number_lte', alias?: string  } 
  | { name: 'student_number_gt', alias?: string  } 
  | { name: 'student_number_gte', alias?: string  } 
  | { name: 'student_number_contains', alias?: string  } 
  | { name: 'student_number_not_contains', alias?: string  } 
  | { name: 'student_number_starts_with', alias?: string  } 
  | { name: 'student_number_not_starts_with', alias?: string  } 
  | { name: 'student_number_ends_with', alias?: string  } 
  | { name: 'student_number_not_ends_with', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  | { name: 'completion_language_not', alias?: string  } 
  | { name: 'completion_language_in', alias?: string  } 
  | { name: 'completion_language_not_in', alias?: string  } 
  | { name: 'completion_language_lt', alias?: string  } 
  | { name: 'completion_language_lte', alias?: string  } 
  | { name: 'completion_language_gt', alias?: string  } 
  | { name: 'completion_language_gte', alias?: string  } 
  | { name: 'completion_language_contains', alias?: string  } 
  | { name: 'completion_language_not_contains', alias?: string  } 
  | { name: 'completion_language_starts_with', alias?: string  } 
  | { name: 'completion_language_not_starts_with', alias?: string  } 
  | { name: 'completion_language_ends_with', alias?: string  } 
  | { name: 'completion_language_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CompletionUpdateManyWithWhereNestedInput {
  where?: CompletionScalarWhereInput
  data?: CompletionUpdateManyDataInput
}
export type CompletionUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof CompletionUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface CompletionUpdateManyDataInput {
  created_at?: string | null
  updated_at?: string | null
  user_upstream_id?: number | null
  email?: string | null
  student_number?: string | null
  completion_language?: string | null
}
export type CompletionUpdateManyDataInputInputObject =
  | Extract<keyof CompletionUpdateManyDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  
export interface CompletionRegisteredUpdateManyWithoutUserInput {
  create?: CompletionRegisteredCreateWithoutUserInput[]
  delete?: CompletionRegisteredWhereUniqueInput[]
  connect?: CompletionRegisteredWhereUniqueInput[]
  set?: CompletionRegisteredWhereUniqueInput[]
  disconnect?: CompletionRegisteredWhereUniqueInput[]
  update?: CompletionRegisteredUpdateWithWhereUniqueWithoutUserInput[]
  upsert?: CompletionRegisteredUpsertWithWhereUniqueWithoutUserInput[]
  deleteMany?: CompletionRegisteredScalarWhereInput[]
  updateMany?: CompletionRegisteredUpdateManyWithWhereNestedInput[]
}
export type CompletionRegisteredUpdateManyWithoutUserInputInputObject =
  | Extract<keyof CompletionRegisteredUpdateManyWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface CompletionRegisteredUpdateWithWhereUniqueWithoutUserInput {
  where?: CompletionRegisteredWhereUniqueInput
  data?: CompletionRegisteredUpdateWithoutUserDataInput
}
export type CompletionRegisteredUpdateWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof CompletionRegisteredUpdateWithWhereUniqueWithoutUserInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface CompletionRegisteredUpdateWithoutUserDataInput {
  created_at?: string | null
  updated_at?: string | null
  course?: CourseUpdateOneRequiredInput | null
  real_student_number?: string | null
  organisation?: string | null
  completion?: CompletionUpdateOneRequiredInput | null
}
export type CompletionRegisteredUpdateWithoutUserDataInputInputObject =
  | Extract<keyof CompletionRegisteredUpdateWithoutUserDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'completion', alias?: string  } 
  
export interface CompletionUpdateOneRequiredInput {
  create?: CompletionCreateInput | null
  update?: CompletionUpdateDataInput | null
  upsert?: CompletionUpsertNestedInput | null
  connect?: CompletionWhereUniqueInput | null
}
export type CompletionUpdateOneRequiredInputInputObject =
  | Extract<keyof CompletionUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CompletionUpdateDataInput {
  created_at?: string | null
  updated_at?: string | null
  user_upstream_id?: number | null
  email?: string | null
  student_number?: string | null
  user?: UserUpdateOneRequiredWithoutCompletionsInput | null
  course?: CourseUpdateOneRequiredInput | null
  completion_language?: string | null
}
export type CompletionUpdateDataInputInputObject =
  | Extract<keyof CompletionUpdateDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutCompletionsInput {
  create?: UserCreateWithoutCompletionsInput | null
  update?: UserUpdateWithoutCompletionsDataInput | null
  upsert?: UserUpsertWithoutCompletionsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutCompletionsInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutCompletionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutCompletionsDataInput {
  upstream_id?: number | null
  created_at?: string | null
  updated_at?: string | null
  first_name?: string | null
  last_name?: string | null
  username?: string | null
  email?: string | null
  administrator?: boolean | null
  student_number?: string | null
  real_student_number?: string | null
  registered_completions?: CompletionRegisteredUpdateManyWithoutUserInput | null
}
export type UserUpdateWithoutCompletionsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutCompletionsDataInput, string>
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'registered_completions', alias?: string  } 
  
export interface UserUpsertWithoutCompletionsInput {
  update?: UserUpdateWithoutCompletionsDataInput
  create?: UserCreateWithoutCompletionsInput
}
export type UserUpsertWithoutCompletionsInputInputObject =
  | Extract<keyof UserUpsertWithoutCompletionsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CompletionUpsertNestedInput {
  update?: CompletionUpdateDataInput
  create?: CompletionCreateInput
}
export type CompletionUpsertNestedInputInputObject =
  | Extract<keyof CompletionUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CompletionRegisteredUpsertWithWhereUniqueWithoutUserInput {
  where?: CompletionRegisteredWhereUniqueInput
  update?: CompletionRegisteredUpdateWithoutUserDataInput
  create?: CompletionRegisteredCreateWithoutUserInput
}
export type CompletionRegisteredUpsertWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof CompletionRegisteredUpsertWithWhereUniqueWithoutUserInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CompletionRegisteredScalarWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  real_student_number?: string | null
  real_student_number_not?: string | null
  real_student_number_in?: string[]
  real_student_number_not_in?: string[]
  real_student_number_lt?: string | null
  real_student_number_lte?: string | null
  real_student_number_gt?: string | null
  real_student_number_gte?: string | null
  real_student_number_contains?: string | null
  real_student_number_not_contains?: string | null
  real_student_number_starts_with?: string | null
  real_student_number_not_starts_with?: string | null
  real_student_number_ends_with?: string | null
  real_student_number_not_ends_with?: string | null
  organisation?: string | null
  organisation_not?: string | null
  organisation_in?: string[]
  organisation_not_in?: string[]
  organisation_lt?: string | null
  organisation_lte?: string | null
  organisation_gt?: string | null
  organisation_gte?: string | null
  organisation_contains?: string | null
  organisation_not_contains?: string | null
  organisation_starts_with?: string | null
  organisation_not_starts_with?: string | null
  organisation_ends_with?: string | null
  organisation_not_ends_with?: string | null
  AND?: CompletionRegisteredScalarWhereInput[]
  OR?: CompletionRegisteredScalarWhereInput[]
  NOT?: CompletionRegisteredScalarWhereInput[]
}
export type CompletionRegisteredScalarWhereInputInputObject =
  | Extract<keyof CompletionRegisteredScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'real_student_number_not', alias?: string  } 
  | { name: 'real_student_number_in', alias?: string  } 
  | { name: 'real_student_number_not_in', alias?: string  } 
  | { name: 'real_student_number_lt', alias?: string  } 
  | { name: 'real_student_number_lte', alias?: string  } 
  | { name: 'real_student_number_gt', alias?: string  } 
  | { name: 'real_student_number_gte', alias?: string  } 
  | { name: 'real_student_number_contains', alias?: string  } 
  | { name: 'real_student_number_not_contains', alias?: string  } 
  | { name: 'real_student_number_starts_with', alias?: string  } 
  | { name: 'real_student_number_not_starts_with', alias?: string  } 
  | { name: 'real_student_number_ends_with', alias?: string  } 
  | { name: 'real_student_number_not_ends_with', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'organisation_not', alias?: string  } 
  | { name: 'organisation_in', alias?: string  } 
  | { name: 'organisation_not_in', alias?: string  } 
  | { name: 'organisation_lt', alias?: string  } 
  | { name: 'organisation_lte', alias?: string  } 
  | { name: 'organisation_gt', alias?: string  } 
  | { name: 'organisation_gte', alias?: string  } 
  | { name: 'organisation_contains', alias?: string  } 
  | { name: 'organisation_not_contains', alias?: string  } 
  | { name: 'organisation_starts_with', alias?: string  } 
  | { name: 'organisation_not_starts_with', alias?: string  } 
  | { name: 'organisation_ends_with', alias?: string  } 
  | { name: 'organisation_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CompletionRegisteredUpdateManyWithWhereNestedInput {
  where?: CompletionRegisteredScalarWhereInput
  data?: CompletionRegisteredUpdateManyDataInput
}
export type CompletionRegisteredUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof CompletionRegisteredUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface CompletionRegisteredUpdateManyDataInput {
  created_at?: string | null
  updated_at?: string | null
  real_student_number?: string | null
  organisation?: string | null
}
export type CompletionRegisteredUpdateManyDataInputInputObject =
  | Extract<keyof CompletionRegisteredUpdateManyDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  
export interface UserUpdateManyMutationInput {
  upstream_id?: number | null
  created_at?: string | null
  updated_at?: string | null
  first_name?: string | null
  last_name?: string | null
  username?: string | null
  email?: string | null
  administrator?: boolean | null
  student_number?: string | null
  real_student_number?: string | null
}
export type UserUpdateManyMutationInputInputObject =
  | Extract<keyof UserUpdateManyMutationInput, string>
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  
export interface CourseUpdateInput {
  created_at?: string | null
  updated_at?: string | null
  name?: string | null
  slug?: string | null
  open_university_courses?: OpenUniversityCourseUpdateManyWithoutCourseInput | null
}
export type CourseUpdateInputInputObject =
  | Extract<keyof CourseUpdateInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'open_university_courses', alias?: string  } 
  
export interface CourseUpdateManyMutationInput {
  created_at?: string | null
  updated_at?: string | null
  name?: string | null
  slug?: string | null
}
export type CourseUpdateManyMutationInputInputObject =
  | Extract<keyof CourseUpdateManyMutationInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  
export interface OpenUniversityCourseCreateInput {
  id?: undefined | null
  created_at?: string
  updated_at?: string
  course_code?: string
  course?: CourseCreateOneWithoutOpen_university_coursesInput
}
export type OpenUniversityCourseCreateInputInputObject =
  | Extract<keyof OpenUniversityCourseCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  | { name: 'course', alias?: string  } 
  
export interface CourseCreateOneWithoutOpen_university_coursesInput {
  create?: CourseCreateWithoutOpen_university_coursesInput | null
  connect?: CourseWhereUniqueInput | null
}
export type CourseCreateOneWithoutOpen_university_coursesInputInputObject =
  | Extract<keyof CourseCreateOneWithoutOpen_university_coursesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CourseCreateWithoutOpen_university_coursesInput {
  id?: undefined | null
  created_at?: string
  updated_at?: string
  name?: string
  slug?: string
}
export type CourseCreateWithoutOpen_university_coursesInputInputObject =
  | Extract<keyof CourseCreateWithoutOpen_university_coursesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  
export interface OpenUniversityCourseUpdateInput {
  created_at?: string | null
  updated_at?: string | null
  course_code?: string | null
  course?: CourseUpdateOneRequiredWithoutOpen_university_coursesInput | null
}
export type OpenUniversityCourseUpdateInputInputObject =
  | Extract<keyof OpenUniversityCourseUpdateInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  | { name: 'course', alias?: string  } 
  
export interface CourseUpdateOneRequiredWithoutOpen_university_coursesInput {
  create?: CourseCreateWithoutOpen_university_coursesInput | null
  update?: CourseUpdateWithoutOpen_university_coursesDataInput | null
  upsert?: CourseUpsertWithoutOpen_university_coursesInput | null
  connect?: CourseWhereUniqueInput | null
}
export type CourseUpdateOneRequiredWithoutOpen_university_coursesInputInputObject =
  | Extract<keyof CourseUpdateOneRequiredWithoutOpen_university_coursesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CourseUpdateWithoutOpen_university_coursesDataInput {
  created_at?: string | null
  updated_at?: string | null
  name?: string | null
  slug?: string | null
}
export type CourseUpdateWithoutOpen_university_coursesDataInputInputObject =
  | Extract<keyof CourseUpdateWithoutOpen_university_coursesDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  
export interface CourseUpsertWithoutOpen_university_coursesInput {
  update?: CourseUpdateWithoutOpen_university_coursesDataInput
  create?: CourseCreateWithoutOpen_university_coursesInput
}
export type CourseUpsertWithoutOpen_university_coursesInputInputObject =
  | Extract<keyof CourseUpsertWithoutOpen_university_coursesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OpenUniversityCourseUpdateManyMutationInput {
  created_at?: string | null
  updated_at?: string | null
  course_code?: string | null
}
export type OpenUniversityCourseUpdateManyMutationInputInputObject =
  | Extract<keyof OpenUniversityCourseUpdateManyMutationInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  
export interface CompletionUpdateInput {
  created_at?: string | null
  updated_at?: string | null
  user_upstream_id?: number | null
  email?: string | null
  student_number?: string | null
  user?: UserUpdateOneRequiredWithoutCompletionsInput | null
  course?: CourseUpdateOneRequiredInput | null
  completion_language?: string | null
}
export type CompletionUpdateInputInputObject =
  | Extract<keyof CompletionUpdateInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  
export interface CompletionUpdateManyMutationInput {
  created_at?: string | null
  updated_at?: string | null
  user_upstream_id?: number | null
  email?: string | null
  student_number?: string | null
  completion_language?: string | null
}
export type CompletionUpdateManyMutationInputInputObject =
  | Extract<keyof CompletionUpdateManyMutationInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  
export interface CompletionRegisteredCreateInput {
  id?: undefined | null
  created_at?: string
  updated_at?: string
  user?: UserCreateOneWithoutRegistered_completionsInput
  course?: CourseCreateOneInput
  real_student_number?: string
  organisation?: string
  completion?: CompletionCreateOneInput
}
export type CompletionRegisteredCreateInputInputObject =
  | Extract<keyof CompletionRegisteredCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'completion', alias?: string  } 
  
export interface UserCreateOneWithoutRegistered_completionsInput {
  create?: UserCreateWithoutRegistered_completionsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutRegistered_completionsInputInputObject =
  | Extract<keyof UserCreateOneWithoutRegistered_completionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutRegistered_completionsInput {
  id?: undefined | null
  upstream_id?: number
  created_at?: string
  updated_at?: string
  first_name?: string | null
  last_name?: string | null
  username?: string
  email?: string
  administrator?: boolean
  student_number?: string | null
  real_student_number?: string | null
  completions?: CompletionCreateManyWithoutUserInput | null
}
export type UserCreateWithoutRegistered_completionsInputInputObject =
  | Extract<keyof UserCreateWithoutRegistered_completionsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'completions', alias?: string  } 
  
export interface CompletionRegisteredUpdateInput {
  created_at?: string | null
  updated_at?: string | null
  user?: UserUpdateOneRequiredWithoutRegistered_completionsInput | null
  course?: CourseUpdateOneRequiredInput | null
  real_student_number?: string | null
  organisation?: string | null
  completion?: CompletionUpdateOneRequiredInput | null
}
export type CompletionRegisteredUpdateInputInputObject =
  | Extract<keyof CompletionRegisteredUpdateInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'completion', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutRegistered_completionsInput {
  create?: UserCreateWithoutRegistered_completionsInput | null
  update?: UserUpdateWithoutRegistered_completionsDataInput | null
  upsert?: UserUpsertWithoutRegistered_completionsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutRegistered_completionsInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutRegistered_completionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutRegistered_completionsDataInput {
  upstream_id?: number | null
  created_at?: string | null
  updated_at?: string | null
  first_name?: string | null
  last_name?: string | null
  username?: string | null
  email?: string | null
  administrator?: boolean | null
  student_number?: string | null
  real_student_number?: string | null
  completions?: CompletionUpdateManyWithoutUserInput | null
}
export type UserUpdateWithoutRegistered_completionsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutRegistered_completionsDataInput, string>
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'completions', alias?: string  } 
  
export interface UserUpsertWithoutRegistered_completionsInput {
  update?: UserUpdateWithoutRegistered_completionsDataInput
  create?: UserCreateWithoutRegistered_completionsInput
}
export type UserUpsertWithoutRegistered_completionsInputInputObject =
  | Extract<keyof UserUpsertWithoutRegistered_completionsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CompletionRegisteredUpdateManyMutationInput {
  created_at?: string | null
  updated_at?: string | null
  real_student_number?: string | null
  organisation?: string | null
}
export type CompletionRegisteredUpdateManyMutationInputInputObject =
  | Extract<keyof CompletionRegisteredUpdateManyMutationInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  
export interface UserSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserWhereInput | null
  AND?: UserSubscriptionWhereInput[]
  OR?: UserSubscriptionWhereInput[]
  NOT?: UserSubscriptionWhereInput[]
}
export type UserSubscriptionWhereInputInputObject =
  | Extract<keyof UserSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CourseSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: CourseWhereInput | null
  AND?: CourseSubscriptionWhereInput[]
  OR?: CourseSubscriptionWhereInput[]
  NOT?: CourseSubscriptionWhereInput[]
}
export type CourseSubscriptionWhereInputInputObject =
  | Extract<keyof CourseSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OpenUniversityCourseSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OpenUniversityCourseWhereInput | null
  AND?: OpenUniversityCourseSubscriptionWhereInput[]
  OR?: OpenUniversityCourseSubscriptionWhereInput[]
  NOT?: OpenUniversityCourseSubscriptionWhereInput[]
}
export type OpenUniversityCourseSubscriptionWhereInputInputObject =
  | Extract<keyof OpenUniversityCourseSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CompletionSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: CompletionWhereInput | null
  AND?: CompletionSubscriptionWhereInput[]
  OR?: CompletionSubscriptionWhereInput[]
  NOT?: CompletionSubscriptionWhereInput[]
}
export type CompletionSubscriptionWhereInputInputObject =
  | Extract<keyof CompletionSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CompletionRegisteredSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: CompletionRegisteredWhereInput | null
  AND?: CompletionRegisteredSubscriptionWhereInput[]
  OR?: CompletionRegisteredSubscriptionWhereInput[]
  NOT?: CompletionRegisteredSubscriptionWhereInput[]
}
export type CompletionRegisteredSubscriptionWhereInputInputObject =
  | Extract<keyof CompletionRegisteredSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type CompletionOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'created_at_ASC'
  | 'created_at_DESC'
  | 'updated_at_ASC'
  | 'updated_at_DESC'
  | 'user_upstream_id_ASC'
  | 'user_upstream_id_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'student_number_ASC'
  | 'student_number_DESC'
  | 'completion_language_ASC'
  | 'completion_language_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OpenUniversityCourseOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'created_at_ASC'
  | 'created_at_DESC'
  | 'updated_at_ASC'
  | 'updated_at_DESC'
  | 'course_code_ASC'
  | 'course_code_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type CompletionRegisteredOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'created_at_ASC'
  | 'created_at_DESC'
  | 'updated_at_ASC'
  | 'updated_at_DESC'
  | 'real_student_number_ASC'
  | 'real_student_number_DESC'
  | 'organisation_ASC'
  | 'organisation_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type UserOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'upstream_id_ASC'
  | 'upstream_id_DESC'
  | 'created_at_ASC'
  | 'created_at_DESC'
  | 'updated_at_ASC'
  | 'updated_at_DESC'
  | 'first_name_ASC'
  | 'first_name_DESC'
  | 'last_name_ASC'
  | 'last_name_DESC'
  | 'username_ASC'
  | 'username_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'administrator_ASC'
  | 'administrator_DESC'
  | 'student_number_ASC'
  | 'student_number_DESC'
  | 'real_student_number_ASC'
  | 'real_student_number_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type CourseOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'created_at_ASC'
  | 'created_at_DESC'
  | 'updated_at_ASC'
  | 'updated_at_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'slug_ASC'
  | 'slug_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  