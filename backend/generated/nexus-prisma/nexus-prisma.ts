/**
 * This file was automatically generated by nexus-prisma@0.3.5
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      User: UserObject
      Completion: CompletionObject
      Course: CourseObject
      CourseAlias: CourseAliasObject
      CompletionRegistered: CompletionRegisteredObject
      UserConnection: UserConnectionObject
      PageInfo: PageInfoObject
      UserEdge: UserEdgeObject
      AggregateUser: AggregateUserObject
      CourseConnection: CourseConnectionObject
      CourseEdge: CourseEdgeObject
      AggregateCourse: AggregateCourseObject
      CourseAliasConnection: CourseAliasConnectionObject
      CourseAliasEdge: CourseAliasEdgeObject
      AggregateCourseAlias: AggregateCourseAliasObject
      CompletionConnection: CompletionConnectionObject
      CompletionEdge: CompletionEdgeObject
      AggregateCompletion: AggregateCompletionObject
      CompletionRegisteredConnection: CompletionRegisteredConnectionObject
      CompletionRegisteredEdge: CompletionRegisteredEdgeObject
      AggregateCompletionRegistered: AggregateCompletionRegisteredObject
      Service: ServiceObject
      ServiceConnection: ServiceConnectionObject
      ServiceEdge: ServiceEdgeObject
      AggregateService: AggregateServiceObject
      UserCourseProgress: UserCourseProgressObject
      UserCourseProgressConnection: UserCourseProgressConnectionObject
      UserCourseProgressEdge: UserCourseProgressEdgeObject
      AggregateUserCourseProgress: AggregateUserCourseProgressObject
      UserCourseServiceProgress: UserCourseServiceProgressObject
      UserCourseServiceProgressConnection: UserCourseServiceProgressConnectionObject
      UserCourseServiceProgressEdge: UserCourseServiceProgressEdgeObject
      AggregateUserCourseServiceProgress: AggregateUserCourseServiceProgressObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      UserSubscriptionPayload: UserSubscriptionPayloadObject
      UserPreviousValues: UserPreviousValuesObject
      CourseSubscriptionPayload: CourseSubscriptionPayloadObject
      CoursePreviousValues: CoursePreviousValuesObject
      CourseAliasSubscriptionPayload: CourseAliasSubscriptionPayloadObject
      CourseAliasPreviousValues: CourseAliasPreviousValuesObject
      CompletionSubscriptionPayload: CompletionSubscriptionPayloadObject
      CompletionPreviousValues: CompletionPreviousValuesObject
      CompletionRegisteredSubscriptionPayload: CompletionRegisteredSubscriptionPayloadObject
      CompletionRegisteredPreviousValues: CompletionRegisteredPreviousValuesObject
      ServiceSubscriptionPayload: ServiceSubscriptionPayloadObject
      ServicePreviousValues: ServicePreviousValuesObject
      UserCourseProgressSubscriptionPayload: UserCourseProgressSubscriptionPayloadObject
      UserCourseProgressPreviousValues: UserCourseProgressPreviousValuesObject
      UserCourseServiceProgressSubscriptionPayload: UserCourseServiceProgressSubscriptionPayloadObject
      UserCourseServiceProgressPreviousValues: UserCourseServiceProgressPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      User: UserFieldDetails
      Completion: CompletionFieldDetails
      Course: CourseFieldDetails
      CourseAlias: CourseAliasFieldDetails
      CompletionRegistered: CompletionRegisteredFieldDetails
      UserConnection: UserConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      UserEdge: UserEdgeFieldDetails
      AggregateUser: AggregateUserFieldDetails
      CourseConnection: CourseConnectionFieldDetails
      CourseEdge: CourseEdgeFieldDetails
      AggregateCourse: AggregateCourseFieldDetails
      CourseAliasConnection: CourseAliasConnectionFieldDetails
      CourseAliasEdge: CourseAliasEdgeFieldDetails
      AggregateCourseAlias: AggregateCourseAliasFieldDetails
      CompletionConnection: CompletionConnectionFieldDetails
      CompletionEdge: CompletionEdgeFieldDetails
      AggregateCompletion: AggregateCompletionFieldDetails
      CompletionRegisteredConnection: CompletionRegisteredConnectionFieldDetails
      CompletionRegisteredEdge: CompletionRegisteredEdgeFieldDetails
      AggregateCompletionRegistered: AggregateCompletionRegisteredFieldDetails
      Service: ServiceFieldDetails
      ServiceConnection: ServiceConnectionFieldDetails
      ServiceEdge: ServiceEdgeFieldDetails
      AggregateService: AggregateServiceFieldDetails
      UserCourseProgress: UserCourseProgressFieldDetails
      UserCourseProgressConnection: UserCourseProgressConnectionFieldDetails
      UserCourseProgressEdge: UserCourseProgressEdgeFieldDetails
      AggregateUserCourseProgress: AggregateUserCourseProgressFieldDetails
      UserCourseServiceProgress: UserCourseServiceProgressFieldDetails
      UserCourseServiceProgressConnection: UserCourseServiceProgressConnectionFieldDetails
      UserCourseServiceProgressEdge: UserCourseServiceProgressEdgeFieldDetails
      AggregateUserCourseServiceProgress: AggregateUserCourseServiceProgressFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      UserSubscriptionPayload: UserSubscriptionPayloadFieldDetails
      UserPreviousValues: UserPreviousValuesFieldDetails
      CourseSubscriptionPayload: CourseSubscriptionPayloadFieldDetails
      CoursePreviousValues: CoursePreviousValuesFieldDetails
      CourseAliasSubscriptionPayload: CourseAliasSubscriptionPayloadFieldDetails
      CourseAliasPreviousValues: CourseAliasPreviousValuesFieldDetails
      CompletionSubscriptionPayload: CompletionSubscriptionPayloadFieldDetails
      CompletionPreviousValues: CompletionPreviousValuesFieldDetails
      CompletionRegisteredSubscriptionPayload: CompletionRegisteredSubscriptionPayloadFieldDetails
      CompletionRegisteredPreviousValues: CompletionRegisteredPreviousValuesFieldDetails
      ServiceSubscriptionPayload: ServiceSubscriptionPayloadFieldDetails
      ServicePreviousValues: ServicePreviousValuesFieldDetails
      UserCourseProgressSubscriptionPayload: UserCourseProgressSubscriptionPayloadFieldDetails
      UserCourseProgressPreviousValues: UserCourseProgressPreviousValuesFieldDetails
      UserCourseServiceProgressSubscriptionPayload: UserCourseServiceProgressSubscriptionPayloadFieldDetails
      UserCourseServiceProgressPreviousValues: UserCourseServiceProgressPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      UserWhereUniqueInput: UserWhereUniqueInputInputObject
      CompletionWhereInput: CompletionWhereInputInputObject
      UserWhereInput: UserWhereInputInputObject
      CompletionRegisteredWhereInput: CompletionRegisteredWhereInputInputObject
      CourseWhereInput: CourseWhereInputInputObject
      CourseAliasWhereInput: CourseAliasWhereInputInputObject
      CourseWhereUniqueInput: CourseWhereUniqueInputInputObject
      CourseAliasWhereUniqueInput: CourseAliasWhereUniqueInputInputObject
      CompletionWhereUniqueInput: CompletionWhereUniqueInputInputObject
      CompletionRegisteredWhereUniqueInput: CompletionRegisteredWhereUniqueInputInputObject
      ServiceWhereUniqueInput: ServiceWhereUniqueInputInputObject
      ServiceWhereInput: ServiceWhereInputInputObject
      UserCourseProgressWhereUniqueInput: UserCourseProgressWhereUniqueInputInputObject
      UserCourseProgressWhereInput: UserCourseProgressWhereInputInputObject
      UserCourseServiceProgressWhereUniqueInput: UserCourseServiceProgressWhereUniqueInputInputObject
      UserCourseServiceProgressWhereInput: UserCourseServiceProgressWhereInputInputObject
      UserCreateInput: UserCreateInputInputObject
      CompletionCreateManyWithoutUserInput: CompletionCreateManyWithoutUserInputInputObject
      CompletionCreateWithoutUserInput: CompletionCreateWithoutUserInputInputObject
      CourseCreateOneInput: CourseCreateOneInputInputObject
      CourseCreateInput: CourseCreateInputInputObject
      CourseAliasCreateManyWithoutCourseInput: CourseAliasCreateManyWithoutCourseInputInputObject
      CourseAliasCreateWithoutCourseInput: CourseAliasCreateWithoutCourseInputInputObject
      CompletionRegisteredCreateManyWithoutUserInput: CompletionRegisteredCreateManyWithoutUserInputInputObject
      CompletionRegisteredCreateWithoutUserInput: CompletionRegisteredCreateWithoutUserInputInputObject
      CompletionCreateOneInput: CompletionCreateOneInputInputObject
      CompletionCreateInput: CompletionCreateInputInputObject
      UserCreateOneWithoutCompletionsInput: UserCreateOneWithoutCompletionsInputInputObject
      UserCreateWithoutCompletionsInput: UserCreateWithoutCompletionsInputInputObject
      UserUpdateInput: UserUpdateInputInputObject
      CompletionUpdateManyWithoutUserInput: CompletionUpdateManyWithoutUserInputInputObject
      CompletionUpdateWithWhereUniqueWithoutUserInput: CompletionUpdateWithWhereUniqueWithoutUserInputInputObject
      CompletionUpdateWithoutUserDataInput: CompletionUpdateWithoutUserDataInputInputObject
      CourseUpdateOneRequiredInput: CourseUpdateOneRequiredInputInputObject
      CourseUpdateDataInput: CourseUpdateDataInputInputObject
      CourseAliasUpdateManyWithoutCourseInput: CourseAliasUpdateManyWithoutCourseInputInputObject
      CourseAliasUpdateWithWhereUniqueWithoutCourseInput: CourseAliasUpdateWithWhereUniqueWithoutCourseInputInputObject
      CourseAliasUpdateWithoutCourseDataInput: CourseAliasUpdateWithoutCourseDataInputInputObject
      CourseAliasUpsertWithWhereUniqueWithoutCourseInput: CourseAliasUpsertWithWhereUniqueWithoutCourseInputInputObject
      CourseAliasScalarWhereInput: CourseAliasScalarWhereInputInputObject
      CourseAliasUpdateManyWithWhereNestedInput: CourseAliasUpdateManyWithWhereNestedInputInputObject
      CourseAliasUpdateManyDataInput: CourseAliasUpdateManyDataInputInputObject
      CourseUpsertNestedInput: CourseUpsertNestedInputInputObject
      CompletionUpsertWithWhereUniqueWithoutUserInput: CompletionUpsertWithWhereUniqueWithoutUserInputInputObject
      CompletionScalarWhereInput: CompletionScalarWhereInputInputObject
      CompletionUpdateManyWithWhereNestedInput: CompletionUpdateManyWithWhereNestedInputInputObject
      CompletionUpdateManyDataInput: CompletionUpdateManyDataInputInputObject
      CompletionRegisteredUpdateManyWithoutUserInput: CompletionRegisteredUpdateManyWithoutUserInputInputObject
      CompletionRegisteredUpdateWithWhereUniqueWithoutUserInput: CompletionRegisteredUpdateWithWhereUniqueWithoutUserInputInputObject
      CompletionRegisteredUpdateWithoutUserDataInput: CompletionRegisteredUpdateWithoutUserDataInputInputObject
      CompletionUpdateOneRequiredInput: CompletionUpdateOneRequiredInputInputObject
      CompletionUpdateDataInput: CompletionUpdateDataInputInputObject
      UserUpdateOneRequiredWithoutCompletionsInput: UserUpdateOneRequiredWithoutCompletionsInputInputObject
      UserUpdateWithoutCompletionsDataInput: UserUpdateWithoutCompletionsDataInputInputObject
      UserUpsertWithoutCompletionsInput: UserUpsertWithoutCompletionsInputInputObject
      CompletionUpsertNestedInput: CompletionUpsertNestedInputInputObject
      CompletionRegisteredUpsertWithWhereUniqueWithoutUserInput: CompletionRegisteredUpsertWithWhereUniqueWithoutUserInputInputObject
      CompletionRegisteredScalarWhereInput: CompletionRegisteredScalarWhereInputInputObject
      CompletionRegisteredUpdateManyWithWhereNestedInput: CompletionRegisteredUpdateManyWithWhereNestedInputInputObject
      CompletionRegisteredUpdateManyDataInput: CompletionRegisteredUpdateManyDataInputInputObject
      UserUpdateManyMutationInput: UserUpdateManyMutationInputInputObject
      CourseUpdateInput: CourseUpdateInputInputObject
      CourseUpdateManyMutationInput: CourseUpdateManyMutationInputInputObject
      CourseAliasCreateInput: CourseAliasCreateInputInputObject
      CourseCreateOneWithoutOpen_university_coursesInput: CourseCreateOneWithoutOpen_university_coursesInputInputObject
      CourseCreateWithoutOpen_university_coursesInput: CourseCreateWithoutOpen_university_coursesInputInputObject
      CourseAliasUpdateInput: CourseAliasUpdateInputInputObject
      CourseUpdateOneRequiredWithoutOpen_university_coursesInput: CourseUpdateOneRequiredWithoutOpen_university_coursesInputInputObject
      CourseUpdateWithoutOpen_university_coursesDataInput: CourseUpdateWithoutOpen_university_coursesDataInputInputObject
      CourseUpsertWithoutOpen_university_coursesInput: CourseUpsertWithoutOpen_university_coursesInputInputObject
      CourseAliasUpdateManyMutationInput: CourseAliasUpdateManyMutationInputInputObject
      CompletionUpdateInput: CompletionUpdateInputInputObject
      CompletionUpdateManyMutationInput: CompletionUpdateManyMutationInputInputObject
      CompletionRegisteredCreateInput: CompletionRegisteredCreateInputInputObject
      UserCreateOneWithoutRegistered_completionsInput: UserCreateOneWithoutRegistered_completionsInputInputObject
      UserCreateWithoutRegistered_completionsInput: UserCreateWithoutRegistered_completionsInputInputObject
      CompletionRegisteredUpdateInput: CompletionRegisteredUpdateInputInputObject
      UserUpdateOneRequiredWithoutRegistered_completionsInput: UserUpdateOneRequiredWithoutRegistered_completionsInputInputObject
      UserUpdateWithoutRegistered_completionsDataInput: UserUpdateWithoutRegistered_completionsDataInputInputObject
      UserUpsertWithoutRegistered_completionsInput: UserUpsertWithoutRegistered_completionsInputInputObject
      CompletionRegisteredUpdateManyMutationInput: CompletionRegisteredUpdateManyMutationInputInputObject
      ServiceCreateInput: ServiceCreateInputInputObject
      ServiceUpdateInput: ServiceUpdateInputInputObject
      ServiceUpdateManyMutationInput: ServiceUpdateManyMutationInputInputObject
      UserCourseProgressCreateInput: UserCourseProgressCreateInputInputObject
      UserCreateOneInput: UserCreateOneInputInputObject
      UserCourseProgressUpdateInput: UserCourseProgressUpdateInputInputObject
      UserUpdateOneRequiredInput: UserUpdateOneRequiredInputInputObject
      UserUpdateDataInput: UserUpdateDataInputInputObject
      UserUpsertNestedInput: UserUpsertNestedInputInputObject
      UserCourseProgressUpdateManyMutationInput: UserCourseProgressUpdateManyMutationInputInputObject
      UserCourseServiceProgressCreateInput: UserCourseServiceProgressCreateInputInputObject
      ServiceCreateOneInput: ServiceCreateOneInputInputObject
      UserCourseServiceProgressUpdateInput: UserCourseServiceProgressUpdateInputInputObject
      ServiceUpdateOneRequiredInput: ServiceUpdateOneRequiredInputInputObject
      ServiceUpdateDataInput: ServiceUpdateDataInputInputObject
      ServiceUpsertNestedInput: ServiceUpsertNestedInputInputObject
      UserCourseServiceProgressUpdateManyMutationInput: UserCourseServiceProgressUpdateManyMutationInputInputObject
      UserSubscriptionWhereInput: UserSubscriptionWhereInputInputObject
      CourseSubscriptionWhereInput: CourseSubscriptionWhereInputInputObject
      CourseAliasSubscriptionWhereInput: CourseAliasSubscriptionWhereInputInputObject
      CompletionSubscriptionWhereInput: CompletionSubscriptionWhereInputInputObject
      CompletionRegisteredSubscriptionWhereInput: CompletionRegisteredSubscriptionWhereInputInputObject
      ServiceSubscriptionWhereInput: ServiceSubscriptionWhereInputInputObject
      UserCourseProgressSubscriptionWhereInput: UserCourseProgressSubscriptionWhereInputInputObject
      UserCourseServiceProgressSubscriptionWhereInput: UserCourseServiceProgressSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    CompletionOrderByInput: CompletionOrderByInputValues,
    CourseAliasOrderByInput: CourseAliasOrderByInputValues,
    CompletionRegisteredOrderByInput: CompletionRegisteredOrderByInputValues,
    UserOrderByInput: UserOrderByInputValues,
    CourseOrderByInput: CourseOrderByInputValues,
    ServiceOrderByInput: ServiceOrderByInputValues,
    UserCourseProgressOrderByInput: UserCourseProgressOrderByInputValues,
    UserCourseServiceProgressOrderByInput: UserCourseServiceProgressOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'user', args?: QueryUserArgs[] | false, alias?: string  } 
  | { name: 'users', args?: QueryUsersArgs[] | false, alias?: string  } 
  | { name: 'usersConnection', args?: QueryUsersConnectionArgs[] | false, alias?: string  } 
  | { name: 'course', args?: QueryCourseArgs[] | false, alias?: string  } 
  | { name: 'courses', args?: QueryCoursesArgs[] | false, alias?: string  } 
  | { name: 'coursesConnection', args?: QueryCoursesConnectionArgs[] | false, alias?: string  } 
  | { name: 'courseAlias', args?: QueryCourseAliasArgs[] | false, alias?: string  } 
  | { name: 'courseAliases', args?: QueryCourseAliasesArgs[] | false, alias?: string  } 
  | { name: 'courseAliasesConnection', args?: QueryCourseAliasesConnectionArgs[] | false, alias?: string  } 
  | { name: 'completion', args?: QueryCompletionArgs[] | false, alias?: string  } 
  | { name: 'completions', args?: QueryCompletionsArgs[] | false, alias?: string  } 
  | { name: 'completionsConnection', args?: QueryCompletionsConnectionArgs[] | false, alias?: string  } 
  | { name: 'completionRegistered', args?: QueryCompletionRegisteredArgs[] | false, alias?: string  } 
  | { name: 'completionRegistereds', args?: QueryCompletionRegisteredsArgs[] | false, alias?: string  } 
  | { name: 'completionRegisteredsConnection', args?: QueryCompletionRegisteredsConnectionArgs[] | false, alias?: string  } 
  | { name: 'service', args?: QueryServiceArgs[] | false, alias?: string  } 
  | { name: 'services', args?: QueryServicesArgs[] | false, alias?: string  } 
  | { name: 'servicesConnection', args?: QueryServicesConnectionArgs[] | false, alias?: string  } 
  | { name: 'userCourseProgress', args?: QueryUserCourseProgressArgs[] | false, alias?: string  } 
  | { name: 'userCourseProgresses', args?: QueryUserCourseProgressesArgs[] | false, alias?: string  } 
  | { name: 'userCourseProgressesConnection', args?: QueryUserCourseProgressesConnectionArgs[] | false, alias?: string  } 
  | { name: 'userCourseServiceProgress', args?: QueryUserCourseServiceProgressArgs[] | false, alias?: string  } 
  | { name: 'userCourseServiceProgresses', args?: QueryUserCourseServiceProgressesArgs[] | false, alias?: string  } 
  | { name: 'userCourseServiceProgressesConnection', args?: QueryUserCourseServiceProgressesConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'user'
  | 'users'
  | 'usersConnection'
  | 'course'
  | 'courses'
  | 'coursesConnection'
  | 'courseAlias'
  | 'courseAliases'
  | 'courseAliasesConnection'
  | 'completion'
  | 'completions'
  | 'completionsConnection'
  | 'completionRegistered'
  | 'completionRegistereds'
  | 'completionRegisteredsConnection'
  | 'service'
  | 'services'
  | 'servicesConnection'
  | 'userCourseProgress'
  | 'userCourseProgresses'
  | 'userCourseProgressesConnection'
  | 'userCourseServiceProgress'
  | 'userCourseServiceProgresses'
  | 'userCourseServiceProgressesConnection'


type QueryUserArgs =
  | 'where'
type QueryUsersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUsersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCourseArgs =
  | 'where'
type QueryCoursesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCoursesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCourseAliasArgs =
  | 'where'
type QueryCourseAliasesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCourseAliasesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCompletionArgs =
  | 'where'
type QueryCompletionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCompletionsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCompletionRegisteredArgs =
  | 'where'
type QueryCompletionRegisteredsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCompletionRegisteredsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryServiceArgs =
  | 'where'
type QueryServicesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryServicesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUserCourseProgressArgs =
  | 'where'
type QueryUserCourseProgressesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUserCourseProgressesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUserCourseServiceProgressArgs =
  | 'where'
type QueryUserCourseServiceProgressesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUserCourseServiceProgressesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  user: {
    type: 'User'
    args: Record<QueryUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  users: {
    type: 'User'
    args: Record<QueryUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  usersConnection: {
    type: 'UserConnection'
    args: Record<QueryUsersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserConnection> | prisma.UserConnection
  }
  course: {
    type: 'Course'
    args: Record<QueryCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: CourseWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course | null> | prisma.Course | null
  }
  courses: {
    type: 'Course'
    args: Record<QueryCoursesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CourseWhereInput | null, orderBy?: prisma.CourseOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course[]> | prisma.Course[]
  }
  coursesConnection: {
    type: 'CourseConnection'
    args: Record<QueryCoursesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CourseWhereInput | null, orderBy?: prisma.CourseOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseConnection> | prisma.CourseConnection
  }
  courseAlias: {
    type: 'CourseAlias'
    args: Record<QueryCourseAliasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: CourseAliasWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseAlias | null> | prisma.CourseAlias | null
  }
  courseAliases: {
    type: 'CourseAlias'
    args: Record<QueryCourseAliasesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CourseAliasWhereInput | null, orderBy?: prisma.CourseAliasOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseAlias[]> | prisma.CourseAlias[]
  }
  courseAliasesConnection: {
    type: 'CourseAliasConnection'
    args: Record<QueryCourseAliasesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CourseAliasWhereInput | null, orderBy?: prisma.CourseAliasOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseAliasConnection> | prisma.CourseAliasConnection
  }
  completion: {
    type: 'Completion'
    args: Record<QueryCompletionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: CompletionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion | null> | prisma.Completion | null
  }
  completions: {
    type: 'Completion'
    args: Record<QueryCompletionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CompletionWhereInput | null, orderBy?: prisma.CompletionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion[]> | prisma.Completion[]
  }
  completionsConnection: {
    type: 'CompletionConnection'
    args: Record<QueryCompletionsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CompletionWhereInput | null, orderBy?: prisma.CompletionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionConnection> | prisma.CompletionConnection
  }
  completionRegistered: {
    type: 'CompletionRegistered'
    args: Record<QueryCompletionRegisteredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: CompletionRegisteredWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered | null> | prisma.CompletionRegistered | null
  }
  completionRegistereds: {
    type: 'CompletionRegistered'
    args: Record<QueryCompletionRegisteredsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CompletionRegisteredWhereInput | null, orderBy?: prisma.CompletionRegisteredOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered[]> | prisma.CompletionRegistered[]
  }
  completionRegisteredsConnection: {
    type: 'CompletionRegisteredConnection'
    args: Record<QueryCompletionRegisteredsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CompletionRegisteredWhereInput | null, orderBy?: prisma.CompletionRegisteredOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegisteredConnection> | prisma.CompletionRegisteredConnection
  }
  service: {
    type: 'Service'
    args: Record<QueryServiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ServiceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service | null> | prisma.Service | null
  }
  services: {
    type: 'Service'
    args: Record<QueryServicesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ServiceWhereInput | null, orderBy?: prisma.ServiceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service[]> | prisma.Service[]
  }
  servicesConnection: {
    type: 'ServiceConnection'
    args: Record<QueryServicesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ServiceWhereInput | null, orderBy?: prisma.ServiceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceConnection> | prisma.ServiceConnection
  }
  userCourseProgress: {
    type: 'UserCourseProgress'
    args: Record<QueryUserCourseProgressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserCourseProgressWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseProgress | null> | prisma.UserCourseProgress | null
  }
  userCourseProgresses: {
    type: 'UserCourseProgress'
    args: Record<QueryUserCourseProgressesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserCourseProgressWhereInput | null, orderBy?: prisma.UserCourseProgressOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseProgress[]> | prisma.UserCourseProgress[]
  }
  userCourseProgressesConnection: {
    type: 'UserCourseProgressConnection'
    args: Record<QueryUserCourseProgressesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserCourseProgressWhereInput | null, orderBy?: prisma.UserCourseProgressOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseProgressConnection> | prisma.UserCourseProgressConnection
  }
  userCourseServiceProgress: {
    type: 'UserCourseServiceProgress'
    args: Record<QueryUserCourseServiceProgressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserCourseServiceProgressWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseServiceProgress | null> | prisma.UserCourseServiceProgress | null
  }
  userCourseServiceProgresses: {
    type: 'UserCourseServiceProgress'
    args: Record<QueryUserCourseServiceProgressesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserCourseServiceProgressWhereInput | null, orderBy?: prisma.UserCourseServiceProgressOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseServiceProgress[]> | prisma.UserCourseServiceProgress[]
  }
  userCourseServiceProgressesConnection: {
    type: 'UserCourseServiceProgressConnection'
    args: Record<QueryUserCourseServiceProgressesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserCourseServiceProgressWhereInput | null, orderBy?: prisma.UserCourseServiceProgressOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseServiceProgressConnection> | prisma.UserCourseServiceProgressConnection
  }
}
  

// Types for User

type UserObject =
  | UserFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'upstream_id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'first_name', args?: [] | false, alias?: string  } 
  | { name: 'last_name', args?: [] | false, alias?: string  } 
  | { name: 'username', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'administrator', args?: [] | false, alias?: string  } 
  | { name: 'student_number', args?: [] | false, alias?: string  } 
  | { name: 'real_student_number', args?: [] | false, alias?: string  } 
  | { name: 'completions', args?: UserCompletionsArgs[] | false, alias?: string  } 
  | { name: 'registered_completions', args?: UserRegistered_completionsArgs[] | false, alias?: string  } 

type UserFields =
  | 'id'
  | 'upstream_id'
  | 'created_at'
  | 'updated_at'
  | 'first_name'
  | 'last_name'
  | 'username'
  | 'email'
  | 'administrator'
  | 'student_number'
  | 'real_student_number'
  | 'completions'
  | 'registered_completions'


type UserCompletionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type UserRegistered_completionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface UserFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  upstream_id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  first_name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  last_name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  username: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  administrator: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  student_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  real_student_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  completions: {
    type: 'Completion'
    args: Record<UserCompletionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: CompletionWhereInput | null, orderBy?: prisma.CompletionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion[]> | prisma.Completion[]
  }
  registered_completions: {
    type: 'CompletionRegistered'
    args: Record<UserRegistered_completionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: CompletionRegisteredWhereInput | null, orderBy?: prisma.CompletionRegisteredOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered[]> | prisma.CompletionRegistered[]
  }
}
  

// Types for Completion

type CompletionObject =
  | CompletionFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'user_upstream_id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'student_number', args?: [] | false, alias?: string  } 
  | { name: 'user', args?: [] | false, alias?: string  } 
  | { name: 'course', args?: [] | false, alias?: string  } 
  | { name: 'completion_language', args?: [] | false, alias?: string  } 

type CompletionFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'user_upstream_id'
  | 'email'
  | 'student_number'
  | 'user'
  | 'course'
  | 'completion_language'



  

export interface CompletionFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  user_upstream_id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  student_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  user: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Completion">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  course: {
    type: 'Course'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Completion">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course> | prisma.Course
  }
  completion_language: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Course

type CourseObject =
  | CourseFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'slug', args?: [] | false, alias?: string  } 
  | { name: 'open_university_courses', args?: CourseOpen_university_coursesArgs[] | false, alias?: string  } 

type CourseFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'name'
  | 'slug'
  | 'open_university_courses'


type CourseOpen_university_coursesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface CourseFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  slug: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  open_university_courses: {
    type: 'CourseAlias'
    args: Record<CourseOpen_university_coursesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Course">,
      args: { where?: CourseAliasWhereInput | null, orderBy?: prisma.CourseAliasOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseAlias[]> | prisma.CourseAlias[]
  }
}
  

// Types for CourseAlias

type CourseAliasObject =
  | CourseAliasFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'course_code', args?: [] | false, alias?: string  } 
  | { name: 'course', args?: [] | false, alias?: string  } 

type CourseAliasFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'course_code'
  | 'course'



  

export interface CourseAliasFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  course_code: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  course: {
    type: 'Course'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CourseAlias">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course> | prisma.Course
  }
}
  

// Types for CompletionRegistered

type CompletionRegisteredObject =
  | CompletionRegisteredFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'user', args?: [] | false, alias?: string  } 
  | { name: 'course', args?: [] | false, alias?: string  } 
  | { name: 'real_student_number', args?: [] | false, alias?: string  } 
  | { name: 'organisation', args?: [] | false, alias?: string  } 
  | { name: 'completion', args?: [] | false, alias?: string  } 

type CompletionRegisteredFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'user'
  | 'course'
  | 'real_student_number'
  | 'organisation'
  | 'completion'



  

export interface CompletionRegisteredFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  user: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionRegistered">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  course: {
    type: 'Course'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionRegistered">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course> | prisma.Course
  }
  real_student_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  organisation: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  completion: {
    type: 'Completion'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionRegistered">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion> | prisma.Completion
  }
}
  

// Types for UserConnection

type UserConnectionObject =
  | UserConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserEdge[]> | prisma.UserEdge[]
  }
  aggregate: {
    type: 'AggregateUser'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUser> | prisma.AggregateUser
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for UserEdge

type UserEdgeObject =
  | UserEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserEdgeFieldDetails {
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUser

type AggregateUserObject =
  | AggregateUserFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserFields =
  | 'count'



  

export interface AggregateUserFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CourseConnection

type CourseConnectionObject =
  | CourseConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type CourseConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface CourseConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CourseConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'CourseEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"CourseConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseEdge[]> | prisma.CourseEdge[]
  }
  aggregate: {
    type: 'AggregateCourse'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CourseConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateCourse> | prisma.AggregateCourse
  }
}
  

// Types for CourseEdge

type CourseEdgeObject =
  | CourseEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type CourseEdgeFields =
  | 'node'
  | 'cursor'



  

export interface CourseEdgeFieldDetails {
  node: {
    type: 'Course'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CourseEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course> | prisma.Course
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateCourse

type AggregateCourseObject =
  | AggregateCourseFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateCourseFields =
  | 'count'



  

export interface AggregateCourseFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CourseAliasConnection

type CourseAliasConnectionObject =
  | CourseAliasConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type CourseAliasConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface CourseAliasConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CourseAliasConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'CourseAliasEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"CourseAliasConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseAliasEdge[]> | prisma.CourseAliasEdge[]
  }
  aggregate: {
    type: 'AggregateCourseAlias'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CourseAliasConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateCourseAlias> | prisma.AggregateCourseAlias
  }
}
  

// Types for CourseAliasEdge

type CourseAliasEdgeObject =
  | CourseAliasEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type CourseAliasEdgeFields =
  | 'node'
  | 'cursor'



  

export interface CourseAliasEdgeFieldDetails {
  node: {
    type: 'CourseAlias'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CourseAliasEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseAlias> | prisma.CourseAlias
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateCourseAlias

type AggregateCourseAliasObject =
  | AggregateCourseAliasFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateCourseAliasFields =
  | 'count'



  

export interface AggregateCourseAliasFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CompletionConnection

type CompletionConnectionObject =
  | CompletionConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type CompletionConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface CompletionConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'CompletionEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionEdge[]> | prisma.CompletionEdge[]
  }
  aggregate: {
    type: 'AggregateCompletion'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateCompletion> | prisma.AggregateCompletion
  }
}
  

// Types for CompletionEdge

type CompletionEdgeObject =
  | CompletionEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type CompletionEdgeFields =
  | 'node'
  | 'cursor'



  

export interface CompletionEdgeFieldDetails {
  node: {
    type: 'Completion'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion> | prisma.Completion
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateCompletion

type AggregateCompletionObject =
  | AggregateCompletionFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateCompletionFields =
  | 'count'



  

export interface AggregateCompletionFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CompletionRegisteredConnection

type CompletionRegisteredConnectionObject =
  | CompletionRegisteredConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type CompletionRegisteredConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface CompletionRegisteredConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionRegisteredConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'CompletionRegisteredEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionRegisteredConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegisteredEdge[]> | prisma.CompletionRegisteredEdge[]
  }
  aggregate: {
    type: 'AggregateCompletionRegistered'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionRegisteredConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateCompletionRegistered> | prisma.AggregateCompletionRegistered
  }
}
  

// Types for CompletionRegisteredEdge

type CompletionRegisteredEdgeObject =
  | CompletionRegisteredEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type CompletionRegisteredEdgeFields =
  | 'node'
  | 'cursor'



  

export interface CompletionRegisteredEdgeFieldDetails {
  node: {
    type: 'CompletionRegistered'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionRegisteredEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered> | prisma.CompletionRegistered
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateCompletionRegistered

type AggregateCompletionRegisteredObject =
  | AggregateCompletionRegisteredFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateCompletionRegisteredFields =
  | 'count'



  

export interface AggregateCompletionRegisteredFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Service

type ServiceObject =
  | ServiceFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type ServiceFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'url'



  

export interface ServiceFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ServiceConnection

type ServiceConnectionObject =
  | ServiceConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ServiceConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ServiceConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ServiceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ServiceEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ServiceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceEdge[]> | prisma.ServiceEdge[]
  }
  aggregate: {
    type: 'AggregateService'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ServiceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateService> | prisma.AggregateService
  }
}
  

// Types for ServiceEdge

type ServiceEdgeObject =
  | ServiceEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ServiceEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ServiceEdgeFieldDetails {
  node: {
    type: 'Service'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ServiceEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service> | prisma.Service
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateService

type AggregateServiceObject =
  | AggregateServiceFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateServiceFields =
  | 'count'



  

export interface AggregateServiceFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for UserCourseProgress

type UserCourseProgressObject =
  | UserCourseProgressFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'user', args?: [] | false, alias?: string  } 
  | { name: 'course', args?: [] | false, alias?: string  } 
  | { name: 'progress', args?: [] | false, alias?: string  } 

type UserCourseProgressFields =
  | 'id'
  | 'user'
  | 'course'
  | 'progress'



  

export interface UserCourseProgressFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  user: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserCourseProgress">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  course: {
    type: 'Course'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserCourseProgress">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course> | prisma.Course
  }
  progress: {
    type: 'Json'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for UserCourseProgressConnection

type UserCourseProgressConnectionObject =
  | UserCourseProgressConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserCourseProgressConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserCourseProgressConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserCourseProgressConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserCourseProgressEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserCourseProgressConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseProgressEdge[]> | prisma.UserCourseProgressEdge[]
  }
  aggregate: {
    type: 'AggregateUserCourseProgress'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserCourseProgressConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUserCourseProgress> | prisma.AggregateUserCourseProgress
  }
}
  

// Types for UserCourseProgressEdge

type UserCourseProgressEdgeObject =
  | UserCourseProgressEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserCourseProgressEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserCourseProgressEdgeFieldDetails {
  node: {
    type: 'UserCourseProgress'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserCourseProgressEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseProgress> | prisma.UserCourseProgress
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUserCourseProgress

type AggregateUserCourseProgressObject =
  | AggregateUserCourseProgressFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserCourseProgressFields =
  | 'count'



  

export interface AggregateUserCourseProgressFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for UserCourseServiceProgress

type UserCourseServiceProgressObject =
  | UserCourseServiceProgressFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'user', args?: [] | false, alias?: string  } 
  | { name: 'course', args?: [] | false, alias?: string  } 
  | { name: 'service', args?: [] | false, alias?: string  } 
  | { name: 'progress', args?: [] | false, alias?: string  } 

type UserCourseServiceProgressFields =
  | 'id'
  | 'user'
  | 'course'
  | 'service'
  | 'progress'



  

export interface UserCourseServiceProgressFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  user: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserCourseServiceProgress">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  course: {
    type: 'Course'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserCourseServiceProgress">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course> | prisma.Course
  }
  service: {
    type: 'Service'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserCourseServiceProgress">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service> | prisma.Service
  }
  progress: {
    type: 'Json'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for UserCourseServiceProgressConnection

type UserCourseServiceProgressConnectionObject =
  | UserCourseServiceProgressConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserCourseServiceProgressConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserCourseServiceProgressConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserCourseServiceProgressConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserCourseServiceProgressEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserCourseServiceProgressConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseServiceProgressEdge[]> | prisma.UserCourseServiceProgressEdge[]
  }
  aggregate: {
    type: 'AggregateUserCourseServiceProgress'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserCourseServiceProgressConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUserCourseServiceProgress> | prisma.AggregateUserCourseServiceProgress
  }
}
  

// Types for UserCourseServiceProgressEdge

type UserCourseServiceProgressEdgeObject =
  | UserCourseServiceProgressEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserCourseServiceProgressEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserCourseServiceProgressEdgeFieldDetails {
  node: {
    type: 'UserCourseServiceProgress'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserCourseServiceProgressEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseServiceProgress> | prisma.UserCourseServiceProgress
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUserCourseServiceProgress

type AggregateUserCourseServiceProgressObject =
  | AggregateUserCourseServiceProgressFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserCourseServiceProgressFields =
  | 'count'



  

export interface AggregateUserCourseServiceProgressFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createUser', args?: MutationCreateUserArgs[] | false, alias?: string  } 
  | { name: 'updateUser', args?: MutationUpdateUserArgs[] | false, alias?: string  } 
  | { name: 'updateManyUsers', args?: MutationUpdateManyUsersArgs[] | false, alias?: string  } 
  | { name: 'upsertUser', args?: MutationUpsertUserArgs[] | false, alias?: string  } 
  | { name: 'deleteUser', args?: MutationDeleteUserArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUsers', args?: MutationDeleteManyUsersArgs[] | false, alias?: string  } 
  | { name: 'createCourse', args?: MutationCreateCourseArgs[] | false, alias?: string  } 
  | { name: 'updateCourse', args?: MutationUpdateCourseArgs[] | false, alias?: string  } 
  | { name: 'updateManyCourses', args?: MutationUpdateManyCoursesArgs[] | false, alias?: string  } 
  | { name: 'upsertCourse', args?: MutationUpsertCourseArgs[] | false, alias?: string  } 
  | { name: 'deleteCourse', args?: MutationDeleteCourseArgs[] | false, alias?: string  } 
  | { name: 'deleteManyCourses', args?: MutationDeleteManyCoursesArgs[] | false, alias?: string  } 
  | { name: 'createCourseAlias', args?: MutationCreateCourseAliasArgs[] | false, alias?: string  } 
  | { name: 'updateCourseAlias', args?: MutationUpdateCourseAliasArgs[] | false, alias?: string  } 
  | { name: 'updateManyCourseAliases', args?: MutationUpdateManyCourseAliasesArgs[] | false, alias?: string  } 
  | { name: 'upsertCourseAlias', args?: MutationUpsertCourseAliasArgs[] | false, alias?: string  } 
  | { name: 'deleteCourseAlias', args?: MutationDeleteCourseAliasArgs[] | false, alias?: string  } 
  | { name: 'deleteManyCourseAliases', args?: MutationDeleteManyCourseAliasesArgs[] | false, alias?: string  } 
  | { name: 'createCompletion', args?: MutationCreateCompletionArgs[] | false, alias?: string  } 
  | { name: 'updateCompletion', args?: MutationUpdateCompletionArgs[] | false, alias?: string  } 
  | { name: 'updateManyCompletions', args?: MutationUpdateManyCompletionsArgs[] | false, alias?: string  } 
  | { name: 'upsertCompletion', args?: MutationUpsertCompletionArgs[] | false, alias?: string  } 
  | { name: 'deleteCompletion', args?: MutationDeleteCompletionArgs[] | false, alias?: string  } 
  | { name: 'deleteManyCompletions', args?: MutationDeleteManyCompletionsArgs[] | false, alias?: string  } 
  | { name: 'createCompletionRegistered', args?: MutationCreateCompletionRegisteredArgs[] | false, alias?: string  } 
  | { name: 'updateCompletionRegistered', args?: MutationUpdateCompletionRegisteredArgs[] | false, alias?: string  } 
  | { name: 'updateManyCompletionRegistereds', args?: MutationUpdateManyCompletionRegisteredsArgs[] | false, alias?: string  } 
  | { name: 'upsertCompletionRegistered', args?: MutationUpsertCompletionRegisteredArgs[] | false, alias?: string  } 
  | { name: 'deleteCompletionRegistered', args?: MutationDeleteCompletionRegisteredArgs[] | false, alias?: string  } 
  | { name: 'deleteManyCompletionRegistereds', args?: MutationDeleteManyCompletionRegisteredsArgs[] | false, alias?: string  } 
  | { name: 'createService', args?: MutationCreateServiceArgs[] | false, alias?: string  } 
  | { name: 'updateService', args?: MutationUpdateServiceArgs[] | false, alias?: string  } 
  | { name: 'updateManyServices', args?: MutationUpdateManyServicesArgs[] | false, alias?: string  } 
  | { name: 'upsertService', args?: MutationUpsertServiceArgs[] | false, alias?: string  } 
  | { name: 'deleteService', args?: MutationDeleteServiceArgs[] | false, alias?: string  } 
  | { name: 'deleteManyServices', args?: MutationDeleteManyServicesArgs[] | false, alias?: string  } 
  | { name: 'createUserCourseProgress', args?: MutationCreateUserCourseProgressArgs[] | false, alias?: string  } 
  | { name: 'updateUserCourseProgress', args?: MutationUpdateUserCourseProgressArgs[] | false, alias?: string  } 
  | { name: 'updateManyUserCourseProgresses', args?: MutationUpdateManyUserCourseProgressesArgs[] | false, alias?: string  } 
  | { name: 'upsertUserCourseProgress', args?: MutationUpsertUserCourseProgressArgs[] | false, alias?: string  } 
  | { name: 'deleteUserCourseProgress', args?: MutationDeleteUserCourseProgressArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUserCourseProgresses', args?: MutationDeleteManyUserCourseProgressesArgs[] | false, alias?: string  } 
  | { name: 'createUserCourseServiceProgress', args?: MutationCreateUserCourseServiceProgressArgs[] | false, alias?: string  } 
  | { name: 'updateUserCourseServiceProgress', args?: MutationUpdateUserCourseServiceProgressArgs[] | false, alias?: string  } 
  | { name: 'updateManyUserCourseServiceProgresses', args?: MutationUpdateManyUserCourseServiceProgressesArgs[] | false, alias?: string  } 
  | { name: 'upsertUserCourseServiceProgress', args?: MutationUpsertUserCourseServiceProgressArgs[] | false, alias?: string  } 
  | { name: 'deleteUserCourseServiceProgress', args?: MutationDeleteUserCourseServiceProgressArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUserCourseServiceProgresses', args?: MutationDeleteManyUserCourseServiceProgressesArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createUser'
  | 'updateUser'
  | 'updateManyUsers'
  | 'upsertUser'
  | 'deleteUser'
  | 'deleteManyUsers'
  | 'createCourse'
  | 'updateCourse'
  | 'updateManyCourses'
  | 'upsertCourse'
  | 'deleteCourse'
  | 'deleteManyCourses'
  | 'createCourseAlias'
  | 'updateCourseAlias'
  | 'updateManyCourseAliases'
  | 'upsertCourseAlias'
  | 'deleteCourseAlias'
  | 'deleteManyCourseAliases'
  | 'createCompletion'
  | 'updateCompletion'
  | 'updateManyCompletions'
  | 'upsertCompletion'
  | 'deleteCompletion'
  | 'deleteManyCompletions'
  | 'createCompletionRegistered'
  | 'updateCompletionRegistered'
  | 'updateManyCompletionRegistereds'
  | 'upsertCompletionRegistered'
  | 'deleteCompletionRegistered'
  | 'deleteManyCompletionRegistereds'
  | 'createService'
  | 'updateService'
  | 'updateManyServices'
  | 'upsertService'
  | 'deleteService'
  | 'deleteManyServices'
  | 'createUserCourseProgress'
  | 'updateUserCourseProgress'
  | 'updateManyUserCourseProgresses'
  | 'upsertUserCourseProgress'
  | 'deleteUserCourseProgress'
  | 'deleteManyUserCourseProgresses'
  | 'createUserCourseServiceProgress'
  | 'updateUserCourseServiceProgress'
  | 'updateManyUserCourseServiceProgresses'
  | 'upsertUserCourseServiceProgress'
  | 'deleteUserCourseServiceProgress'
  | 'deleteManyUserCourseServiceProgresses'


type MutationCreateUserArgs =
  | 'data'
type MutationUpdateUserArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUsersArgs =
  | 'data'
  | 'where'
type MutationUpsertUserArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserArgs =
  | 'where'
type MutationDeleteManyUsersArgs =
  | 'where'
type MutationCreateCourseArgs =
  | 'data'
type MutationUpdateCourseArgs =
  | 'data'
  | 'where'
type MutationUpdateManyCoursesArgs =
  | 'data'
  | 'where'
type MutationUpsertCourseArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteCourseArgs =
  | 'where'
type MutationDeleteManyCoursesArgs =
  | 'where'
type MutationCreateCourseAliasArgs =
  | 'data'
type MutationUpdateCourseAliasArgs =
  | 'data'
  | 'where'
type MutationUpdateManyCourseAliasesArgs =
  | 'data'
  | 'where'
type MutationUpsertCourseAliasArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteCourseAliasArgs =
  | 'where'
type MutationDeleteManyCourseAliasesArgs =
  | 'where'
type MutationCreateCompletionArgs =
  | 'data'
type MutationUpdateCompletionArgs =
  | 'data'
  | 'where'
type MutationUpdateManyCompletionsArgs =
  | 'data'
  | 'where'
type MutationUpsertCompletionArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteCompletionArgs =
  | 'where'
type MutationDeleteManyCompletionsArgs =
  | 'where'
type MutationCreateCompletionRegisteredArgs =
  | 'data'
type MutationUpdateCompletionRegisteredArgs =
  | 'data'
  | 'where'
type MutationUpdateManyCompletionRegisteredsArgs =
  | 'data'
  | 'where'
type MutationUpsertCompletionRegisteredArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteCompletionRegisteredArgs =
  | 'where'
type MutationDeleteManyCompletionRegisteredsArgs =
  | 'where'
type MutationCreateServiceArgs =
  | 'data'
type MutationUpdateServiceArgs =
  | 'data'
  | 'where'
type MutationUpdateManyServicesArgs =
  | 'data'
  | 'where'
type MutationUpsertServiceArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteServiceArgs =
  | 'where'
type MutationDeleteManyServicesArgs =
  | 'where'
type MutationCreateUserCourseProgressArgs =
  | 'data'
type MutationUpdateUserCourseProgressArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUserCourseProgressesArgs =
  | 'data'
  | 'where'
type MutationUpsertUserCourseProgressArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserCourseProgressArgs =
  | 'where'
type MutationDeleteManyUserCourseProgressesArgs =
  | 'where'
type MutationCreateUserCourseServiceProgressArgs =
  | 'data'
type MutationUpdateUserCourseServiceProgressArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUserCourseServiceProgressesArgs =
  | 'data'
  | 'where'
type MutationUpsertUserCourseServiceProgressArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserCourseServiceProgressArgs =
  | 'where'
type MutationDeleteManyUserCourseServiceProgressesArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createUser: {
    type: 'User'
    args: Record<MutationCreateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  updateUser: {
    type: 'User'
    args: Record<MutationUpdateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateInput, where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updateManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateManyMutationInput, where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUser: {
    type: 'User'
    args: Record<MutationUpsertUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput, create: UserCreateInput, update: UserUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  deleteUser: {
    type: 'User'
    args: Record<MutationDeleteUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  deleteManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createCourse: {
    type: 'Course'
    args: Record<MutationCreateCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CourseCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course> | prisma.Course
  }
  updateCourse: {
    type: 'Course'
    args: Record<MutationUpdateCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CourseUpdateInput, where: CourseWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course | null> | prisma.Course | null
  }
  updateManyCourses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyCoursesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CourseUpdateManyMutationInput, where?: CourseWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertCourse: {
    type: 'Course'
    args: Record<MutationUpsertCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CourseWhereUniqueInput, create: CourseCreateInput, update: CourseUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course> | prisma.Course
  }
  deleteCourse: {
    type: 'Course'
    args: Record<MutationDeleteCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CourseWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course | null> | prisma.Course | null
  }
  deleteManyCourses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyCoursesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: CourseWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createCourseAlias: {
    type: 'CourseAlias'
    args: Record<MutationCreateCourseAliasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CourseAliasCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseAlias> | prisma.CourseAlias
  }
  updateCourseAlias: {
    type: 'CourseAlias'
    args: Record<MutationUpdateCourseAliasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CourseAliasUpdateInput, where: CourseAliasWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseAlias | null> | prisma.CourseAlias | null
  }
  updateManyCourseAliases: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyCourseAliasesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CourseAliasUpdateManyMutationInput, where?: CourseAliasWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertCourseAlias: {
    type: 'CourseAlias'
    args: Record<MutationUpsertCourseAliasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CourseAliasWhereUniqueInput, create: CourseAliasCreateInput, update: CourseAliasUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseAlias> | prisma.CourseAlias
  }
  deleteCourseAlias: {
    type: 'CourseAlias'
    args: Record<MutationDeleteCourseAliasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CourseAliasWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseAlias | null> | prisma.CourseAlias | null
  }
  deleteManyCourseAliases: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyCourseAliasesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: CourseAliasWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createCompletion: {
    type: 'Completion'
    args: Record<MutationCreateCompletionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CompletionCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion> | prisma.Completion
  }
  updateCompletion: {
    type: 'Completion'
    args: Record<MutationUpdateCompletionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CompletionUpdateInput, where: CompletionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion | null> | prisma.Completion | null
  }
  updateManyCompletions: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyCompletionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CompletionUpdateManyMutationInput, where?: CompletionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertCompletion: {
    type: 'Completion'
    args: Record<MutationUpsertCompletionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CompletionWhereUniqueInput, create: CompletionCreateInput, update: CompletionUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion> | prisma.Completion
  }
  deleteCompletion: {
    type: 'Completion'
    args: Record<MutationDeleteCompletionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CompletionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion | null> | prisma.Completion | null
  }
  deleteManyCompletions: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyCompletionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: CompletionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createCompletionRegistered: {
    type: 'CompletionRegistered'
    args: Record<MutationCreateCompletionRegisteredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CompletionRegisteredCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered> | prisma.CompletionRegistered
  }
  updateCompletionRegistered: {
    type: 'CompletionRegistered'
    args: Record<MutationUpdateCompletionRegisteredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CompletionRegisteredUpdateInput, where: CompletionRegisteredWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered | null> | prisma.CompletionRegistered | null
  }
  updateManyCompletionRegistereds: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyCompletionRegisteredsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CompletionRegisteredUpdateManyMutationInput, where?: CompletionRegisteredWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertCompletionRegistered: {
    type: 'CompletionRegistered'
    args: Record<MutationUpsertCompletionRegisteredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CompletionRegisteredWhereUniqueInput, create: CompletionRegisteredCreateInput, update: CompletionRegisteredUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered> | prisma.CompletionRegistered
  }
  deleteCompletionRegistered: {
    type: 'CompletionRegistered'
    args: Record<MutationDeleteCompletionRegisteredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CompletionRegisteredWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered | null> | prisma.CompletionRegistered | null
  }
  deleteManyCompletionRegistereds: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyCompletionRegisteredsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: CompletionRegisteredWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createService: {
    type: 'Service'
    args: Record<MutationCreateServiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ServiceCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service> | prisma.Service
  }
  updateService: {
    type: 'Service'
    args: Record<MutationUpdateServiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ServiceUpdateInput, where: ServiceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service | null> | prisma.Service | null
  }
  updateManyServices: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyServicesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ServiceUpdateManyMutationInput, where?: ServiceWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertService: {
    type: 'Service'
    args: Record<MutationUpsertServiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ServiceWhereUniqueInput, create: ServiceCreateInput, update: ServiceUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service> | prisma.Service
  }
  deleteService: {
    type: 'Service'
    args: Record<MutationDeleteServiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ServiceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service | null> | prisma.Service | null
  }
  deleteManyServices: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyServicesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ServiceWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createUserCourseProgress: {
    type: 'UserCourseProgress'
    args: Record<MutationCreateUserCourseProgressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCourseProgressCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseProgress> | prisma.UserCourseProgress
  }
  updateUserCourseProgress: {
    type: 'UserCourseProgress'
    args: Record<MutationUpdateUserCourseProgressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCourseProgressUpdateInput, where: UserCourseProgressWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseProgress | null> | prisma.UserCourseProgress | null
  }
  updateManyUserCourseProgresses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUserCourseProgressesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCourseProgressUpdateManyMutationInput, where?: UserCourseProgressWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUserCourseProgress: {
    type: 'UserCourseProgress'
    args: Record<MutationUpsertUserCourseProgressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserCourseProgressWhereUniqueInput, create: UserCourseProgressCreateInput, update: UserCourseProgressUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseProgress> | prisma.UserCourseProgress
  }
  deleteUserCourseProgress: {
    type: 'UserCourseProgress'
    args: Record<MutationDeleteUserCourseProgressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserCourseProgressWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseProgress | null> | prisma.UserCourseProgress | null
  }
  deleteManyUserCourseProgresses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUserCourseProgressesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserCourseProgressWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createUserCourseServiceProgress: {
    type: 'UserCourseServiceProgress'
    args: Record<MutationCreateUserCourseServiceProgressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCourseServiceProgressCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseServiceProgress> | prisma.UserCourseServiceProgress
  }
  updateUserCourseServiceProgress: {
    type: 'UserCourseServiceProgress'
    args: Record<MutationUpdateUserCourseServiceProgressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCourseServiceProgressUpdateInput, where: UserCourseServiceProgressWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseServiceProgress | null> | prisma.UserCourseServiceProgress | null
  }
  updateManyUserCourseServiceProgresses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUserCourseServiceProgressesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCourseServiceProgressUpdateManyMutationInput, where?: UserCourseServiceProgressWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUserCourseServiceProgress: {
    type: 'UserCourseServiceProgress'
    args: Record<MutationUpsertUserCourseServiceProgressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserCourseServiceProgressWhereUniqueInput, create: UserCourseServiceProgressCreateInput, update: UserCourseServiceProgressUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseServiceProgress> | prisma.UserCourseServiceProgress
  }
  deleteUserCourseServiceProgress: {
    type: 'UserCourseServiceProgress'
    args: Record<MutationDeleteUserCourseServiceProgressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserCourseServiceProgressWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseServiceProgress | null> | prisma.UserCourseServiceProgress | null
  }
  deleteManyUserCourseServiceProgresses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUserCourseServiceProgressesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserCourseServiceProgressWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'user', args?: SubscriptionUserArgs[] | false, alias?: string  } 
  | { name: 'course', args?: SubscriptionCourseArgs[] | false, alias?: string  } 
  | { name: 'courseAlias', args?: SubscriptionCourseAliasArgs[] | false, alias?: string  } 
  | { name: 'completion', args?: SubscriptionCompletionArgs[] | false, alias?: string  } 
  | { name: 'completionRegistered', args?: SubscriptionCompletionRegisteredArgs[] | false, alias?: string  } 
  | { name: 'service', args?: SubscriptionServiceArgs[] | false, alias?: string  } 
  | { name: 'userCourseProgress', args?: SubscriptionUserCourseProgressArgs[] | false, alias?: string  } 
  | { name: 'userCourseServiceProgress', args?: SubscriptionUserCourseServiceProgressArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'user'
  | 'course'
  | 'courseAlias'
  | 'completion'
  | 'completionRegistered'
  | 'service'
  | 'userCourseProgress'
  | 'userCourseServiceProgress'


type SubscriptionUserArgs =
  | 'where'
type SubscriptionCourseArgs =
  | 'where'
type SubscriptionCourseAliasArgs =
  | 'where'
type SubscriptionCompletionArgs =
  | 'where'
type SubscriptionCompletionRegisteredArgs =
  | 'where'
type SubscriptionServiceArgs =
  | 'where'
type SubscriptionUserCourseProgressArgs =
  | 'where'
type SubscriptionUserCourseServiceProgressArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  user: {
    type: 'UserSubscriptionPayload'
    args: Record<SubscriptionUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserSubscriptionPayload | null> | prisma.UserSubscriptionPayload | null
  }
  course: {
    type: 'CourseSubscriptionPayload'
    args: Record<SubscriptionCourseArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: CourseSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseSubscriptionPayload | null> | prisma.CourseSubscriptionPayload | null
  }
  courseAlias: {
    type: 'CourseAliasSubscriptionPayload'
    args: Record<SubscriptionCourseAliasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: CourseAliasSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseAliasSubscriptionPayload | null> | prisma.CourseAliasSubscriptionPayload | null
  }
  completion: {
    type: 'CompletionSubscriptionPayload'
    args: Record<SubscriptionCompletionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: CompletionSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionSubscriptionPayload | null> | prisma.CompletionSubscriptionPayload | null
  }
  completionRegistered: {
    type: 'CompletionRegisteredSubscriptionPayload'
    args: Record<SubscriptionCompletionRegisteredArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: CompletionRegisteredSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegisteredSubscriptionPayload | null> | prisma.CompletionRegisteredSubscriptionPayload | null
  }
  service: {
    type: 'ServiceSubscriptionPayload'
    args: Record<SubscriptionServiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ServiceSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceSubscriptionPayload | null> | prisma.ServiceSubscriptionPayload | null
  }
  userCourseProgress: {
    type: 'UserCourseProgressSubscriptionPayload'
    args: Record<SubscriptionUserCourseProgressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserCourseProgressSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseProgressSubscriptionPayload | null> | prisma.UserCourseProgressSubscriptionPayload | null
  }
  userCourseServiceProgress: {
    type: 'UserCourseServiceProgressSubscriptionPayload'
    args: Record<SubscriptionUserCourseServiceProgressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserCourseServiceProgressSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseServiceProgressSubscriptionPayload | null> | prisma.UserCourseServiceProgressSubscriptionPayload | null
  }
}
  

// Types for UserSubscriptionPayload

type UserSubscriptionPayloadObject =
  | UserSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPreviousValues | null> | prisma.UserPreviousValues | null
  }
}
  

// Types for UserPreviousValues

type UserPreviousValuesObject =
  | UserPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'upstream_id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'first_name', args?: [] | false, alias?: string  } 
  | { name: 'last_name', args?: [] | false, alias?: string  } 
  | { name: 'username', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'administrator', args?: [] | false, alias?: string  } 
  | { name: 'student_number', args?: [] | false, alias?: string  } 
  | { name: 'real_student_number', args?: [] | false, alias?: string  } 

type UserPreviousValuesFields =
  | 'id'
  | 'upstream_id'
  | 'created_at'
  | 'updated_at'
  | 'first_name'
  | 'last_name'
  | 'username'
  | 'email'
  | 'administrator'
  | 'student_number'
  | 'real_student_number'



  

export interface UserPreviousValuesFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  upstream_id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  first_name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  last_name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  username: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  administrator: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  student_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  real_student_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for CourseSubscriptionPayload

type CourseSubscriptionPayloadObject =
  | CourseSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type CourseSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface CourseSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CourseSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Course'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CourseSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Course | null> | prisma.Course | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'CoursePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CourseSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CoursePreviousValues | null> | prisma.CoursePreviousValues | null
  }
}
  

// Types for CoursePreviousValues

type CoursePreviousValuesObject =
  | CoursePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'slug', args?: [] | false, alias?: string  } 

type CoursePreviousValuesFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'name'
  | 'slug'



  

export interface CoursePreviousValuesFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  slug: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CourseAliasSubscriptionPayload

type CourseAliasSubscriptionPayloadObject =
  | CourseAliasSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type CourseAliasSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface CourseAliasSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CourseAliasSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'CourseAlias'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CourseAliasSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseAlias | null> | prisma.CourseAlias | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'CourseAliasPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CourseAliasSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CourseAliasPreviousValues | null> | prisma.CourseAliasPreviousValues | null
  }
}
  

// Types for CourseAliasPreviousValues

type CourseAliasPreviousValuesObject =
  | CourseAliasPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'course_code', args?: [] | false, alias?: string  } 

type CourseAliasPreviousValuesFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'course_code'



  

export interface CourseAliasPreviousValuesFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  course_code: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CompletionSubscriptionPayload

type CompletionSubscriptionPayloadObject =
  | CompletionSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type CompletionSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface CompletionSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Completion'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CompletionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Completion | null> | prisma.Completion | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'CompletionPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CompletionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionPreviousValues | null> | prisma.CompletionPreviousValues | null
  }
}
  

// Types for CompletionPreviousValues

type CompletionPreviousValuesObject =
  | CompletionPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'user_upstream_id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'student_number', args?: [] | false, alias?: string  } 
  | { name: 'completion_language', args?: [] | false, alias?: string  } 

type CompletionPreviousValuesFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'user_upstream_id'
  | 'email'
  | 'student_number'
  | 'completion_language'



  

export interface CompletionPreviousValuesFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  user_upstream_id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  student_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  completion_language: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for CompletionRegisteredSubscriptionPayload

type CompletionRegisteredSubscriptionPayloadObject =
  | CompletionRegisteredSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type CompletionRegisteredSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface CompletionRegisteredSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CompletionRegisteredSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'CompletionRegistered'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CompletionRegisteredSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegistered | null> | prisma.CompletionRegistered | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'CompletionRegisteredPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CompletionRegisteredSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CompletionRegisteredPreviousValues | null> | prisma.CompletionRegisteredPreviousValues | null
  }
}
  

// Types for CompletionRegisteredPreviousValues

type CompletionRegisteredPreviousValuesObject =
  | CompletionRegisteredPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'real_student_number', args?: [] | false, alias?: string  } 
  | { name: 'organisation', args?: [] | false, alias?: string  } 

type CompletionRegisteredPreviousValuesFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'real_student_number'
  | 'organisation'



  

export interface CompletionRegisteredPreviousValuesFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  real_student_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  organisation: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ServiceSubscriptionPayload

type ServiceSubscriptionPayloadObject =
  | ServiceSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ServiceSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ServiceSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ServiceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Service'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ServiceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Service | null> | prisma.Service | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ServicePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ServiceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServicePreviousValues | null> | prisma.ServicePreviousValues | null
  }
}
  

// Types for ServicePreviousValues

type ServicePreviousValuesObject =
  | ServicePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'created_at', args?: [] | false, alias?: string  } 
  | { name: 'updated_at', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type ServicePreviousValuesFields =
  | 'id'
  | 'created_at'
  | 'updated_at'
  | 'url'



  

export interface ServicePreviousValuesFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  created_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updated_at: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for UserCourseProgressSubscriptionPayload

type UserCourseProgressSubscriptionPayloadObject =
  | UserCourseProgressSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserCourseProgressSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserCourseProgressSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserCourseProgressSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'UserCourseProgress'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserCourseProgressSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseProgress | null> | prisma.UserCourseProgress | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserCourseProgressPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserCourseProgressSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseProgressPreviousValues | null> | prisma.UserCourseProgressPreviousValues | null
  }
}
  

// Types for UserCourseProgressPreviousValues

type UserCourseProgressPreviousValuesObject =
  | UserCourseProgressPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'progress', args?: [] | false, alias?: string  } 

type UserCourseProgressPreviousValuesFields =
  | 'id'
  | 'progress'



  

export interface UserCourseProgressPreviousValuesFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  progress: {
    type: 'Json'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for UserCourseServiceProgressSubscriptionPayload

type UserCourseServiceProgressSubscriptionPayloadObject =
  | UserCourseServiceProgressSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserCourseServiceProgressSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserCourseServiceProgressSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserCourseServiceProgressSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'UserCourseServiceProgress'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserCourseServiceProgressSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseServiceProgress | null> | prisma.UserCourseServiceProgress | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserCourseServiceProgressPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserCourseServiceProgressSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserCourseServiceProgressPreviousValues | null> | prisma.UserCourseServiceProgressPreviousValues | null
  }
}
  

// Types for UserCourseServiceProgressPreviousValues

type UserCourseServiceProgressPreviousValuesObject =
  | UserCourseServiceProgressPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'progress', args?: [] | false, alias?: string  } 

type UserCourseServiceProgressPreviousValuesFields =
  | 'id'
  | 'progress'



  

export interface UserCourseServiceProgressPreviousValuesFieldDetails {
  id: {
    type: 'UUID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  progress: {
    type: 'Json'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  


export interface UserWhereUniqueInput {
  id?: undefined | null
  upstream_id?: number | null
  username?: string | null
}
export type UserWhereUniqueInputInputObject =
  | Extract<keyof UserWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'username', alias?: string  } 
  
export interface CompletionWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  user_upstream_id?: number | null
  user_upstream_id_not?: number | null
  user_upstream_id_in?: number[]
  user_upstream_id_not_in?: number[]
  user_upstream_id_lt?: number | null
  user_upstream_id_lte?: number | null
  user_upstream_id_gt?: number | null
  user_upstream_id_gte?: number | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  student_number?: string | null
  student_number_not?: string | null
  student_number_in?: string[]
  student_number_not_in?: string[]
  student_number_lt?: string | null
  student_number_lte?: string | null
  student_number_gt?: string | null
  student_number_gte?: string | null
  student_number_contains?: string | null
  student_number_not_contains?: string | null
  student_number_starts_with?: string | null
  student_number_not_starts_with?: string | null
  student_number_ends_with?: string | null
  student_number_not_ends_with?: string | null
  user?: UserWhereInput | null
  course?: CourseWhereInput | null
  completion_language?: string | null
  completion_language_not?: string | null
  completion_language_in?: string[]
  completion_language_not_in?: string[]
  completion_language_lt?: string | null
  completion_language_lte?: string | null
  completion_language_gt?: string | null
  completion_language_gte?: string | null
  completion_language_contains?: string | null
  completion_language_not_contains?: string | null
  completion_language_starts_with?: string | null
  completion_language_not_starts_with?: string | null
  completion_language_ends_with?: string | null
  completion_language_not_ends_with?: string | null
  AND?: CompletionWhereInput[]
  OR?: CompletionWhereInput[]
  NOT?: CompletionWhereInput[]
}
export type CompletionWhereInputInputObject =
  | Extract<keyof CompletionWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'user_upstream_id_not', alias?: string  } 
  | { name: 'user_upstream_id_in', alias?: string  } 
  | { name: 'user_upstream_id_not_in', alias?: string  } 
  | { name: 'user_upstream_id_lt', alias?: string  } 
  | { name: 'user_upstream_id_lte', alias?: string  } 
  | { name: 'user_upstream_id_gt', alias?: string  } 
  | { name: 'user_upstream_id_gte', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'student_number_not', alias?: string  } 
  | { name: 'student_number_in', alias?: string  } 
  | { name: 'student_number_not_in', alias?: string  } 
  | { name: 'student_number_lt', alias?: string  } 
  | { name: 'student_number_lte', alias?: string  } 
  | { name: 'student_number_gt', alias?: string  } 
  | { name: 'student_number_gte', alias?: string  } 
  | { name: 'student_number_contains', alias?: string  } 
  | { name: 'student_number_not_contains', alias?: string  } 
  | { name: 'student_number_starts_with', alias?: string  } 
  | { name: 'student_number_not_starts_with', alias?: string  } 
  | { name: 'student_number_ends_with', alias?: string  } 
  | { name: 'student_number_not_ends_with', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  | { name: 'completion_language_not', alias?: string  } 
  | { name: 'completion_language_in', alias?: string  } 
  | { name: 'completion_language_not_in', alias?: string  } 
  | { name: 'completion_language_lt', alias?: string  } 
  | { name: 'completion_language_lte', alias?: string  } 
  | { name: 'completion_language_gt', alias?: string  } 
  | { name: 'completion_language_gte', alias?: string  } 
  | { name: 'completion_language_contains', alias?: string  } 
  | { name: 'completion_language_not_contains', alias?: string  } 
  | { name: 'completion_language_starts_with', alias?: string  } 
  | { name: 'completion_language_not_starts_with', alias?: string  } 
  | { name: 'completion_language_ends_with', alias?: string  } 
  | { name: 'completion_language_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  upstream_id?: number | null
  upstream_id_not?: number | null
  upstream_id_in?: number[]
  upstream_id_not_in?: number[]
  upstream_id_lt?: number | null
  upstream_id_lte?: number | null
  upstream_id_gt?: number | null
  upstream_id_gte?: number | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  first_name?: string | null
  first_name_not?: string | null
  first_name_in?: string[]
  first_name_not_in?: string[]
  first_name_lt?: string | null
  first_name_lte?: string | null
  first_name_gt?: string | null
  first_name_gte?: string | null
  first_name_contains?: string | null
  first_name_not_contains?: string | null
  first_name_starts_with?: string | null
  first_name_not_starts_with?: string | null
  first_name_ends_with?: string | null
  first_name_not_ends_with?: string | null
  last_name?: string | null
  last_name_not?: string | null
  last_name_in?: string[]
  last_name_not_in?: string[]
  last_name_lt?: string | null
  last_name_lte?: string | null
  last_name_gt?: string | null
  last_name_gte?: string | null
  last_name_contains?: string | null
  last_name_not_contains?: string | null
  last_name_starts_with?: string | null
  last_name_not_starts_with?: string | null
  last_name_ends_with?: string | null
  last_name_not_ends_with?: string | null
  username?: string | null
  username_not?: string | null
  username_in?: string[]
  username_not_in?: string[]
  username_lt?: string | null
  username_lte?: string | null
  username_gt?: string | null
  username_gte?: string | null
  username_contains?: string | null
  username_not_contains?: string | null
  username_starts_with?: string | null
  username_not_starts_with?: string | null
  username_ends_with?: string | null
  username_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  administrator?: boolean | null
  administrator_not?: boolean | null
  student_number?: string | null
  student_number_not?: string | null
  student_number_in?: string[]
  student_number_not_in?: string[]
  student_number_lt?: string | null
  student_number_lte?: string | null
  student_number_gt?: string | null
  student_number_gte?: string | null
  student_number_contains?: string | null
  student_number_not_contains?: string | null
  student_number_starts_with?: string | null
  student_number_not_starts_with?: string | null
  student_number_ends_with?: string | null
  student_number_not_ends_with?: string | null
  real_student_number?: string | null
  real_student_number_not?: string | null
  real_student_number_in?: string[]
  real_student_number_not_in?: string[]
  real_student_number_lt?: string | null
  real_student_number_lte?: string | null
  real_student_number_gt?: string | null
  real_student_number_gte?: string | null
  real_student_number_contains?: string | null
  real_student_number_not_contains?: string | null
  real_student_number_starts_with?: string | null
  real_student_number_not_starts_with?: string | null
  real_student_number_ends_with?: string | null
  real_student_number_not_ends_with?: string | null
  completions_every?: CompletionWhereInput | null
  completions_some?: CompletionWhereInput | null
  completions_none?: CompletionWhereInput | null
  registered_completions_every?: CompletionRegisteredWhereInput | null
  registered_completions_some?: CompletionRegisteredWhereInput | null
  registered_completions_none?: CompletionRegisteredWhereInput | null
  AND?: UserWhereInput[]
  OR?: UserWhereInput[]
  NOT?: UserWhereInput[]
}
export type UserWhereInputInputObject =
  | Extract<keyof UserWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'upstream_id_not', alias?: string  } 
  | { name: 'upstream_id_in', alias?: string  } 
  | { name: 'upstream_id_not_in', alias?: string  } 
  | { name: 'upstream_id_lt', alias?: string  } 
  | { name: 'upstream_id_lte', alias?: string  } 
  | { name: 'upstream_id_gt', alias?: string  } 
  | { name: 'upstream_id_gte', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'first_name_not', alias?: string  } 
  | { name: 'first_name_in', alias?: string  } 
  | { name: 'first_name_not_in', alias?: string  } 
  | { name: 'first_name_lt', alias?: string  } 
  | { name: 'first_name_lte', alias?: string  } 
  | { name: 'first_name_gt', alias?: string  } 
  | { name: 'first_name_gte', alias?: string  } 
  | { name: 'first_name_contains', alias?: string  } 
  | { name: 'first_name_not_contains', alias?: string  } 
  | { name: 'first_name_starts_with', alias?: string  } 
  | { name: 'first_name_not_starts_with', alias?: string  } 
  | { name: 'first_name_ends_with', alias?: string  } 
  | { name: 'first_name_not_ends_with', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'last_name_not', alias?: string  } 
  | { name: 'last_name_in', alias?: string  } 
  | { name: 'last_name_not_in', alias?: string  } 
  | { name: 'last_name_lt', alias?: string  } 
  | { name: 'last_name_lte', alias?: string  } 
  | { name: 'last_name_gt', alias?: string  } 
  | { name: 'last_name_gte', alias?: string  } 
  | { name: 'last_name_contains', alias?: string  } 
  | { name: 'last_name_not_contains', alias?: string  } 
  | { name: 'last_name_starts_with', alias?: string  } 
  | { name: 'last_name_not_starts_with', alias?: string  } 
  | { name: 'last_name_ends_with', alias?: string  } 
  | { name: 'last_name_not_ends_with', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'username_not', alias?: string  } 
  | { name: 'username_in', alias?: string  } 
  | { name: 'username_not_in', alias?: string  } 
  | { name: 'username_lt', alias?: string  } 
  | { name: 'username_lte', alias?: string  } 
  | { name: 'username_gt', alias?: string  } 
  | { name: 'username_gte', alias?: string  } 
  | { name: 'username_contains', alias?: string  } 
  | { name: 'username_not_contains', alias?: string  } 
  | { name: 'username_starts_with', alias?: string  } 
  | { name: 'username_not_starts_with', alias?: string  } 
  | { name: 'username_ends_with', alias?: string  } 
  | { name: 'username_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'administrator_not', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'student_number_not', alias?: string  } 
  | { name: 'student_number_in', alias?: string  } 
  | { name: 'student_number_not_in', alias?: string  } 
  | { name: 'student_number_lt', alias?: string  } 
  | { name: 'student_number_lte', alias?: string  } 
  | { name: 'student_number_gt', alias?: string  } 
  | { name: 'student_number_gte', alias?: string  } 
  | { name: 'student_number_contains', alias?: string  } 
  | { name: 'student_number_not_contains', alias?: string  } 
  | { name: 'student_number_starts_with', alias?: string  } 
  | { name: 'student_number_not_starts_with', alias?: string  } 
  | { name: 'student_number_ends_with', alias?: string  } 
  | { name: 'student_number_not_ends_with', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'real_student_number_not', alias?: string  } 
  | { name: 'real_student_number_in', alias?: string  } 
  | { name: 'real_student_number_not_in', alias?: string  } 
  | { name: 'real_student_number_lt', alias?: string  } 
  | { name: 'real_student_number_lte', alias?: string  } 
  | { name: 'real_student_number_gt', alias?: string  } 
  | { name: 'real_student_number_gte', alias?: string  } 
  | { name: 'real_student_number_contains', alias?: string  } 
  | { name: 'real_student_number_not_contains', alias?: string  } 
  | { name: 'real_student_number_starts_with', alias?: string  } 
  | { name: 'real_student_number_not_starts_with', alias?: string  } 
  | { name: 'real_student_number_ends_with', alias?: string  } 
  | { name: 'real_student_number_not_ends_with', alias?: string  } 
  | { name: 'completions_every', alias?: string  } 
  | { name: 'completions_some', alias?: string  } 
  | { name: 'completions_none', alias?: string  } 
  | { name: 'registered_completions_every', alias?: string  } 
  | { name: 'registered_completions_some', alias?: string  } 
  | { name: 'registered_completions_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CompletionRegisteredWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  user?: UserWhereInput | null
  course?: CourseWhereInput | null
  real_student_number?: string | null
  real_student_number_not?: string | null
  real_student_number_in?: string[]
  real_student_number_not_in?: string[]
  real_student_number_lt?: string | null
  real_student_number_lte?: string | null
  real_student_number_gt?: string | null
  real_student_number_gte?: string | null
  real_student_number_contains?: string | null
  real_student_number_not_contains?: string | null
  real_student_number_starts_with?: string | null
  real_student_number_not_starts_with?: string | null
  real_student_number_ends_with?: string | null
  real_student_number_not_ends_with?: string | null
  organisation?: string | null
  organisation_not?: string | null
  organisation_in?: string[]
  organisation_not_in?: string[]
  organisation_lt?: string | null
  organisation_lte?: string | null
  organisation_gt?: string | null
  organisation_gte?: string | null
  organisation_contains?: string | null
  organisation_not_contains?: string | null
  organisation_starts_with?: string | null
  organisation_not_starts_with?: string | null
  organisation_ends_with?: string | null
  organisation_not_ends_with?: string | null
  completion?: CompletionWhereInput | null
  AND?: CompletionRegisteredWhereInput[]
  OR?: CompletionRegisteredWhereInput[]
  NOT?: CompletionRegisteredWhereInput[]
}
export type CompletionRegisteredWhereInputInputObject =
  | Extract<keyof CompletionRegisteredWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'real_student_number_not', alias?: string  } 
  | { name: 'real_student_number_in', alias?: string  } 
  | { name: 'real_student_number_not_in', alias?: string  } 
  | { name: 'real_student_number_lt', alias?: string  } 
  | { name: 'real_student_number_lte', alias?: string  } 
  | { name: 'real_student_number_gt', alias?: string  } 
  | { name: 'real_student_number_gte', alias?: string  } 
  | { name: 'real_student_number_contains', alias?: string  } 
  | { name: 'real_student_number_not_contains', alias?: string  } 
  | { name: 'real_student_number_starts_with', alias?: string  } 
  | { name: 'real_student_number_not_starts_with', alias?: string  } 
  | { name: 'real_student_number_ends_with', alias?: string  } 
  | { name: 'real_student_number_not_ends_with', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'organisation_not', alias?: string  } 
  | { name: 'organisation_in', alias?: string  } 
  | { name: 'organisation_not_in', alias?: string  } 
  | { name: 'organisation_lt', alias?: string  } 
  | { name: 'organisation_lte', alias?: string  } 
  | { name: 'organisation_gt', alias?: string  } 
  | { name: 'organisation_gte', alias?: string  } 
  | { name: 'organisation_contains', alias?: string  } 
  | { name: 'organisation_not_contains', alias?: string  } 
  | { name: 'organisation_starts_with', alias?: string  } 
  | { name: 'organisation_not_starts_with', alias?: string  } 
  | { name: 'organisation_ends_with', alias?: string  } 
  | { name: 'organisation_not_ends_with', alias?: string  } 
  | { name: 'completion', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CourseWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  slug?: string | null
  slug_not?: string | null
  slug_in?: string[]
  slug_not_in?: string[]
  slug_lt?: string | null
  slug_lte?: string | null
  slug_gt?: string | null
  slug_gte?: string | null
  slug_contains?: string | null
  slug_not_contains?: string | null
  slug_starts_with?: string | null
  slug_not_starts_with?: string | null
  slug_ends_with?: string | null
  slug_not_ends_with?: string | null
  open_university_courses_every?: CourseAliasWhereInput | null
  open_university_courses_some?: CourseAliasWhereInput | null
  open_university_courses_none?: CourseAliasWhereInput | null
  AND?: CourseWhereInput[]
  OR?: CourseWhereInput[]
  NOT?: CourseWhereInput[]
}
export type CourseWhereInputInputObject =
  | Extract<keyof CourseWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'slug_not', alias?: string  } 
  | { name: 'slug_in', alias?: string  } 
  | { name: 'slug_not_in', alias?: string  } 
  | { name: 'slug_lt', alias?: string  } 
  | { name: 'slug_lte', alias?: string  } 
  | { name: 'slug_gt', alias?: string  } 
  | { name: 'slug_gte', alias?: string  } 
  | { name: 'slug_contains', alias?: string  } 
  | { name: 'slug_not_contains', alias?: string  } 
  | { name: 'slug_starts_with', alias?: string  } 
  | { name: 'slug_not_starts_with', alias?: string  } 
  | { name: 'slug_ends_with', alias?: string  } 
  | { name: 'slug_not_ends_with', alias?: string  } 
  | { name: 'open_university_courses_every', alias?: string  } 
  | { name: 'open_university_courses_some', alias?: string  } 
  | { name: 'open_university_courses_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CourseAliasWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  course_code?: string | null
  course_code_not?: string | null
  course_code_in?: string[]
  course_code_not_in?: string[]
  course_code_lt?: string | null
  course_code_lte?: string | null
  course_code_gt?: string | null
  course_code_gte?: string | null
  course_code_contains?: string | null
  course_code_not_contains?: string | null
  course_code_starts_with?: string | null
  course_code_not_starts_with?: string | null
  course_code_ends_with?: string | null
  course_code_not_ends_with?: string | null
  course?: CourseWhereInput | null
  AND?: CourseAliasWhereInput[]
  OR?: CourseAliasWhereInput[]
  NOT?: CourseAliasWhereInput[]
}
export type CourseAliasWhereInputInputObject =
  | Extract<keyof CourseAliasWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  | { name: 'course_code_not', alias?: string  } 
  | { name: 'course_code_in', alias?: string  } 
  | { name: 'course_code_not_in', alias?: string  } 
  | { name: 'course_code_lt', alias?: string  } 
  | { name: 'course_code_lte', alias?: string  } 
  | { name: 'course_code_gt', alias?: string  } 
  | { name: 'course_code_gte', alias?: string  } 
  | { name: 'course_code_contains', alias?: string  } 
  | { name: 'course_code_not_contains', alias?: string  } 
  | { name: 'course_code_starts_with', alias?: string  } 
  | { name: 'course_code_not_starts_with', alias?: string  } 
  | { name: 'course_code_ends_with', alias?: string  } 
  | { name: 'course_code_not_ends_with', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CourseWhereUniqueInput {
  id?: undefined | null
  slug?: string | null
}
export type CourseWhereUniqueInputInputObject =
  | Extract<keyof CourseWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  
export interface CourseAliasWhereUniqueInput {
  id?: undefined | null
  course_code?: string | null
}
export type CourseAliasWhereUniqueInputInputObject =
  | Extract<keyof CourseAliasWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  
export interface CompletionWhereUniqueInput {
  id?: undefined | null
}
export type CompletionWhereUniqueInputInputObject =
  | Extract<keyof CompletionWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface CompletionRegisteredWhereUniqueInput {
  id?: undefined | null
}
export type CompletionRegisteredWhereUniqueInputInputObject =
  | Extract<keyof CompletionRegisteredWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface ServiceWhereUniqueInput {
  id?: undefined | null
}
export type ServiceWhereUniqueInputInputObject =
  | Extract<keyof ServiceWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface ServiceWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: ServiceWhereInput[]
  OR?: ServiceWhereInput[]
  NOT?: ServiceWhereInput[]
}
export type ServiceWhereInputInputObject =
  | Extract<keyof ServiceWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserCourseProgressWhereUniqueInput {
  id?: undefined | null
}
export type UserCourseProgressWhereUniqueInputInputObject =
  | Extract<keyof UserCourseProgressWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface UserCourseProgressWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  user?: UserWhereInput | null
  course?: CourseWhereInput | null
  AND?: UserCourseProgressWhereInput[]
  OR?: UserCourseProgressWhereInput[]
  NOT?: UserCourseProgressWhereInput[]
}
export type UserCourseProgressWhereInputInputObject =
  | Extract<keyof UserCourseProgressWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserCourseServiceProgressWhereUniqueInput {
  id?: undefined | null
}
export type UserCourseServiceProgressWhereUniqueInputInputObject =
  | Extract<keyof UserCourseServiceProgressWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface UserCourseServiceProgressWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  user?: UserWhereInput | null
  course?: CourseWhereInput | null
  service?: ServiceWhereInput | null
  AND?: UserCourseServiceProgressWhereInput[]
  OR?: UserCourseServiceProgressWhereInput[]
  NOT?: UserCourseServiceProgressWhereInput[]
}
export type UserCourseServiceProgressWhereInputInputObject =
  | Extract<keyof UserCourseServiceProgressWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'service', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserCreateInput {
  upstream_id?: number
  created_at?: string | null
  updated_at?: string | null
  first_name?: string | null
  last_name?: string | null
  username?: string
  email?: string
  administrator?: boolean
  student_number?: string | null
  real_student_number?: string | null
  completions?: CompletionCreateManyWithoutUserInput | null
  registered_completions?: CompletionRegisteredCreateManyWithoutUserInput | null
}
export type UserCreateInputInputObject =
  | Extract<keyof UserCreateInput, string>
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'completions', alias?: string  } 
  | { name: 'registered_completions', alias?: string  } 
  
export interface CompletionCreateManyWithoutUserInput {
  create?: CompletionCreateWithoutUserInput[]
  connect?: CompletionWhereUniqueInput[]
}
export type CompletionCreateManyWithoutUserInputInputObject =
  | Extract<keyof CompletionCreateManyWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CompletionCreateWithoutUserInput {
  created_at?: string | null
  updated_at?: string | null
  user_upstream_id?: number | null
  email?: string
  student_number?: string | null
  course?: CourseCreateOneInput
  completion_language?: string | null
}
export type CompletionCreateWithoutUserInputInputObject =
  | Extract<keyof CompletionCreateWithoutUserInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  
export interface CourseCreateOneInput {
  create?: CourseCreateInput | null
  connect?: CourseWhereUniqueInput | null
}
export type CourseCreateOneInputInputObject =
  | Extract<keyof CourseCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CourseCreateInput {
  created_at?: string | null
  updated_at?: string | null
  name?: string
  slug?: string
  open_university_courses?: CourseAliasCreateManyWithoutCourseInput | null
}
export type CourseCreateInputInputObject =
  | Extract<keyof CourseCreateInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'open_university_courses', alias?: string  } 
  
export interface CourseAliasCreateManyWithoutCourseInput {
  create?: CourseAliasCreateWithoutCourseInput[]
  connect?: CourseAliasWhereUniqueInput[]
}
export type CourseAliasCreateManyWithoutCourseInputInputObject =
  | Extract<keyof CourseAliasCreateManyWithoutCourseInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CourseAliasCreateWithoutCourseInput {
  created_at?: string | null
  updated_at?: string | null
  course_code?: string
}
export type CourseAliasCreateWithoutCourseInputInputObject =
  | Extract<keyof CourseAliasCreateWithoutCourseInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  
export interface CompletionRegisteredCreateManyWithoutUserInput {
  create?: CompletionRegisteredCreateWithoutUserInput[]
  connect?: CompletionRegisteredWhereUniqueInput[]
}
export type CompletionRegisteredCreateManyWithoutUserInputInputObject =
  | Extract<keyof CompletionRegisteredCreateManyWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CompletionRegisteredCreateWithoutUserInput {
  created_at?: string | null
  updated_at?: string | null
  course?: CourseCreateOneInput
  real_student_number?: string
  organisation?: string
  completion?: CompletionCreateOneInput
}
export type CompletionRegisteredCreateWithoutUserInputInputObject =
  | Extract<keyof CompletionRegisteredCreateWithoutUserInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'completion', alias?: string  } 
  
export interface CompletionCreateOneInput {
  create?: CompletionCreateInput | null
  connect?: CompletionWhereUniqueInput | null
}
export type CompletionCreateOneInputInputObject =
  | Extract<keyof CompletionCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CompletionCreateInput {
  created_at?: string | null
  updated_at?: string | null
  user_upstream_id?: number | null
  email?: string
  student_number?: string | null
  user?: UserCreateOneWithoutCompletionsInput
  course?: CourseCreateOneInput
  completion_language?: string | null
}
export type CompletionCreateInputInputObject =
  | Extract<keyof CompletionCreateInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  
export interface UserCreateOneWithoutCompletionsInput {
  create?: UserCreateWithoutCompletionsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutCompletionsInputInputObject =
  | Extract<keyof UserCreateOneWithoutCompletionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutCompletionsInput {
  upstream_id?: number
  created_at?: string | null
  updated_at?: string | null
  first_name?: string | null
  last_name?: string | null
  username?: string
  email?: string
  administrator?: boolean
  student_number?: string | null
  real_student_number?: string | null
  registered_completions?: CompletionRegisteredCreateManyWithoutUserInput | null
}
export type UserCreateWithoutCompletionsInputInputObject =
  | Extract<keyof UserCreateWithoutCompletionsInput, string>
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'registered_completions', alias?: string  } 
  
export interface UserUpdateInput {
  upstream_id?: number | null
  created_at?: string | null
  updated_at?: string | null
  first_name?: string | null
  last_name?: string | null
  username?: string | null
  email?: string | null
  administrator?: boolean | null
  student_number?: string | null
  real_student_number?: string | null
  completions?: CompletionUpdateManyWithoutUserInput | null
  registered_completions?: CompletionRegisteredUpdateManyWithoutUserInput | null
}
export type UserUpdateInputInputObject =
  | Extract<keyof UserUpdateInput, string>
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'completions', alias?: string  } 
  | { name: 'registered_completions', alias?: string  } 
  
export interface CompletionUpdateManyWithoutUserInput {
  create?: CompletionCreateWithoutUserInput[]
  delete?: CompletionWhereUniqueInput[]
  connect?: CompletionWhereUniqueInput[]
  set?: CompletionWhereUniqueInput[]
  disconnect?: CompletionWhereUniqueInput[]
  update?: CompletionUpdateWithWhereUniqueWithoutUserInput[]
  upsert?: CompletionUpsertWithWhereUniqueWithoutUserInput[]
  deleteMany?: CompletionScalarWhereInput[]
  updateMany?: CompletionUpdateManyWithWhereNestedInput[]
}
export type CompletionUpdateManyWithoutUserInputInputObject =
  | Extract<keyof CompletionUpdateManyWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface CompletionUpdateWithWhereUniqueWithoutUserInput {
  where?: CompletionWhereUniqueInput
  data?: CompletionUpdateWithoutUserDataInput
}
export type CompletionUpdateWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof CompletionUpdateWithWhereUniqueWithoutUserInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface CompletionUpdateWithoutUserDataInput {
  created_at?: string | null
  updated_at?: string | null
  user_upstream_id?: number | null
  email?: string | null
  student_number?: string | null
  course?: CourseUpdateOneRequiredInput | null
  completion_language?: string | null
}
export type CompletionUpdateWithoutUserDataInputInputObject =
  | Extract<keyof CompletionUpdateWithoutUserDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  
export interface CourseUpdateOneRequiredInput {
  create?: CourseCreateInput | null
  update?: CourseUpdateDataInput | null
  upsert?: CourseUpsertNestedInput | null
  connect?: CourseWhereUniqueInput | null
}
export type CourseUpdateOneRequiredInputInputObject =
  | Extract<keyof CourseUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CourseUpdateDataInput {
  created_at?: string | null
  updated_at?: string | null
  name?: string | null
  slug?: string | null
  open_university_courses?: CourseAliasUpdateManyWithoutCourseInput | null
}
export type CourseUpdateDataInputInputObject =
  | Extract<keyof CourseUpdateDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'open_university_courses', alias?: string  } 
  
export interface CourseAliasUpdateManyWithoutCourseInput {
  create?: CourseAliasCreateWithoutCourseInput[]
  delete?: CourseAliasWhereUniqueInput[]
  connect?: CourseAliasWhereUniqueInput[]
  set?: CourseAliasWhereUniqueInput[]
  disconnect?: CourseAliasWhereUniqueInput[]
  update?: CourseAliasUpdateWithWhereUniqueWithoutCourseInput[]
  upsert?: CourseAliasUpsertWithWhereUniqueWithoutCourseInput[]
  deleteMany?: CourseAliasScalarWhereInput[]
  updateMany?: CourseAliasUpdateManyWithWhereNestedInput[]
}
export type CourseAliasUpdateManyWithoutCourseInputInputObject =
  | Extract<keyof CourseAliasUpdateManyWithoutCourseInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface CourseAliasUpdateWithWhereUniqueWithoutCourseInput {
  where?: CourseAliasWhereUniqueInput
  data?: CourseAliasUpdateWithoutCourseDataInput
}
export type CourseAliasUpdateWithWhereUniqueWithoutCourseInputInputObject =
  | Extract<keyof CourseAliasUpdateWithWhereUniqueWithoutCourseInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface CourseAliasUpdateWithoutCourseDataInput {
  created_at?: string | null
  updated_at?: string | null
  course_code?: string | null
}
export type CourseAliasUpdateWithoutCourseDataInputInputObject =
  | Extract<keyof CourseAliasUpdateWithoutCourseDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  
export interface CourseAliasUpsertWithWhereUniqueWithoutCourseInput {
  where?: CourseAliasWhereUniqueInput
  update?: CourseAliasUpdateWithoutCourseDataInput
  create?: CourseAliasCreateWithoutCourseInput
}
export type CourseAliasUpsertWithWhereUniqueWithoutCourseInputInputObject =
  | Extract<keyof CourseAliasUpsertWithWhereUniqueWithoutCourseInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CourseAliasScalarWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  course_code?: string | null
  course_code_not?: string | null
  course_code_in?: string[]
  course_code_not_in?: string[]
  course_code_lt?: string | null
  course_code_lte?: string | null
  course_code_gt?: string | null
  course_code_gte?: string | null
  course_code_contains?: string | null
  course_code_not_contains?: string | null
  course_code_starts_with?: string | null
  course_code_not_starts_with?: string | null
  course_code_ends_with?: string | null
  course_code_not_ends_with?: string | null
  AND?: CourseAliasScalarWhereInput[]
  OR?: CourseAliasScalarWhereInput[]
  NOT?: CourseAliasScalarWhereInput[]
}
export type CourseAliasScalarWhereInputInputObject =
  | Extract<keyof CourseAliasScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  | { name: 'course_code_not', alias?: string  } 
  | { name: 'course_code_in', alias?: string  } 
  | { name: 'course_code_not_in', alias?: string  } 
  | { name: 'course_code_lt', alias?: string  } 
  | { name: 'course_code_lte', alias?: string  } 
  | { name: 'course_code_gt', alias?: string  } 
  | { name: 'course_code_gte', alias?: string  } 
  | { name: 'course_code_contains', alias?: string  } 
  | { name: 'course_code_not_contains', alias?: string  } 
  | { name: 'course_code_starts_with', alias?: string  } 
  | { name: 'course_code_not_starts_with', alias?: string  } 
  | { name: 'course_code_ends_with', alias?: string  } 
  | { name: 'course_code_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CourseAliasUpdateManyWithWhereNestedInput {
  where?: CourseAliasScalarWhereInput
  data?: CourseAliasUpdateManyDataInput
}
export type CourseAliasUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof CourseAliasUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface CourseAliasUpdateManyDataInput {
  created_at?: string | null
  updated_at?: string | null
  course_code?: string | null
}
export type CourseAliasUpdateManyDataInputInputObject =
  | Extract<keyof CourseAliasUpdateManyDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  
export interface CourseUpsertNestedInput {
  update?: CourseUpdateDataInput
  create?: CourseCreateInput
}
export type CourseUpsertNestedInputInputObject =
  | Extract<keyof CourseUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CompletionUpsertWithWhereUniqueWithoutUserInput {
  where?: CompletionWhereUniqueInput
  update?: CompletionUpdateWithoutUserDataInput
  create?: CompletionCreateWithoutUserInput
}
export type CompletionUpsertWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof CompletionUpsertWithWhereUniqueWithoutUserInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CompletionScalarWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  user_upstream_id?: number | null
  user_upstream_id_not?: number | null
  user_upstream_id_in?: number[]
  user_upstream_id_not_in?: number[]
  user_upstream_id_lt?: number | null
  user_upstream_id_lte?: number | null
  user_upstream_id_gt?: number | null
  user_upstream_id_gte?: number | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  student_number?: string | null
  student_number_not?: string | null
  student_number_in?: string[]
  student_number_not_in?: string[]
  student_number_lt?: string | null
  student_number_lte?: string | null
  student_number_gt?: string | null
  student_number_gte?: string | null
  student_number_contains?: string | null
  student_number_not_contains?: string | null
  student_number_starts_with?: string | null
  student_number_not_starts_with?: string | null
  student_number_ends_with?: string | null
  student_number_not_ends_with?: string | null
  completion_language?: string | null
  completion_language_not?: string | null
  completion_language_in?: string[]
  completion_language_not_in?: string[]
  completion_language_lt?: string | null
  completion_language_lte?: string | null
  completion_language_gt?: string | null
  completion_language_gte?: string | null
  completion_language_contains?: string | null
  completion_language_not_contains?: string | null
  completion_language_starts_with?: string | null
  completion_language_not_starts_with?: string | null
  completion_language_ends_with?: string | null
  completion_language_not_ends_with?: string | null
  AND?: CompletionScalarWhereInput[]
  OR?: CompletionScalarWhereInput[]
  NOT?: CompletionScalarWhereInput[]
}
export type CompletionScalarWhereInputInputObject =
  | Extract<keyof CompletionScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'user_upstream_id_not', alias?: string  } 
  | { name: 'user_upstream_id_in', alias?: string  } 
  | { name: 'user_upstream_id_not_in', alias?: string  } 
  | { name: 'user_upstream_id_lt', alias?: string  } 
  | { name: 'user_upstream_id_lte', alias?: string  } 
  | { name: 'user_upstream_id_gt', alias?: string  } 
  | { name: 'user_upstream_id_gte', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'student_number_not', alias?: string  } 
  | { name: 'student_number_in', alias?: string  } 
  | { name: 'student_number_not_in', alias?: string  } 
  | { name: 'student_number_lt', alias?: string  } 
  | { name: 'student_number_lte', alias?: string  } 
  | { name: 'student_number_gt', alias?: string  } 
  | { name: 'student_number_gte', alias?: string  } 
  | { name: 'student_number_contains', alias?: string  } 
  | { name: 'student_number_not_contains', alias?: string  } 
  | { name: 'student_number_starts_with', alias?: string  } 
  | { name: 'student_number_not_starts_with', alias?: string  } 
  | { name: 'student_number_ends_with', alias?: string  } 
  | { name: 'student_number_not_ends_with', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  | { name: 'completion_language_not', alias?: string  } 
  | { name: 'completion_language_in', alias?: string  } 
  | { name: 'completion_language_not_in', alias?: string  } 
  | { name: 'completion_language_lt', alias?: string  } 
  | { name: 'completion_language_lte', alias?: string  } 
  | { name: 'completion_language_gt', alias?: string  } 
  | { name: 'completion_language_gte', alias?: string  } 
  | { name: 'completion_language_contains', alias?: string  } 
  | { name: 'completion_language_not_contains', alias?: string  } 
  | { name: 'completion_language_starts_with', alias?: string  } 
  | { name: 'completion_language_not_starts_with', alias?: string  } 
  | { name: 'completion_language_ends_with', alias?: string  } 
  | { name: 'completion_language_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CompletionUpdateManyWithWhereNestedInput {
  where?: CompletionScalarWhereInput
  data?: CompletionUpdateManyDataInput
}
export type CompletionUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof CompletionUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface CompletionUpdateManyDataInput {
  created_at?: string | null
  updated_at?: string | null
  user_upstream_id?: number | null
  email?: string | null
  student_number?: string | null
  completion_language?: string | null
}
export type CompletionUpdateManyDataInputInputObject =
  | Extract<keyof CompletionUpdateManyDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  
export interface CompletionRegisteredUpdateManyWithoutUserInput {
  create?: CompletionRegisteredCreateWithoutUserInput[]
  delete?: CompletionRegisteredWhereUniqueInput[]
  connect?: CompletionRegisteredWhereUniqueInput[]
  set?: CompletionRegisteredWhereUniqueInput[]
  disconnect?: CompletionRegisteredWhereUniqueInput[]
  update?: CompletionRegisteredUpdateWithWhereUniqueWithoutUserInput[]
  upsert?: CompletionRegisteredUpsertWithWhereUniqueWithoutUserInput[]
  deleteMany?: CompletionRegisteredScalarWhereInput[]
  updateMany?: CompletionRegisteredUpdateManyWithWhereNestedInput[]
}
export type CompletionRegisteredUpdateManyWithoutUserInputInputObject =
  | Extract<keyof CompletionRegisteredUpdateManyWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface CompletionRegisteredUpdateWithWhereUniqueWithoutUserInput {
  where?: CompletionRegisteredWhereUniqueInput
  data?: CompletionRegisteredUpdateWithoutUserDataInput
}
export type CompletionRegisteredUpdateWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof CompletionRegisteredUpdateWithWhereUniqueWithoutUserInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface CompletionRegisteredUpdateWithoutUserDataInput {
  created_at?: string | null
  updated_at?: string | null
  course?: CourseUpdateOneRequiredInput | null
  real_student_number?: string | null
  organisation?: string | null
  completion?: CompletionUpdateOneRequiredInput | null
}
export type CompletionRegisteredUpdateWithoutUserDataInputInputObject =
  | Extract<keyof CompletionRegisteredUpdateWithoutUserDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'completion', alias?: string  } 
  
export interface CompletionUpdateOneRequiredInput {
  create?: CompletionCreateInput | null
  update?: CompletionUpdateDataInput | null
  upsert?: CompletionUpsertNestedInput | null
  connect?: CompletionWhereUniqueInput | null
}
export type CompletionUpdateOneRequiredInputInputObject =
  | Extract<keyof CompletionUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CompletionUpdateDataInput {
  created_at?: string | null
  updated_at?: string | null
  user_upstream_id?: number | null
  email?: string | null
  student_number?: string | null
  user?: UserUpdateOneRequiredWithoutCompletionsInput | null
  course?: CourseUpdateOneRequiredInput | null
  completion_language?: string | null
}
export type CompletionUpdateDataInputInputObject =
  | Extract<keyof CompletionUpdateDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutCompletionsInput {
  create?: UserCreateWithoutCompletionsInput | null
  update?: UserUpdateWithoutCompletionsDataInput | null
  upsert?: UserUpsertWithoutCompletionsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutCompletionsInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutCompletionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutCompletionsDataInput {
  upstream_id?: number | null
  created_at?: string | null
  updated_at?: string | null
  first_name?: string | null
  last_name?: string | null
  username?: string | null
  email?: string | null
  administrator?: boolean | null
  student_number?: string | null
  real_student_number?: string | null
  registered_completions?: CompletionRegisteredUpdateManyWithoutUserInput | null
}
export type UserUpdateWithoutCompletionsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutCompletionsDataInput, string>
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'registered_completions', alias?: string  } 
  
export interface UserUpsertWithoutCompletionsInput {
  update?: UserUpdateWithoutCompletionsDataInput
  create?: UserCreateWithoutCompletionsInput
}
export type UserUpsertWithoutCompletionsInputInputObject =
  | Extract<keyof UserUpsertWithoutCompletionsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CompletionUpsertNestedInput {
  update?: CompletionUpdateDataInput
  create?: CompletionCreateInput
}
export type CompletionUpsertNestedInputInputObject =
  | Extract<keyof CompletionUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CompletionRegisteredUpsertWithWhereUniqueWithoutUserInput {
  where?: CompletionRegisteredWhereUniqueInput
  update?: CompletionRegisteredUpdateWithoutUserDataInput
  create?: CompletionRegisteredCreateWithoutUserInput
}
export type CompletionRegisteredUpsertWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof CompletionRegisteredUpsertWithWhereUniqueWithoutUserInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CompletionRegisteredScalarWhereInput {
  id?: undefined | null
  id_not?: undefined | null
  id_in?: undefined[]
  id_not_in?: undefined[]
  id_lt?: undefined | null
  id_lte?: undefined | null
  id_gt?: undefined | null
  id_gte?: undefined | null
  id_contains?: undefined | null
  id_not_contains?: undefined | null
  id_starts_with?: undefined | null
  id_not_starts_with?: undefined | null
  id_ends_with?: undefined | null
  id_not_ends_with?: undefined | null
  created_at?: string | null
  created_at_not?: string | null
  created_at_in?: string[]
  created_at_not_in?: string[]
  created_at_lt?: string | null
  created_at_lte?: string | null
  created_at_gt?: string | null
  created_at_gte?: string | null
  updated_at?: string | null
  updated_at_not?: string | null
  updated_at_in?: string[]
  updated_at_not_in?: string[]
  updated_at_lt?: string | null
  updated_at_lte?: string | null
  updated_at_gt?: string | null
  updated_at_gte?: string | null
  real_student_number?: string | null
  real_student_number_not?: string | null
  real_student_number_in?: string[]
  real_student_number_not_in?: string[]
  real_student_number_lt?: string | null
  real_student_number_lte?: string | null
  real_student_number_gt?: string | null
  real_student_number_gte?: string | null
  real_student_number_contains?: string | null
  real_student_number_not_contains?: string | null
  real_student_number_starts_with?: string | null
  real_student_number_not_starts_with?: string | null
  real_student_number_ends_with?: string | null
  real_student_number_not_ends_with?: string | null
  organisation?: string | null
  organisation_not?: string | null
  organisation_in?: string[]
  organisation_not_in?: string[]
  organisation_lt?: string | null
  organisation_lte?: string | null
  organisation_gt?: string | null
  organisation_gte?: string | null
  organisation_contains?: string | null
  organisation_not_contains?: string | null
  organisation_starts_with?: string | null
  organisation_not_starts_with?: string | null
  organisation_ends_with?: string | null
  organisation_not_ends_with?: string | null
  AND?: CompletionRegisteredScalarWhereInput[]
  OR?: CompletionRegisteredScalarWhereInput[]
  NOT?: CompletionRegisteredScalarWhereInput[]
}
export type CompletionRegisteredScalarWhereInputInputObject =
  | Extract<keyof CompletionRegisteredScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'created_at_not', alias?: string  } 
  | { name: 'created_at_in', alias?: string  } 
  | { name: 'created_at_not_in', alias?: string  } 
  | { name: 'created_at_lt', alias?: string  } 
  | { name: 'created_at_lte', alias?: string  } 
  | { name: 'created_at_gt', alias?: string  } 
  | { name: 'created_at_gte', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'updated_at_not', alias?: string  } 
  | { name: 'updated_at_in', alias?: string  } 
  | { name: 'updated_at_not_in', alias?: string  } 
  | { name: 'updated_at_lt', alias?: string  } 
  | { name: 'updated_at_lte', alias?: string  } 
  | { name: 'updated_at_gt', alias?: string  } 
  | { name: 'updated_at_gte', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'real_student_number_not', alias?: string  } 
  | { name: 'real_student_number_in', alias?: string  } 
  | { name: 'real_student_number_not_in', alias?: string  } 
  | { name: 'real_student_number_lt', alias?: string  } 
  | { name: 'real_student_number_lte', alias?: string  } 
  | { name: 'real_student_number_gt', alias?: string  } 
  | { name: 'real_student_number_gte', alias?: string  } 
  | { name: 'real_student_number_contains', alias?: string  } 
  | { name: 'real_student_number_not_contains', alias?: string  } 
  | { name: 'real_student_number_starts_with', alias?: string  } 
  | { name: 'real_student_number_not_starts_with', alias?: string  } 
  | { name: 'real_student_number_ends_with', alias?: string  } 
  | { name: 'real_student_number_not_ends_with', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'organisation_not', alias?: string  } 
  | { name: 'organisation_in', alias?: string  } 
  | { name: 'organisation_not_in', alias?: string  } 
  | { name: 'organisation_lt', alias?: string  } 
  | { name: 'organisation_lte', alias?: string  } 
  | { name: 'organisation_gt', alias?: string  } 
  | { name: 'organisation_gte', alias?: string  } 
  | { name: 'organisation_contains', alias?: string  } 
  | { name: 'organisation_not_contains', alias?: string  } 
  | { name: 'organisation_starts_with', alias?: string  } 
  | { name: 'organisation_not_starts_with', alias?: string  } 
  | { name: 'organisation_ends_with', alias?: string  } 
  | { name: 'organisation_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CompletionRegisteredUpdateManyWithWhereNestedInput {
  where?: CompletionRegisteredScalarWhereInput
  data?: CompletionRegisteredUpdateManyDataInput
}
export type CompletionRegisteredUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof CompletionRegisteredUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface CompletionRegisteredUpdateManyDataInput {
  created_at?: string | null
  updated_at?: string | null
  real_student_number?: string | null
  organisation?: string | null
}
export type CompletionRegisteredUpdateManyDataInputInputObject =
  | Extract<keyof CompletionRegisteredUpdateManyDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  
export interface UserUpdateManyMutationInput {
  upstream_id?: number | null
  created_at?: string | null
  updated_at?: string | null
  first_name?: string | null
  last_name?: string | null
  username?: string | null
  email?: string | null
  administrator?: boolean | null
  student_number?: string | null
  real_student_number?: string | null
}
export type UserUpdateManyMutationInputInputObject =
  | Extract<keyof UserUpdateManyMutationInput, string>
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  
export interface CourseUpdateInput {
  created_at?: string | null
  updated_at?: string | null
  name?: string | null
  slug?: string | null
  open_university_courses?: CourseAliasUpdateManyWithoutCourseInput | null
}
export type CourseUpdateInputInputObject =
  | Extract<keyof CourseUpdateInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  | { name: 'open_university_courses', alias?: string  } 
  
export interface CourseUpdateManyMutationInput {
  created_at?: string | null
  updated_at?: string | null
  name?: string | null
  slug?: string | null
}
export type CourseUpdateManyMutationInputInputObject =
  | Extract<keyof CourseUpdateManyMutationInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  
export interface CourseAliasCreateInput {
  created_at?: string | null
  updated_at?: string | null
  course_code?: string
  course?: CourseCreateOneWithoutOpen_university_coursesInput
}
export type CourseAliasCreateInputInputObject =
  | Extract<keyof CourseAliasCreateInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  | { name: 'course', alias?: string  } 
  
export interface CourseCreateOneWithoutOpen_university_coursesInput {
  create?: CourseCreateWithoutOpen_university_coursesInput | null
  connect?: CourseWhereUniqueInput | null
}
export type CourseCreateOneWithoutOpen_university_coursesInputInputObject =
  | Extract<keyof CourseCreateOneWithoutOpen_university_coursesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CourseCreateWithoutOpen_university_coursesInput {
  created_at?: string | null
  updated_at?: string | null
  name?: string
  slug?: string
}
export type CourseCreateWithoutOpen_university_coursesInputInputObject =
  | Extract<keyof CourseCreateWithoutOpen_university_coursesInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  
export interface CourseAliasUpdateInput {
  created_at?: string | null
  updated_at?: string | null
  course_code?: string | null
  course?: CourseUpdateOneRequiredWithoutOpen_university_coursesInput | null
}
export type CourseAliasUpdateInputInputObject =
  | Extract<keyof CourseAliasUpdateInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  | { name: 'course', alias?: string  } 
  
export interface CourseUpdateOneRequiredWithoutOpen_university_coursesInput {
  create?: CourseCreateWithoutOpen_university_coursesInput | null
  update?: CourseUpdateWithoutOpen_university_coursesDataInput | null
  upsert?: CourseUpsertWithoutOpen_university_coursesInput | null
  connect?: CourseWhereUniqueInput | null
}
export type CourseUpdateOneRequiredWithoutOpen_university_coursesInputInputObject =
  | Extract<keyof CourseUpdateOneRequiredWithoutOpen_university_coursesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CourseUpdateWithoutOpen_university_coursesDataInput {
  created_at?: string | null
  updated_at?: string | null
  name?: string | null
  slug?: string | null
}
export type CourseUpdateWithoutOpen_university_coursesDataInputInputObject =
  | Extract<keyof CourseUpdateWithoutOpen_university_coursesDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'slug', alias?: string  } 
  
export interface CourseUpsertWithoutOpen_university_coursesInput {
  update?: CourseUpdateWithoutOpen_university_coursesDataInput
  create?: CourseCreateWithoutOpen_university_coursesInput
}
export type CourseUpsertWithoutOpen_university_coursesInputInputObject =
  | Extract<keyof CourseUpsertWithoutOpen_university_coursesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CourseAliasUpdateManyMutationInput {
  created_at?: string | null
  updated_at?: string | null
  course_code?: string | null
}
export type CourseAliasUpdateManyMutationInputInputObject =
  | Extract<keyof CourseAliasUpdateManyMutationInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'course_code', alias?: string  } 
  
export interface CompletionUpdateInput {
  created_at?: string | null
  updated_at?: string | null
  user_upstream_id?: number | null
  email?: string | null
  student_number?: string | null
  user?: UserUpdateOneRequiredWithoutCompletionsInput | null
  course?: CourseUpdateOneRequiredInput | null
  completion_language?: string | null
}
export type CompletionUpdateInputInputObject =
  | Extract<keyof CompletionUpdateInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  
export interface CompletionUpdateManyMutationInput {
  created_at?: string | null
  updated_at?: string | null
  user_upstream_id?: number | null
  email?: string | null
  student_number?: string | null
  completion_language?: string | null
}
export type CompletionUpdateManyMutationInputInputObject =
  | Extract<keyof CompletionUpdateManyMutationInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user_upstream_id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'completion_language', alias?: string  } 
  
export interface CompletionRegisteredCreateInput {
  created_at?: string | null
  updated_at?: string | null
  user?: UserCreateOneWithoutRegistered_completionsInput
  course?: CourseCreateOneInput
  real_student_number?: string
  organisation?: string
  completion?: CompletionCreateOneInput
}
export type CompletionRegisteredCreateInputInputObject =
  | Extract<keyof CompletionRegisteredCreateInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'completion', alias?: string  } 
  
export interface UserCreateOneWithoutRegistered_completionsInput {
  create?: UserCreateWithoutRegistered_completionsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutRegistered_completionsInputInputObject =
  | Extract<keyof UserCreateOneWithoutRegistered_completionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutRegistered_completionsInput {
  upstream_id?: number
  created_at?: string | null
  updated_at?: string | null
  first_name?: string | null
  last_name?: string | null
  username?: string
  email?: string
  administrator?: boolean
  student_number?: string | null
  real_student_number?: string | null
  completions?: CompletionCreateManyWithoutUserInput | null
}
export type UserCreateWithoutRegistered_completionsInputInputObject =
  | Extract<keyof UserCreateWithoutRegistered_completionsInput, string>
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'completions', alias?: string  } 
  
export interface CompletionRegisteredUpdateInput {
  created_at?: string | null
  updated_at?: string | null
  user?: UserUpdateOneRequiredWithoutRegistered_completionsInput | null
  course?: CourseUpdateOneRequiredInput | null
  real_student_number?: string | null
  organisation?: string | null
  completion?: CompletionUpdateOneRequiredInput | null
}
export type CompletionRegisteredUpdateInputInputObject =
  | Extract<keyof CompletionRegisteredUpdateInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'completion', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutRegistered_completionsInput {
  create?: UserCreateWithoutRegistered_completionsInput | null
  update?: UserUpdateWithoutRegistered_completionsDataInput | null
  upsert?: UserUpsertWithoutRegistered_completionsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutRegistered_completionsInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutRegistered_completionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutRegistered_completionsDataInput {
  upstream_id?: number | null
  created_at?: string | null
  updated_at?: string | null
  first_name?: string | null
  last_name?: string | null
  username?: string | null
  email?: string | null
  administrator?: boolean | null
  student_number?: string | null
  real_student_number?: string | null
  completions?: CompletionUpdateManyWithoutUserInput | null
}
export type UserUpdateWithoutRegistered_completionsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutRegistered_completionsDataInput, string>
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'completions', alias?: string  } 
  
export interface UserUpsertWithoutRegistered_completionsInput {
  update?: UserUpdateWithoutRegistered_completionsDataInput
  create?: UserCreateWithoutRegistered_completionsInput
}
export type UserUpsertWithoutRegistered_completionsInputInputObject =
  | Extract<keyof UserUpsertWithoutRegistered_completionsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CompletionRegisteredUpdateManyMutationInput {
  created_at?: string | null
  updated_at?: string | null
  real_student_number?: string | null
  organisation?: string | null
}
export type CompletionRegisteredUpdateManyMutationInputInputObject =
  | Extract<keyof CompletionRegisteredUpdateManyMutationInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  
export interface ServiceCreateInput {
  created_at?: string | null
  updated_at?: string | null
  url?: string
}
export type ServiceCreateInputInputObject =
  | Extract<keyof ServiceCreateInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface ServiceUpdateInput {
  created_at?: string | null
  updated_at?: string | null
  url?: string | null
}
export type ServiceUpdateInputInputObject =
  | Extract<keyof ServiceUpdateInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface ServiceUpdateManyMutationInput {
  created_at?: string | null
  updated_at?: string | null
  url?: string | null
}
export type ServiceUpdateManyMutationInputInputObject =
  | Extract<keyof ServiceUpdateManyMutationInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface UserCourseProgressCreateInput {
  user?: UserCreateOneInput
  course?: CourseCreateOneInput
  progress?: undefined
}
export type UserCourseProgressCreateInputInputObject =
  | Extract<keyof UserCourseProgressCreateInput, string>
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'progress', alias?: string  } 
  
export interface UserCreateOneInput {
  create?: UserCreateInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneInputInputObject =
  | Extract<keyof UserCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCourseProgressUpdateInput {
  user?: UserUpdateOneRequiredInput | null
  course?: CourseUpdateOneRequiredInput | null
  progress?: undefined | null
}
export type UserCourseProgressUpdateInputInputObject =
  | Extract<keyof UserCourseProgressUpdateInput, string>
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'progress', alias?: string  } 
  
export interface UserUpdateOneRequiredInput {
  create?: UserCreateInput | null
  update?: UserUpdateDataInput | null
  upsert?: UserUpsertNestedInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredInputInputObject =
  | Extract<keyof UserUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateDataInput {
  upstream_id?: number | null
  created_at?: string | null
  updated_at?: string | null
  first_name?: string | null
  last_name?: string | null
  username?: string | null
  email?: string | null
  administrator?: boolean | null
  student_number?: string | null
  real_student_number?: string | null
  completions?: CompletionUpdateManyWithoutUserInput | null
  registered_completions?: CompletionRegisteredUpdateManyWithoutUserInput | null
}
export type UserUpdateDataInputInputObject =
  | Extract<keyof UserUpdateDataInput, string>
  | { name: 'upstream_id', alias?: string  } 
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'first_name', alias?: string  } 
  | { name: 'last_name', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'administrator', alias?: string  } 
  | { name: 'student_number', alias?: string  } 
  | { name: 'real_student_number', alias?: string  } 
  | { name: 'completions', alias?: string  } 
  | { name: 'registered_completions', alias?: string  } 
  
export interface UserUpsertNestedInput {
  update?: UserUpdateDataInput
  create?: UserCreateInput
}
export type UserUpsertNestedInputInputObject =
  | Extract<keyof UserUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserCourseProgressUpdateManyMutationInput {
  progress?: undefined | null
}
export type UserCourseProgressUpdateManyMutationInputInputObject =
  | Extract<keyof UserCourseProgressUpdateManyMutationInput, string>
  | { name: 'progress', alias?: string  } 
  
export interface UserCourseServiceProgressCreateInput {
  user?: UserCreateOneInput
  course?: CourseCreateOneInput
  service?: ServiceCreateOneInput
  progress?: undefined
}
export type UserCourseServiceProgressCreateInputInputObject =
  | Extract<keyof UserCourseServiceProgressCreateInput, string>
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'service', alias?: string  } 
  | { name: 'progress', alias?: string  } 
  
export interface ServiceCreateOneInput {
  create?: ServiceCreateInput | null
  connect?: ServiceWhereUniqueInput | null
}
export type ServiceCreateOneInputInputObject =
  | Extract<keyof ServiceCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCourseServiceProgressUpdateInput {
  user?: UserUpdateOneRequiredInput | null
  course?: CourseUpdateOneRequiredInput | null
  service?: ServiceUpdateOneRequiredInput | null
  progress?: undefined | null
}
export type UserCourseServiceProgressUpdateInputInputObject =
  | Extract<keyof UserCourseServiceProgressUpdateInput, string>
  | { name: 'user', alias?: string  } 
  | { name: 'course', alias?: string  } 
  | { name: 'service', alias?: string  } 
  | { name: 'progress', alias?: string  } 
  
export interface ServiceUpdateOneRequiredInput {
  create?: ServiceCreateInput | null
  update?: ServiceUpdateDataInput | null
  upsert?: ServiceUpsertNestedInput | null
  connect?: ServiceWhereUniqueInput | null
}
export type ServiceUpdateOneRequiredInputInputObject =
  | Extract<keyof ServiceUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ServiceUpdateDataInput {
  created_at?: string | null
  updated_at?: string | null
  url?: string | null
}
export type ServiceUpdateDataInputInputObject =
  | Extract<keyof ServiceUpdateDataInput, string>
  | { name: 'created_at', alias?: string  } 
  | { name: 'updated_at', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface ServiceUpsertNestedInput {
  update?: ServiceUpdateDataInput
  create?: ServiceCreateInput
}
export type ServiceUpsertNestedInputInputObject =
  | Extract<keyof ServiceUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserCourseServiceProgressUpdateManyMutationInput {
  progress?: undefined | null
}
export type UserCourseServiceProgressUpdateManyMutationInputInputObject =
  | Extract<keyof UserCourseServiceProgressUpdateManyMutationInput, string>
  | { name: 'progress', alias?: string  } 
  
export interface UserSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserWhereInput | null
  AND?: UserSubscriptionWhereInput[]
  OR?: UserSubscriptionWhereInput[]
  NOT?: UserSubscriptionWhereInput[]
}
export type UserSubscriptionWhereInputInputObject =
  | Extract<keyof UserSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CourseSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: CourseWhereInput | null
  AND?: CourseSubscriptionWhereInput[]
  OR?: CourseSubscriptionWhereInput[]
  NOT?: CourseSubscriptionWhereInput[]
}
export type CourseSubscriptionWhereInputInputObject =
  | Extract<keyof CourseSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CourseAliasSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: CourseAliasWhereInput | null
  AND?: CourseAliasSubscriptionWhereInput[]
  OR?: CourseAliasSubscriptionWhereInput[]
  NOT?: CourseAliasSubscriptionWhereInput[]
}
export type CourseAliasSubscriptionWhereInputInputObject =
  | Extract<keyof CourseAliasSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CompletionSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: CompletionWhereInput | null
  AND?: CompletionSubscriptionWhereInput[]
  OR?: CompletionSubscriptionWhereInput[]
  NOT?: CompletionSubscriptionWhereInput[]
}
export type CompletionSubscriptionWhereInputInputObject =
  | Extract<keyof CompletionSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CompletionRegisteredSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: CompletionRegisteredWhereInput | null
  AND?: CompletionRegisteredSubscriptionWhereInput[]
  OR?: CompletionRegisteredSubscriptionWhereInput[]
  NOT?: CompletionRegisteredSubscriptionWhereInput[]
}
export type CompletionRegisteredSubscriptionWhereInputInputObject =
  | Extract<keyof CompletionRegisteredSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ServiceSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ServiceWhereInput | null
  AND?: ServiceSubscriptionWhereInput[]
  OR?: ServiceSubscriptionWhereInput[]
  NOT?: ServiceSubscriptionWhereInput[]
}
export type ServiceSubscriptionWhereInputInputObject =
  | Extract<keyof ServiceSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserCourseProgressSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserCourseProgressWhereInput | null
  AND?: UserCourseProgressSubscriptionWhereInput[]
  OR?: UserCourseProgressSubscriptionWhereInput[]
  NOT?: UserCourseProgressSubscriptionWhereInput[]
}
export type UserCourseProgressSubscriptionWhereInputInputObject =
  | Extract<keyof UserCourseProgressSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserCourseServiceProgressSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserCourseServiceProgressWhereInput | null
  AND?: UserCourseServiceProgressSubscriptionWhereInput[]
  OR?: UserCourseServiceProgressSubscriptionWhereInput[]
  NOT?: UserCourseServiceProgressSubscriptionWhereInput[]
}
export type UserCourseServiceProgressSubscriptionWhereInputInputObject =
  | Extract<keyof UserCourseServiceProgressSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type CompletionOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'created_at_ASC'
  | 'created_at_DESC'
  | 'updated_at_ASC'
  | 'updated_at_DESC'
  | 'user_upstream_id_ASC'
  | 'user_upstream_id_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'student_number_ASC'
  | 'student_number_DESC'
  | 'completion_language_ASC'
  | 'completion_language_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type CourseAliasOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'created_at_ASC'
  | 'created_at_DESC'
  | 'updated_at_ASC'
  | 'updated_at_DESC'
  | 'course_code_ASC'
  | 'course_code_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type CompletionRegisteredOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'created_at_ASC'
  | 'created_at_DESC'
  | 'updated_at_ASC'
  | 'updated_at_DESC'
  | 'real_student_number_ASC'
  | 'real_student_number_DESC'
  | 'organisation_ASC'
  | 'organisation_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type UserOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'upstream_id_ASC'
  | 'upstream_id_DESC'
  | 'created_at_ASC'
  | 'created_at_DESC'
  | 'updated_at_ASC'
  | 'updated_at_DESC'
  | 'first_name_ASC'
  | 'first_name_DESC'
  | 'last_name_ASC'
  | 'last_name_DESC'
  | 'username_ASC'
  | 'username_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'administrator_ASC'
  | 'administrator_DESC'
  | 'student_number_ASC'
  | 'student_number_DESC'
  | 'real_student_number_ASC'
  | 'real_student_number_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type CourseOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'created_at_ASC'
  | 'created_at_DESC'
  | 'updated_at_ASC'
  | 'updated_at_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'slug_ASC'
  | 'slug_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type ServiceOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'created_at_ASC'
  | 'created_at_DESC'
  | 'updated_at_ASC'
  | 'updated_at_DESC'
  | 'url_ASC'
  | 'url_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type UserCourseProgressOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'progress_ASC'
  | 'progress_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type UserCourseServiceProgressOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'progress_ASC'
  | 'progress_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  