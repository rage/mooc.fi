type User {
  id: UUID! @unique
  upstream_id: Int! @unique
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  first_name: String
  last_name: String
  username: String @unique
  email: String!
  administrator: Boolean!
  completed_enough: Boolean! @default(value: "false")
  student_number: String
  real_student_number: String
  completions: [Completion!]
}

type Course {
  id: UUID! @unique
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  name: String!
  slug: String! @unique
  open_university_courses: [OpenUniversityCourse!] @relation(name: "CourseToOpenUniversityCourse")
}

type OpenUniversityCourse {
  id: UUID! @unique
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  course_code: String! @unique
  course: Course! @relation(name: "CourseToOpenUniversityCourse")
}

type Completion {
  id: UUID! @unique 
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  "User's unique identifier. Should be used to deduplicate registered completions, since all the other fields can change."
  user_upstream_id: Int
  email: String!
  student_number: String
  user: User!
  course: Course! @relation(name: "CompletionToCourse")
  completion_language: String
}

type CompletionRegistered {
  id: UUID! @unique
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  user: User! @relation(name: "CompletionRegisteredToUser")
  course: Course! @relation(name: "CompletionRegisteredToCourse")
  real_student_number: String!
  organisation: String!
  completion: Completion!
}
